{"version":3,"sources":["assets/images/logo.png","Components/Footer/Footer.js","redux/actions/AuthActions.js","Components/Header/Header.js","redux/actions/AppActions.js","Components/Toast/SuccessToast.js","Components/Toast/ErrorToast.js","Components/Toast/index.js","apis/Domain.js","apis/axios-instance.js","redux/actions/actionTypes.js","Views/Registration/ForgotPassword/forgotPassword.jsx","apis/Endpoints/AuthEndpoints.js","apis/Network.js","apis/Services/AuthService.js","Components/CardComponent/CardComponent.js","redux/reducers/AppReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ResetReducer.js","redux/reducers/ExamReducer.js","redux/store.js","hooks/handleErrors.js","Views/Registration/Login/Login.jsx","Views/Registration/Register/RegisterInquiry.jsx","apis/Services/UploadService.js","Views/Registration/Register/RegisterInstructor/RegisterInstructor.jsx","Views/Registration/Register/RegisterStudent/RegisterStudent.jsx","hooks/showSuccessMsg.js","Views/Registration/ResetPassword/ResetPassword.jsx","hooks/useWindowWidth.js","Views/VerifyEmail/VerifyEmail.jsx","routes/AuthRoutes.js","apis/Services/ExamService.js","Views/Instructor/Exams/AddExam/AddExam.js","Components/QuestionComponents/AddationMethodsMenu.js","constants/Colors.js","constants/GlobalStyle.js","Components/QuestionComponents/BorderdQuestionController.js","redux/actions/ExamAction.js","Views/Instructor/Exams/AddExamQuestions/AddExamQuestions.js","Views/Instructor/Exams/Exams.js","apis/Services/QuestionService.js","Views/Instructor/Questions/Questions.js","Views/Instructor/Exams/SetExamOptions/SetExamOptions.js","Views/Instructor/Questions/QuestionTypes/MCQ.js","Views/Instructor/Questions/AddQuestionScreen.js","Components/AnsweredQuestion/McqAnswer.js","Views/Instructor/Questions/QuestionViewScreen.js","apis/Services/MarkExamService.js","Views/Instructor/Exams/ExamView/ExamOverview.js","Components/NoContentComponent/NoContentComponent.js","hooks/useImageResolver.js","Views/Instructor/Exams/ExamView/StudentsList.js","Views/Instructor/Exams/ExamView/index.js","Views/Instructor/Exams/ExamView/StudentSolvedExam.js","routes/InstructorRoutes.js","routes/MainRoutes.js","Views/Home/Home.js","Views/Student/TakePhoto/TakePhoto.jsx","Views/Student/ExamInstructions/ExamInstructions.jsx","apis/Endpoints/StudentEndpoints.js","apis/Services/StudentService.js","Views/Student/MyResults/index.js","Views/Student/ShowExams/ShowExams.jsx","Views/Student/Questions/MCQ/MCQ.jsx","routes/StudentRoutes.js","Views/Student/TakeExam/TakeExam.jsx","Views/Student/WellDone/WellDone.jsx","Views/Instructor/Classes/Classes.js","apis/Endpoints/InstructorEndpoints.js","apis/Services/InstructorService.js","Views/Profiles/Instructor-Profile/InstructorProfile.js","routes/UserRoutes.js","Views/Profiles/Student-Profile/StudentProfile.js","routes/index.js","Components/Dialogs/Alert.js","App.js","reportWebVitals.js","Theme/MaterialUiTheme.js","index.js"],"names":["iconStyle","fontSize","color","margin","cursor","isMobile","window","innerWidth","Footer","style","marginTop","className","height","src","Logo","alt","FacebookOutlined","InstagramOutlined","PhoneOutlined","Date","getFullYear","signin","setUserToken","type","payload","setUserType","Header","isAuth","useSelector","state","auth","userToken","userType","history","useHistory","dispatch","useDispatch","isInstructor","to","id","activeclassname","exact","onClick","localStorage","clear","push","LogoutOutlined","UserOutlined","showError","msg","showSuccess","showAlert","alertObject","Alert","React","forwardRef","props","ref","elevation","variant","SuccessToast","successMsg","app","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","severity","ErrorToast","errorMsg","autoHideDuration","index","DomainUrl","_axios","axios","create","baseURL","headers","interceptors","request","use","config","a","token","getItem","undefined","err","Promise","reject","response","data","ADD_EMAIL","connect","email_address","rst","email","saveEmail","actionTypes","useState","setEmail","onChange","e","target","value","placeholder","width","event","preventDefault","setItem","console","log","post","then","catch","error","AUTHENDPOINTS","login","url","method","verifyEmail","changePassword","logout","ResetPassword","Network","this","jwt","init","addAuth","fetch","mode","getHeaders","promise","ok","status","resolve","json","handleErrorsBasedOnStatus","originalHeaders","Accept","Authorization","AuthServices","values","body","JSON","stringify","CardComponent","children","title","initStates","initialState","ResetReducer","action","examQuestions","ExamReducer","newExamQuestions","newExamQuestion","filter","item","rootReducer","combineReducers","exam","question","QuestionReducer","middleware","applyMiddleware","thunk","store","createStore","HandleErrors","showErrorToast","message","String","includes","withRouter","password","setPassword","TextField","fullWidth","label","res","user","pathname","Registerinquiry","RegisterAsStudentHandler","RegisterAsInstructorHandler","MaxWidth","Component","UploadServices","file","formDate","FormData","append","Input","styled","display","RegisterInstructor","firstName","lastName","gender","phone","department","degree","school","confirmPassword","firstNameFormHandler","setState","lastNameFormHandler","genderHandler","emailFormHandler","phoneFormHandler","departmentFormHandler","degreeFormHandler","schoolFormHandler","passwordFormHandler","confirmPasswordFormHandler","isValidEmail","Boolean","toLowerCase","match","isValidName","name","isValidPhone","number","isPasswordMatch","validateData","selectedFile","registerHandler","validationMessage","uploadImage","image","userInfo","handleUploadClick","files","reader","FileReader","readAsDataURL","onloadend","photoName","personalImageUrl","result","bind","checked","htmlFor","Typography","accept","IconButton","component","loading","RegisterStudent","studentcode","studentCodeFormHandler","showSuccessMsg","setConfirmPassword","params","put","removeItem","getWindowWidth","VerifyEmail","codeValue","location","code","screenWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","onComplete","autoFocus","fieldHeight","fieldWidth","fields","AuthRoutes","path","Login","forgotPassword","RegisterInquiry","ExamServices","examMainInfo","examId","options","questions","get","answerData","delete","AddExam","useLocation","isEditMode","examOldData","initialValues","numberOfTrials","description","totalMark","duration","examSubject","startAt","moment","setMinutes","format","endAt","add","onSubmit","actions","editExamMainInfo","createNewExam","handleSubmit","handleChange","onBlur","handleBlur","errors","MobileDateTimePicker","minutesStep","inputFormat","onClose","setFieldTouched","date","selectedDate","setFieldValue","renderInput","AddationMethodsMenu","methods","anchorEl","setAnchorEl","handleClose","Menu","PaperProps","sx","overflow","mt","ml","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","map","MenuItem","function","displayName","length","Divider","Colors","ClickableView","div","Wrapper","Text","span","BorderdQuestionController","questionTitle","deleteFunction","saveAQuestion","questionData","AddExamQuestions","fromExamCreation","canSelectQuestionsForExam","examOldQuestions","setExamId","matchPath","setQuestions","savedQuestions","currentTarget","PlusCircleOutlined","removeSavedQuestionFromExam","prevState","questionText","submittedQuestions","question_id","addQuestionsToExam","StyledTableCell","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","white","fontWeight","StyledTableRow","TableRow","hover","border","Exams","exams","setExams","getExamsHandler","getMyExams","selectedExam","setSelectedExam","isExamNotCompleted","row","isSelectedExamPublished","selectedExamObject","find","isPublished","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","scope","Chip","size","icon","stopPropagation","MenuListProps","isWantToBePublish","examName","makeExamPublished","makeExamUnPublished","finally","makePublishHandler","header","details","alertFunction","deleteExam","newExams","QuestionServices","Questions","isSelectionMode","getMyQuestions","selectedQuestion","setSelectedQuestion","isAllSelected","every","isSelected","selectedQuestions","goBack","Checkbox","questionId","newQuestions","onCheckHandler","created_at","deleteQuestion","SetExamOptions","oldExamConfig","faceRecognition","faceDetection","questionsRandomOrder","plagiarismCheck","disableSwitchBrowser","gradingMethod","submittedValues","editExamOptions","setExamOptions","Switch","Label","DangerLabel","SuccessLabel","MCQ","initValues","getQuestionCreationRequest","MCQSCHEMA","yup","shape","required","correctAnswer","choise1","choise2","choise3","mcqChoices","mcq","mcq_answers","isCorrect","mcqCorrectAnswer","option","enableReinitialize","validationSchema","editRequest","editQuestion","answers","creationRequest","createMcqQuestion","multiline","rows","helperText","touched","AddQuestionScreen","oldQuestion","oldQuestionDetails","setOldQuestionDetails","getQuestionDetails","questionTypes","setQuestionTypes","questionType","setQuestionType","questionTypeSelectionMenuMarkup","select","disabled","marginInlineEnd","McqAnswer","choices","studentAnswer","markAsRight","markAsWrong","isMarked","questionMark","studentMark","formatedAnswer","answer","displayText","isCorrectStudentAnswer","Card","CardHeader","CardContent","FormControl","RadioGroup","defaultValue","choice","FormControlLabel","control","Radio","bottom","QuestionViewScreen","useParams","setQuestion","MarkExamServices","studentId","student_id","AntiCheatingTimeline","examConfig","isRandom","isDisableSwitch","isplagiarism","isFaceDetection","isFaceVerify","Timeline","TimelineItem","TimelineOppositeContent","m","textDecoration","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","ExamOverview","examConfigs","NoContentComponent","text","useImageResolver","imageName","StudentsList","students","getStudentExams","imageResolver","Button","markAllAutomatic","List","ListItem","ListItemButton","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","primary","secondary","mark","attempt","ExamView","selectedTab","setSelectedTab","URLSearchParams","search","getExamQuestions","studentAnswers","setStudentAnswers","getAllStudentsAnswers","solvedExams","setExamConfigs","getExamConfig","configuration","Box","Tabs","newValue","textColor","indicatorColor","Tab","StudentCard","isVerified","numberOfFaces","markAutoFun","objectFit","borderRadius","InstructorRoutes","studentExamResult","setStudentExamResult","getStudentAnswers","getSpecificStudentAnswers","studentName","markSpecificStudentAutomatic","solution","totalQuestionMark","manualMark","option_id","MainRoutes","minHeight","TakePhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","captured","clicked","audio","screenshotFormat","isPhotoTaken","setIsPhotoTaken","setNoOfFaces","setPhotoVerified","photoTakenHandler","img","faceDetectionData","faceVerificationData","applyFaceDetection","applyFaceVerification","verified","mustVerifyFace","CardActions","trigger","modal","lockScroll","close","startExamData","startExam","STUDENT_ENDPOINTS","register","getMyProfile","StudentServices","MyResults","getAllPublishedExams","getRemainingEndTime","examEndDate","diff","isSubmitted","Grid","alignItems","direction","goToInstructionsHandler","chosenOptionID","setChosenOptionID","chosenAnswer","setChosenAnswer","currentQuestionNumber","questionIndex","savedStudentAnswer","onChangeHandler","parseInt","isCheckedCondition","ansIndex","clickedPrevious","previousButtonDisabled","clickedNext","studentAnswerFunction","changeNextNameIntoFinish","StudentRoutes","ShowExams","ExamInstructions","setCurrentQuestionNumber","responseQuestions","getStudentExamAnswers","formatedAnswers","forEach","formatedQuestions","thisQuestionAnswer","clickedNextHandler","addAnswer","newQuestionNumber","submitExam","clickedPreviousHandler","getAnswer","My_Questions_Markup","Classes","INSTRUCTOR_ENDPOINTS","InstructorServices","InstructorProfile","instructorData","setInstructorData","instructor","UserRoutes","studentData","setStudentData","student","studentCode","Routes","closeHandler","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","App","_bootstrapFunction","Toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","main","ReactDOM","render","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter","document","getElementById"],"mappings":"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","file":"static/js/main.a4fbcef7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.18795106.png\";","import React from 'react'\nimport './Footer.css'\nimport Logo from '../../assets/images/logo.png'\nimport { InstagramOutlined, FacebookOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst iconStyle = {\n    fontSize: 36,\n    color: '#313131',\n    margin: '0px 12px',\n    cursor: 'pointer'\n}\n\nconst isMobile = window.innerWidth < 992;\nconst Footer = () => {\n    return (\n        <footer style={{marginTop:200}} className=\"Footer container\">\n            <div className=\"row justify-content-lg-center pl-3 p-lg-0\">\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                    <h5 className=\"text-grey my-3\">Test your student smartly.</h5>\n\n                    {!isMobile &&\n                        <div className=\"d-flex flex-row justify-content-center\">\n                            <FacebookOutlined style={iconStyle} />\n                            <InstagramOutlined style={iconStyle} />\n                            <PhoneOutlined style={iconStyle} />\n                        </div>\n                    }\n\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Menu</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">Home</li>\n                        <li className=\"mx-2\">Tours</li>\n                        <li className=\"mx-2\">Category</li>\n                        <li className=\"mx-2\">About Us</li>\n                    </ul>\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Support</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">FAQ</li>\n                        <li className=\"mx-2\">Terms & Conditions</li>\n                        <li className=\"mx-2\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {isMobile &&\n                    <div className=\"d-flex flex-row justify-content-center\">\n                        <FacebookOutlined style={iconStyle} />\n                        <InstagramOutlined style={iconStyle} />\n                        <PhoneOutlined style={iconStyle} />\n                    </div>\n                }\n                <small className=\"text-grey\">{new Date().getFullYear()} (c) — SmartExam. All Rights Reserved</small>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const SIGN_IN = 'SIGN_IN'\r\nconst SIGN_OUT = 'SIGN_OUT'\r\nconst SET_USER_TYPE = \"SET_USER_TYPE\"\r\nconst signin = (setUserToken) => {\r\n   return {\r\n      type: SIGN_IN,\r\n      payload: setUserToken\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return {\r\n      type: SIGN_OUT,\r\n      payload: null\r\n   }\r\n}\r\n\r\nconst setUserType = (type)=>{\r\n   return {\r\n      type: SET_USER_TYPE,\r\n      payload: type\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport { signin, logout, setUserType }","import React from 'react'\r\nimport './Header.css'\r\nimport Logo from '../../assets/images/logo.png'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/AuthActions';\r\n\r\n\r\nconst Header = () => {\r\n    const isAuth = useSelector(state => state.auth.userToken)\r\n    const userType = useSelector(state => state.auth.userType)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch(null)\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n\r\n    const isInstructor = userType === 'instructor'\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav mx-auto mainNav\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Features</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Pricing</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/classes\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Classes</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/exams\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Exams</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to={isInstructor ? \"/questions\" : \"/my-results\"}>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>{isInstructor ? 'Questions' : 'My Results'}</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav d-flex justify-content-lg-center justify-content-between flex-row\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <li className=\"nav-item mx-2 d-flex align-items-center\">\r\n                                    <Link className=\"loginText\" to={'/login'}>Login</Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link className=\"btn btn-primary\" to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {/* Logout */}\r\n                                <li onClick={logoutHandler} className=\"nav-item mx-2\">\r\n                                    <LogoutOutlined className=\"primaryColoredIcon\" />\r\n                                </li>\r\n\r\n                                {/* Profile */}\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link to={`/profile/${userType}`}>\r\n                                        <UserOutlined className=\"primaryColoredIcon\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const SHOW_ERROR = 'SHOW_ERROR'\nconst SHOW_SUCCESS = 'SHOW_SUCCESS'\nconst SHOW_ALERT = \"SHOW_ALERT\"\nconst HIDE_ALERT = \"HIDE_ALERT\"\n\nconst showError = (msg) => {\n    return {\n        type: SHOW_ERROR,\n        payload: msg\n    }\n}\n\nconst showSuccess = (msg) => {\n    return {\n        type: SHOW_SUCCESS,\n        payload: msg\n    }\n}\n/**\n * \n * @param {{header:string, details:string, alertFunction:Function}} alertObject \n * @returns \n */\nconst showAlert = (alertObject) => {\n    return {\n        type: SHOW_ALERT,\n        payload: alertObject\n    }\n}\n\nconst hideAlert = () => {\n    return {\n        type: HIDE_ALERT,\n    }\n}\n\n\nexport { showError, showSuccess, showAlert, hideAlert }","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showSuccess } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SuccessToast = () => {\n    const successMsg = useSelector(state => state.app.successMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        successMsg && setTimeout(() => {\n            dispatch(showSuccess(null))\n        }, 3000);\n\n    }, [successMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={successMsg}\n            key={'success1'}\n        >\n            <Alert severity={\"success\"}>{successMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default SuccessToast\n","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showError } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ErrorToast = () => {\n    const errorMsg = useSelector(state => state.app.errorMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        errorMsg && setTimeout(() => {\n            dispatch(showError(null))\n        }, 3000);\n\n    }, [errorMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={errorMsg}\n            key={'error1'}\n            autoHideDuration={3000}\n        >\n            <Alert severity={\"error\"}>{errorMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default ErrorToast\n","import React from 'react'\nimport SuccessToast from './SuccessToast'\nimport ErrorToast from './ErrorToast'\n\n\nconst index = () => {\n    return (\n        <div>\n            <SuccessToast />\n            <ErrorToast />\n        </div>\n    )\n}\n\nexport default index\n","const DomainUrl = 'http://18.223.162.98/api';\r\nexport default DomainUrl;","import axios from 'axios';\nimport DomainUrl from './Domain';\n\nlet headers = {}\nconst _axios = axios.create({\n    baseURL: DomainUrl,\n    headers\n});\n\n_axios.interceptors.request.use(\n    async (config) => {\n        const token = localStorage.getItem('token');\n        config.headers = {\n            ...config.headers,\n            'Authorization': token ? `Bearer ${token}` : undefined,\n        }\n        return config\n    },\n    (err) => {\n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => response.data,\n    err => {\n        return Promise.reject(err?.response?.data);\n    }\n)\n\nexport default _axios;\n","export const ADD_EMAIL = \"ADD_EMAIL\"\nexport const SAVE_ANSWER = \"SAVE_ANSWER\"\n","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport * as actionTypes from \"../../../redux/actions/actionTypes\"\n\nconst Forgotpassword = (props) => {\n    const [email, setEmail] = useState(null)\n\n    const sendLinkHandler = (event) => {\n        event.preventDefault()\n        const data = {\n            email: email\n        }\n\n        props.saveEmail(email)\n        localStorage.setItem(\"email\",email)\n        console.log(data)\n        _axios.post(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            \n\n\n        }).catch((error) => {\n            console.log(error)\n\n        })\n    }\n    return (\n\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Forgot Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n                    <div>\n                        <div className='text-center'>\n                            <label >We'll send you a link via email to reset password</label>\n\n                        </div>\n                        <div className='text-center'>\n                            <label >Please type your email address</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email address\" />\n                    </div>\n                    <br />\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={sendLinkHandler} style={{ width: 200 }}>Send Link</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveEmail: (email) => { return dispatch({ type: actionTypes.ADD_EMAIL, email: email  }) }\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgotpassword);\n\n","import DomainUrl from \"../Domain\";\r\n\r\nexport const AUTHENDPOINTS = {\r\n   login: {\r\n      url: `${DomainUrl}/auth/login`,\r\n      method: 'POST',\r\n   },\r\n   verifyEmail:{\r\n      url:`${DomainUrl}/auth/verifyEmail`,\r\n      method : 'POST'\r\n   },\r\n   changePassword:{\r\n      url:`${DomainUrl}/auth/changePassword`,\r\n      method : 'PUT'\r\n   },\r\n   logout:{\r\n      url:`${DomainUrl}/auth/logout`,\r\n      method : 'POST'\r\n   },\r\n   ResetPassword:{  \r\n      url:`${DomainUrl}/auth/forgotPassword`,\r\n      method:'PUT'\r\n   }\r\n};\r\n\r\n","export class Network {\r\n  constructor() {\r\n    this.jwt = \"\";\r\n  }\r\n\r\n  static async fetch(url, init, addAuth) {\r\n    this.jwt = localStorage.getItem(\"token\");\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      ...init,\r\n      headers: Network.getHeaders(init.headers, addAuth),\r\n    });\r\n    let promise;\r\n    if (!response.ok) {\r\n      promise = Network.handleErrorsBasedOnStatus(response);\r\n    } else if (response.status === 204) {\r\n      promise = Promise.resolve({});\r\n    } else {\r\n      promise = response.json();\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  static getHeaders(originalHeaders, addAuth) {\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (addAuth) {\r\n      headers.Authorization = `Bearer ${this.jwt}`;\r\n    }\r\n\r\n    headers = {\r\n      ...headers,\r\n      ...originalHeaders,\r\n    };\r\n\r\n    return headers;\r\n  }\r\n  static handleErrorsBasedOnStatus(response) {\r\n    let promise;\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 422:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 429:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 401:\r\n      case 403:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n    }\r\n    return promise.catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n","import { AUTHENDPOINTS } from \"../Endpoints/AuthEndpoints\";\r\nimport { Network } from \"../Network\";\r\n\r\nexport class AuthServices {\r\n  // sign in\r\n  static login(values) {\r\n    return Network.fetch(AUTHENDPOINTS.login.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.login.method,\r\n    });\r\n  }\r\n  \r\n  // verifying mobile phone by sending  code , phone\r\n  static emailVerifySms(values) {\r\n    return Network.fetch(AUTHENDPOINTS.verifyEmail.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.verifyEmail.method,\r\n    });\r\n  }\r\n\r\n  // change password\r\n  static changePassword(values) {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.changePassword.url,\r\n      {\r\n        body: JSON.stringify(values),\r\n        method: AUTHENDPOINTS.changePassword.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n  \r\n  // logout\r\n  static logout() {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.logout.url,\r\n      {\r\n        method: AUTHENDPOINTS.logout.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  // reset forgotten  Password\r\n  static resetForgottenPassword(values) {\r\n    return Network.fetch(AUTHENDPOINTS.ResetPassword.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.ResetPassword.method,\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './CardComponent.css'\r\nconst CardComponent = ({children, title}) => {\r\n    return (\r\n        <div className=\"greenCard\">\r\n            <h2 className=\"text-light text-center mx-auto py-3\">{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","const initStates = {\n    errorMsg: null,\n    successMsg: null,\n    alertObject: null\n}\n\nconst AppReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case 'SHOW_ERROR':\n            console.log(action.payload)\n            return {\n                ...state,\n                errorMsg: action.payload,\n            };\n        case 'SHOW_SUCCESS':\n            return {\n                ...state,\n                successMsg: action.payload\n            };\n        case 'SHOW_ALERT':\n            return {\n                ...state,\n                alertObject: action.payload\n            };\n        case 'HIDE_ALERT':\n            return {\n                ...state,\n                alertObject: null\n            };\n        default:\n            return state\n    }\n}\n\nexport { AppReducer };","\r\nconst initStates = {\r\n   userToken: null,\r\n   userType: null\r\n}\r\n\r\nconst AuthReducer = (state = initStates, action) => {\r\n   switch (action.type) {\r\n      case 'SIGN_IN':\r\n         return {\r\n            ...state,\r\n            userToken: action.payload,\r\n         };\r\n      case 'SIGN_OUT':\r\n         return {\r\n            ...state,\r\n            userToken: null,\r\n            userType: null\r\n         };\r\n\r\n      case 'SET_USER_TYPE':\r\n         return {\r\n            ...state,\r\n            userType: action.payload,\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport { AuthReducer };","import * as actionTypes from \"../actions/actionTypes\"\n\nconst initialState = {\n    email: 'LOL'\n\n}\nconst ResetReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_EMAIL:\n            // console.log(\"this from reducer\")\n            // console.log(action.email)\n            return {\n                ...state,\n                email: action.email\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default ResetReducer;","const initStates = {\r\n    examQuestions: []\r\n}\r\n\r\nconst ExamReducer = (state = initStates, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_QUESTION':\r\n            return {\r\n                ...state,\r\n                examQuestions: [...state.examQuestions, ...action.payload],\r\n            };\r\n        case 'REMOVE_QUESTION': {\r\n            let newExamQuestions = state?.examQuestions\r\n            let newExamQuestion = newExamQuestions.filter(item => {\r\n                return item.id !== action.payload\r\n            })\r\n            return {\r\n                ...state,\r\n                examQuestions: [...newExamQuestion],\r\n            };\r\n        }\r\n        case 'REMOVE_ALL':\r\n            return {\r\n                ...state,\r\n                examQuestions: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default ExamReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from './reducers/AppReducer';\r\nimport { AuthReducer } from './reducers/AuthReducer';\r\nimport ResetReducer from './reducers/ResetReducer';\r\nimport ExamReducer from './reducers/ExamReducer';\r\nimport QuestionReducer from './reducers/QuestionReducer';\r\n\r\nconst rootReducer = combineReducers(\r\n   {\r\n      auth: AuthReducer,\r\n      app: AppReducer,\r\n      rst: ResetReducer,\r\n      exam: ExamReducer,\r\n      question: QuestionReducer\r\n   }\r\n);\r\nconst middleware = applyMiddleware(thunk)\r\nconst configureStore = () => {\r\n   return createStore(rootReducer, middleware);\r\n}\r\n\r\nexport const store = configureStore();","import { showError } from '../redux/actions/AppActions'\r\nimport { logout } from '../redux/actions/AuthActions'\r\nimport { store } from '../redux/store'\r\n\r\nexport default function HandleErrors(err) {\r\n    //Showing Toast Function\r\n    const showErrorToast = (msg) => {\r\n        store.dispatch(\r\n            showError(msg)\r\n        )\r\n    }\r\n\r\n\r\n    if (err?.message) {\r\n        showErrorToast(err?.message)\r\n    } else if (typeof err === 'string' || err instanceof String) {\r\n        showErrorToast(err)\r\n    } else {\r\n        showErrorToast(\"UNKNOWN_ERROR\")\r\n    }\r\n\r\n    if (err?.message?.includes(\"Unauthenticated\")) {\r\n        store.dispatch(logout())\r\n        localStorage.clear()\r\n    }\r\n}","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AuthServices } from '../../../apis/Services/AuthService';\nimport { setUserType, signin } from '../../../redux/actions/AuthActions';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const forgotPasswordHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: '/forgot-password',\n            state: { email: email }\n        })\n\n        // props.history.push('/forgot-password')\n        // props.history.push('/reset-password')\n\n    }\n\n    const SignUpHandler = () => {\n        props.history.push('/register')\n    }\n\n    const dispatch = useDispatch(null)\n    const LoginHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        AuthServices.login({ email, password })\n            .then(res => {\n                console.log(\"result =>\", res)\n                localStorage.setItem('token', res?.token)\n                localStorage.setItem('userType', res?.user?.type)\n                dispatch(signin(res?.token))\n                dispatch(setUserType(res?.user?.type))\n                props.history.push(`/profile/${res?.user?.type}`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Login'}>\n                    <form className=\"m-3 text-start\">\n                        <div className='mt-4'>\n                            <TextField fullWidth id=\"outlined-basic\" onChange={(e) => setEmail(e.target.value)} label=\"Email Address\" variant=\"outlined\" />\n                        </div>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                id=\"outlined-adornment-password\"\n                                type={'password'}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"mx-auto mt-4 text-center\">\n                            <button className=\"btn btn-primary mx-auto\" onClick={LoginHandler}>Login</button>\n                            <div>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={forgotPasswordHandler}>Forgot password?</button>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={SignUpHandler}>Signup</button>\n                            </div>\n                        </div>\n                    </form>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\nclass Registerinquiry extends Component {\n\n    RegisterAsStudentHandler = () => {\n        // this.props.history.push('/signup')\n        this.props.history.push('/register-student')\n\n    }\n    RegisterAsInstructorHandler = () => {\n        \n        this.props.history.push('/register-instructor')\n\n     }\n\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center mt-5\">\n                <div className=\"card border-success mb-3\" style={{ MaxWidth: 18 }}>\n                    <div className=\"card-header\">Sign up</div>\n                    <div className=\"card-body text-success\">\n                        <h5 className=\"card-title text-center\">Register As...?</h5>\n                        <div className=\"form-inline\">\n                            <button type=\"button\" onClick={this.RegisterAsStudentHandler} className=\"btn btn-primary m-3\">Student</button>\n                            <button type=\"button\" onClick={this.RegisterAsInstructorHandler} className=\"btn btn-danger m-3\">Instructor</button>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Registerinquiry);\n","import _axios from \"../axios-instance\";\n\nexport class UploadServices {\n    static uploadImage(file) {\n        const formDate = new FormData()\n        formDate.append('image', file)\n        return _axios.post('/image-upload', formDate, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    }\n}\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterInstructor extends Component {\r\n\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        degree: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    degreeFormHandler = (event) => {\r\n        this.setState({ degree: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.degree)) {\r\n            return \"Invalid Degree\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n        var data;\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"type\": \"instructor\",\r\n                    \"degree\": this.state.degree,\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/instructors/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email, userInfo: data }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.degreeFormHandler} label=\"Degree\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className=\"mx-auto mt-4\" >\r\n                                <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler} style={{ width: 200 }}>Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterInstructor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterStudent extends Component {\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        studentcode: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    studentCodeFormHandler = (event) => {\r\n        this.setState({ studentcode: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.studentcode)) {\r\n            return \"Invalid Student Code\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                var data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"studentCode\": this.state.studentcode,\r\n                    \"type\": \"student\",\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/students/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.studentCodeFormHandler} label=\"Student Code\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"mx-auto mt-4\">\r\n                                <button type='button' className=\"btn btn-primary mx-auto\" onClick={this.registerHandler}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterStudent;\r\n","import { showSuccess } from '../redux/actions/AppActions'\nimport { store } from \"../redux/store\"\n\nexport default function showSuccessMsg(msg) {\n\n    store.dispatch(\n        showSuccess(msg)\n    )\n\n    return null\n}","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../hooks/handleErrors';\n\nconst Resetpassword = (props) => {\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n\n\n    const ResetHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            HandleErrors(\"Password Mismatch\")\n            return\n        }\n\n        var data = {\n            password: password,\n            email: localStorage.getItem(\"email\"),\n            token: props.match.params.token\n\n        }\n        _axios.put(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            localStorage.removeItem(\"email\")\n            showSuccessMsg(\"Password Reset Successfully\")\n            props.history.push('/login')\n        }).catch((error) => {\n            console.log(error)\n\n        })\n\n\n    }\n    return (\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Reset Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n\n                    <div className=\"form-group\">\n                        <label >New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setPassword(e.target.value)} placeholder=\"New Password\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Confirm New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm New Password\" />\n                    </div>\n\n                    <hr />\n\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={ResetHandler} style={{ width: 200 }}>Reset Password</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return 0\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Resetpassword);\n\n","import { useState, useEffect } from 'react';\n\nfunction getWindowWidth() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nexport default function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}","import React from 'react'\nimport CardComponent from '../../Components/CardComponent/CardComponent'\nimport ReactCodeInput from 'react-verification-code-input';\nimport './VerifyEmail.css'\nimport useWindowWidth from '../../hooks/useWindowWidth';\nimport HandleErrors from '../../hooks/handleErrors';\nimport _axios from '../../apis/axios-instance';\nimport showSuccessMsg from '../../hooks/showSuccessMsg';\n\nconst VerifyEmail = (props) => {\n    const onsubmit = (e) => {\n        verifyEmail(e);\n    }\n    // const resend = () => {\n    //     const data = props.location.state.userInfo\n    //     const type = data['type'];\n    //     if (type === 'instructor') {\n    //         _axios.post('/instructors/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n    //     } else if (type === 'student') {\n    //         _axios.post('/students/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n\n    //     }\n    // }\n\n    const verifyEmail = (codeValue) => {\n        //sent to server\n        // console.log(codeValue)\n        // console.log(props.location.state.email)\n        var data = {\n            email: props.location.state.email,\n            code: codeValue\n        }\n        _axios.post(\"/verifyEmail\", data).then((response) => {\n            // console.log(response)\n            // console.log(\"Success ya wlaaa\")\n            showSuccessMsg(\"Verified Successfully!\")\n            props.history.push({\n                pathname: '/login',\n            })\n\n        }).catch((err) => HandleErrors(err))\n\n    }\n\n    const screenWidth = useWindowWidth();\n    const isMobile = screenWidth < 768\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Verify Email'}>\n                    <div className=\"d-flex flex-column justify-content-center align-items-center py-2\">\n                        <small className='text-green'>We have sent for you a verify code.</small>\n                        <small className='text-green'>Please enter the code here</small>\n                        <ReactCodeInput\n                            onComplete={onsubmit}\n                            className=\"my-4 text-primary\"\n                            type='text'\n                            autoFocus={true}\n                            fieldHeight={85}\n                            fieldWidth={isMobile ? screenWidth / 7 : 66}\n                            fields={6} />\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyEmail\n","import forgotPassword from '../Views/Registration/ForgotPassword/forgotPassword'\r\nimport Login from '../Views/Registration/Login/Login'\r\nimport RegisterInquiry from '../Views/Registration/Register/RegisterInquiry'\r\nimport RegisterInstructor from '../Views/Registration/Register/RegisterInstructor/RegisterInstructor'\r\nimport RegisterStudent from '../Views/Registration/Register/RegisterStudent/RegisterStudent'\r\nimport ResetPassword from '../Views/Registration/ResetPassword/ResetPassword'\r\nimport VerifyEmail from '../Views/VerifyEmail/VerifyEmail'\r\n\r\nconst AuthRoutes =\r\n    [\r\n        { path: \"/login\", component: Login, exact: true },\r\n        { path: \"/forgot-password\", component: forgotPassword, exact: true },\r\n        { path: \"/reset-password/:token\", component: ResetPassword, exact: true },\r\n        { path: \"/register\", component: RegisterInquiry, exact: true },\r\n        { path: \"/verifyEmail\", component: VerifyEmail, exact: true },\r\n        { path: \"/register-student\", component: RegisterStudent, exact: true },\r\n        { path: \"/register-instructor\", component: RegisterInstructor, exact: true },\r\n       \r\n    ]\r\n\r\nexport default AuthRoutes\r\n","import _axios from \"../axios-instance\";\r\n\r\nexport class ExamServices {\r\n    /**\r\n     * Create new exam with main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static createNewExam(examMainInfo) {\r\n        return _axios.post('/exams/step1', examMainInfo);\r\n    }\r\n\r\n    /**\r\n     * edit exam main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static editExamMainInfo(examMainInfo, examId) {\r\n        return _axios.put(`/exams/${examId}}/step1`, examMainInfo);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setExamOptions(examId, options) {\r\n        return _axios.post('/exams/step2', { examId, ...options });\r\n    }\r\n\r\n    /**\r\n     * Edit exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static editExamOptions(examId, options) {\r\n        return _axios.put(`/exams/${examId}/step2`, { ...options });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static addQuestionsToExam(examId, questions) {\r\n        return _axios.post('/exams/step3', { examId, questions });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{id:number, mark:number, duration:string}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setQuestionsMarksAndDuration(examId, questions) {\r\n        return _axios.post('/exams/step4', { examId, questions });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Instrunctor Own Exams\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyExams() {\r\n        return _axios.get('/instructors/myExams');\r\n    }\r\n\r\n    /**\r\n     * Get All published exam\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getAllPublishedExams() {\r\n        return _axios.get('/exams');\r\n    }\r\n\r\n    /**\r\n     * Get a specific Exam\r\n     * @param {number} examId \r\n     * @returns Promise<{Exam:Object}>\r\n     */\r\n    static getExamQuestions(examId) {\r\n        return _axios.get(`/exams/${examId}/questions`);\r\n    }\r\n\r\n    static getExamConfig(examId) {\r\n        return _axios.get(`/exams/${examId}/configs`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Post a question answer to \r\n     * @param {object} answerData \r\n     * Example Object\r\n     * {\r\n     \" studentAnswer\": \"seven\"\r\n     \" option_id\": 1,\r\n     \" question_id\": 1,\r\n     \" exam_id\": 1,\r\n     * } \r\n     * @returns Promise<{message}>\r\n     */\r\n    static addAnswer(answerData) {\r\n        return _axios.post(`/answers`, answerData);\r\n    }\r\n\r\n    /**\r\n    * Delete specific exam\r\n    * @param {number} examId \r\n    * @returns \r\n    */\r\n    static deleteExam(examId) {\r\n        return _axios.delete(`/exams/${examId}`);\r\n    }\r\n\r\n    /**\r\n     * Make an exam publish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": true })\r\n    }\r\n\r\n    /**\r\n     * Make an exam unpublish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamUnPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": false })\r\n    }\r\n\r\n    static getStudentExamAnswers(examId) {\r\n        return _axios.get(`exams/${examId}/my-answers`)\r\n    }\r\n\r\n    static submitExam(examId) {\r\n        return _axios.post(`exams/${examId}/submit`)\r\n    }\r\n\r\n    static applyFaceDetection(data) {\r\n        return _axios.post(`/faceDetection`, data)\r\n    }\r\n    static applyFaceVerification(data) {\r\n        return _axios.post(`/faceVerification`, data)\r\n    }\r\n    static startExam(examId, data) {\r\n        return _axios.post(`exams/${examId}/start`, data)\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TextField } from '@mui/material'\nimport React from 'react'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport { Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport moment from 'moment';\n\nconst AddExam = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    console.log(examOldData)\n    const onAddExamHandler = (values, actions) => {\n        if (isEditMode) {\n            ExamServices.editExamMainInfo(values, examOldData.id)\n                .then(res => {\n                    showSuccessMsg('Edited exam information successfully!')\n                    history.push(`/exams/${examOldData.id}/set-options`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.createNewExam(values)\n            .then(res => {\n                showSuccessMsg('Exam information has been saved!')\n                history.push(`/exams/${res.examId}/set-options`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            name: examOldData?.name || '',\n                            numberOfTrials: examOldData?.numberOfTrials || '',\n                            description: examOldData?.description || '',\n                            totalMark: examOldData?.totalMark || '',\n                            duration: examOldData?.duration || '',\n                            examSubject: examOldData?.examSubject || '',\n                            startAt: examOldData?.startAt || moment(new Date().setMinutes(0)).format('yyyy-MM-DD hh:mm'),\n                            endAt: examOldData?.endAt || moment(new Date().setMinutes(0)).add(7, 'days').format('yyyy-MM-DD hh:mm'),\n                        }}\n                        onSubmit={onAddExamHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"name\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.name}\n                                        type=\"text\"\n                                        label=\"Exam Name\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.name && <div id=\"feedback\">{props.errors.name}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"numberOfTrials\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.numberOfTrials}\n                                        type=\"number\"\n                                        label=\"Number Of Trials\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.numberOfTrials && <div id=\"feedback\">{props.errors.numberOfTrials}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"description\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.description}\n                                        type=\"text\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.description && <div id=\"feedback\">{props.errors.description}</div>}\n                                </div>\n\n                                {/* Exam Subject */}\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"examSubject\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.examSubject}\n                                        type=\"text\"\n                                        label=\"Exam Subject\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.examSubject && <div id=\"feedback\">{props.errors.examSubject}</div>}\n                                </div>\n\n                                {/* Start Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"Start Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.startAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('startAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('startAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.startAt && <div id=\"feedback\">{props.errors.startAt}</div>}\n                                </div>\n\n                                {/* End Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"End Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.endAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('endAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('endAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.endAt && <div id=\"feedback\">{props.errors.endAt}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"totalMark\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.totalMark}\n                                        type=\"text\"\n                                        label=\"Total Mark\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.totalMark && <div id=\"feedback\">{props.errors.totalMark}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"duration\"\n                                        placeholder='Ex: 01:30:00'\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.duration}\n                                        type=\"text\"\n                                        label=\"Duration\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.duration && <div id=\"feedback\">{props.errors.duration}</div>}\n                                </div>\n\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExam\n","import React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Divider } from '@mui/material';\n\nconst AddationMethodsMenu = ({ methods = [], anchorEl, setAnchorEl }) => {\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    return <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                mt: 1.5,\n                '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                },\n                '&:before': {\n                    content: '\"\"',\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: 'background.paper',\n                    transform: 'translateY(-50%) rotate(45deg)',\n                    zIndex: 0,\n                },\n            },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n        {\n            methods?.map((method, index) => <div key={index} >\n                <MenuItem onClick={method.function}>\n                    {method.displayName}\n                </MenuItem>\n                {(index !== methods.length - 1) && <Divider />}\n            </div>\n            )\n        }\n        \n    </Menu>;\n};\n\nexport default AddationMethodsMenu;\n","export const Colors = {\n    primary: '#2F4F4F',\n    primaryHover: '#3c6464',\n    secondary: '#50303A',\n    black: '#313131',\n    grey: '#AEAEAE',\n    white: '#fff',\n    danger: '#DC3545',\n    success: '#28A745'\n}","import styled from 'styled-components';\n\n\nconst ClickableView = styled.div`\n    cursor: pointer;\n`\n\n\nexport {\n    ClickableView\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdQuestionController = ({ questionTitle, id, deleteFunction = () => { } }) => {\n  const history = useHistory();\n\n  const goToQuestion = () => {\n    /** TODO */\n    history.push('/questions/' + id)\n  }\n\n  return <Wrapper className='mb-4'>\n    <ClickableView onClick={goToQuestion}>\n      <Text>{questionTitle}</Text>\n    </ClickableView>\n\n    <ClickableView onClick={deleteFunction}>\n      <CloseIcon color={'error'} fontSize={'large'} />\n    </ClickableView>\n  </Wrapper>;\n};\n\nexport default BorderdQuestionController;\n","const ADD_QUESTION = 'ADD_QUESTION'\r\nconst REMOVE_QUESTION = 'REMOVE_QUESTION'\r\nconst REMOVE_ALL = 'REMOVE_ALL'\r\n\r\n/**\r\n * \r\n * @param {Array.<{questionText:string, id:string}>} questionData \r\n * @returns \r\n */\r\nconst saveAQuestion = (questionData) => {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        payload: questionData\r\n    }\r\n}\r\n/**\r\n * \r\n * @param {{id:string}} param0 \r\n * @returns \r\n */\r\nconst removeSavedQuestionFromExam = (id) => {\r\n    return {\r\n        type: REMOVE_QUESTION,\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst removeAllSavedQuestions = () => {\r\n    return {\r\n        type: REMOVE_ALL,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { saveAQuestion, removeSavedQuestionFromExam, removeAllSavedQuestions }","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { matchPath, useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu'\r\nimport BorderdQuestionController from '../../../../Components/QuestionComponents/BorderdQuestionController'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { removeAllSavedQuestions, removeSavedQuestionFromExam } from '../../../../redux/actions/ExamAction'\r\n\r\nconst AddExamQuestions = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const AddQuestionHandler = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const goCreateNewQuestion = () => {\r\n        history.push('/questions/add', { fromExamCreation: true })\r\n    }\r\n    const selectQuestionFromQBank = () => {\r\n        history.push('/questions', { canSelectQuestionsForExam: true })\r\n    }\r\n    const methods = [\r\n        {\r\n            displayName: 'Create new question',\r\n            function: goCreateNewQuestion\r\n        },\r\n        {\r\n            displayName: 'Select from quesiton bank',\r\n            function: selectQuestionFromQBank\r\n        }\r\n    ]\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.exam)\r\n    const examOldData = location.state?.exam\r\n    const examOldQuestions = examOldData?.questions || []\r\n\r\n    const [examId, setExamId] = useState(null)\r\n    useEffect(() => {\r\n        const match = matchPath(history.location.pathname, {\r\n            path: '/exams/:examId/add-questions'\r\n        })\r\n        console.log(match.params.examId)\r\n        setExamId(match.params.examId)\r\n    }, [history.location.pathname])\r\n\r\n    /** Get Questions of this exam */\r\n    const [questions, setQuestions] = useState(null);\r\n    const savedQuestions = useSelector(state => state.exam.examQuestions)\r\n    const getQuestions = () => {\r\n        setQuestions([...examOldQuestions, ...savedQuestions])\r\n    }\r\n    useEffect(() => {\r\n        getQuestions();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const submitExamHandler = () => {\r\n        let submittedQuestions = [...questions]\r\n        submittedQuestions = submittedQuestions.map(item => { return { question_id: item.id } })\r\n        ExamServices.addQuestionsToExam(examId, submittedQuestions)\r\n            .then(res => {\r\n                history.push('/exams')\r\n                dispatch(removeAllSavedQuestions())\r\n                showSuccessMsg('Exam has been created successfully!')\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const removeQuestionFromListHandler = (id) => {\r\n        dispatch(removeSavedQuestionFromExam(id))\r\n        setQuestions(prevState => {\r\n            console.log(prevState, id)\r\n            return prevState.filter(item => item.id !== id)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={!isEditMode ? 'Add Questions' : 'View Questions'}>\r\n                    <div className='p-4'>\r\n                        <div className='d-flex justify-content-end mb-4'>\r\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\r\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                            </button>\r\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                                questions?.map(question =>\r\n                                    <BorderdQuestionController\r\n                                        deleteFunction={() => removeQuestionFromListHandler(question.id)}\r\n                                        id={question.id} key={question.id}\r\n                                        questionTitle={question.questionText}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button onClick={submitExamHandler} className=\"btn btn-primary mx-auto mt-4\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </CardComponent>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExamQuestions\r\n","import React from 'react'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Chip, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport PublishIcon from '@mui/icons-material/Publish';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Exams = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const addNewExamHandler = (e) => {\r\n        console.log(e)\r\n        history.push('/exams/add')\r\n    }\r\n\r\n    const [exams, setExams] = useState(null)\r\n    const getExamsHandler = () => {\r\n        ExamServices.getMyExams()\r\n            .then(res => {\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getExamsHandler()\r\n    }, [])\r\n\r\n    const GoToExamDetailsHandler = (examId) => {\r\n        history.push(`/exams/${examId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedExam, setSelectedExam] = React.useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedExam(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedExam(null)\r\n    };\r\n\r\n    const editExamHandler = () => {\r\n        console.log(selectedExam)\r\n        let exam = exams.find(item => item.id === selectedExam)\r\n        console.log(exam)\r\n        history.push('/exams/edit', { exam })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteExamHandler = () => {\r\n        let deleteFun = () => {\r\n            ExamServices.deleteExam(selectedExam)\r\n                .then(res => {\r\n                    showSuccessMsg('Exam deleted successfully!')\r\n                    let newExams = [...exams]\r\n                    newExams = newExams.filter(item => item.id !== selectedExam)\r\n                    setExams(newExams)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        dispatch(showAlert({\r\n            header: 'Delete this exam?',\r\n            details: 'You are going to delete this exam permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    const makePublishHandler = (isWantToBePublish) => {\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        let examName = selectedExamObject?.name\r\n        let request = isWantToBePublish ? ExamServices.makeExamPublished(selectedExam) : ExamServices.makeExamUnPublished(selectedExam)\r\n        request\r\n            .then(res => {\r\n                showSuccessMsg(`Your Exam (${examName}) has been ${isWantToBePublish ? 'published' : 'unpublished'} successfully!`)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n            .finally(() => {\r\n                handleClose() //for menu\r\n                getExamsHandler()\r\n            })\r\n    }\r\n\r\n    const isExamNotCompleted = (row) => (!row.config || !row.questions?.length)\r\n    const isSelectedExamPublished = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return selectedExamObject?.isPublished\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{}} className='d-flex mt-4 justify-content-end'>\r\n                <button onClick={addNewExamHandler} className='btn btn-success'>\r\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                </button>\r\n            </div>\r\n\r\n            <TableContainer className='mt-5' component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Exam Name</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Start Date</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">End Date</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Total Marks</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Duration</StyledTableCell>\r\n                            <StyledTableCell align=\"right\"> </StyledTableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {exams?.map((row) => (\r\n                            <StyledTableRow\r\n                                className={isExamNotCompleted(row) ? 'bg-danger disablePointer' : ''}\r\n                                onClick={!isExamNotCompleted(row) ? () => GoToExamDetailsHandler(row.id) : null}\r\n                                key={row.id}\r\n                            >\r\n                                {/* NAME */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                    {row.isPublished ?\r\n                                        < Chip className='ms-2' size='small' color=\"success\" icon={<DoneAllIcon />} label=\"Published\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </StyledTableCell>\r\n                                {/* STARE DATE */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.startAt}\r\n                                </StyledTableCell>\r\n                                {/* END DATE */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.endAt}\r\n                                </StyledTableCell>\r\n                                {/* TOTAL MARK */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.totalMark}\r\n                                </StyledTableCell>\r\n                                {/* DURATION */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.duration}\r\n                                </StyledTableCell>\r\n                                {/* OPTIONS */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                    <SettingsIcon fontSize='medium' color='secondary' />\r\n                                </StyledTableCell>\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {\r\n                selectedExam &&\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    autoFocus={false}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => makePublishHandler(!isSelectedExamPublished())}>\r\n                        <PublishIcon />\r\n                        {isSelectedExamPublished() ? 'UnPublish' : 'Publish'}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={editExamHandler}>\r\n                        <EditIcon />\r\n                        Edit\r\n                    </MenuItem>\r\n                    <MenuItem color='error' onClick={deleteExamHandler}>\r\n                        <DeleteForeverIcon color='error' />\r\n                        Delete\r\n                    </MenuItem>\r\n                </Menu>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Exams\r\n","import _axios from \"../axios-instance\";\n\nexport class QuestionServices {\n    /**\n     * Create new question\n     * @param {Object} question Information about the question.\n     * @param {string} question.questionText Question header\n     * @param {string} question.mark\n     * @param {Array<string>} question.answers All the possible answers\n     * @param {string} question.correctAnswer Correct answer\n     * @returns {Promise<any>}\n     */\n    static createMcqQuestion(question) {\n        return _axios.post('/questions/create', { type: 'mcq', ...question });\n    }\n\n    /**\n     * \n     * @param {*} id Question id\n     * @returns \n     */\n    static getQuestionDetails(id) {\n        return _axios.get(`/questions/${id}`);\n    }\n\n    /**\n     * Edit any type of question\n     * @param {*} id question id\n     * @param {*} question Question as it returned from server\n     * @returns \n     */\n    static editQuestion(id, question) {\n        return _axios.put(`/questions/${id}`, { ...question });\n    }\n\n    /**\n     * Delete any type of question\n     * @param {*} id question id\n     * @returns \n     */\n    static deleteQuestion(id) {\n        return _axios.delete(`/questions/${id}`);\n    }\n\n    /**\n     * Get All My Exams\n     * @returns {Promise<Array>}\n     */\n    static getMyQuestions() {\n        return _axios.get('/questions');\n    }\n\n}\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { useState } from 'react';\r\nimport { Checkbox, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Questions = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const isSelectionMode = location.state?.canSelectQuestionsForExam\r\n\r\n    const goToAddQuestionPageHandler = () => {\r\n        history.push(`${history.location.pathname}/add`)\r\n    }\r\n\r\n    /**\r\n     * Getting Questions\r\n     */\r\n    const [questions, setQuestions] = useState(null)\r\n    const getAllQuestions = () => {\r\n        QuestionServices.getMyQuestions()\r\n            .then(res => {\r\n                console.log(\"Questions =>\", res)\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getAllQuestions();\r\n    }, [])\r\n\r\n    const GoToQuestionDetailsHandler = (questionId) => {\r\n        history.push(`${history.location.pathname}/${questionId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedQuestion(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedQuestion(null)\r\n    };\r\n\r\n    const editQuestionHandler = () => {\r\n        console.log(selectedQuestion)\r\n        let question = questions.find(item => item.id === selectedQuestion)\r\n        history.push('/questions/edit', { question })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteQuestionHandler = () => {\r\n        let deleteFun = () => {\r\n            QuestionServices.deleteQuestion(selectedQuestion)\r\n                .then(res => {\r\n                    showSuccessMsg('Question deleted successfully!')\r\n                    let newQuestions = [...questions]\r\n                    newQuestions = newQuestions.filter(item => item.id !== selectedQuestion)\r\n                    setQuestions(newQuestions)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        // show alert\r\n        dispatch(showAlert({\r\n            header: 'Delete this question?',\r\n            details: 'You are going to delete this question permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    // #### SELECTION MODE STUFF ####\r\n\r\n    const isAllSelected = questions?.every(item => item.isSelected)\r\n    const selectedQuestions = questions?.filter(item => item.isSelected)\r\n    /**\r\n     * Mark needed question to be selected for an exam in [selection mode]\r\n     */\r\n    const onCheckHandler = (index, isSelected) => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[index].isSelected = isSelected\r\n            return newQuestions\r\n        })\r\n    }\r\n    const selectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: true } })\r\n        })\r\n    }\r\n    const deselectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: false } })\r\n        })\r\n    }\r\n    const sentSelectedQuestionHandler = () => {\r\n        dispatch(saveAQuestion(selectedQuestions))\r\n        history.goBack()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex mt-4 justify-content-end'>\r\n                {!isSelectionMode ?\r\n                    <button onClick={goToAddQuestionPageHandler} className='btn btn-success'>\r\n                        <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                    </button>\r\n                    :\r\n                    <button onClick={sentSelectedQuestionHandler} className='btn btn-success'>\r\n                        Confirm Selection ({selectedQuestions?.length})\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            <TableContainer className='mt-4' component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {isSelectionMode &&\r\n                                <StyledTableCell>\r\n                                    <Checkbox\r\n                                        style={{ backgroundColor: '#fff' }}\r\n                                        checked={isAllSelected}\r\n                                        onChange={isAllSelected ? deselectAllQuestions : selectAllQuestions}\r\n                                    />\r\n                                </StyledTableCell>\r\n                            }\r\n                            <StyledTableCell>Question Header</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Created Date</StyledTableCell>\r\n                            {!isSelectionMode &&\r\n                                <StyledTableCell align=\"right\"> </StyledTableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {questions?.map((row, index) => (\r\n                            <StyledTableRow onClick={() => GoToQuestionDetailsHandler(row.id)} key={row.id}>\r\n                                {isSelectionMode &&\r\n                                    <StyledTableCell onClick={(e) => e.stopPropagation()} component=\"th\" scope=\"row\">\r\n                                        <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={Boolean(row.isSelected)}\r\n                                            onChange={(e) => onCheckHandler(index, e.target.checked)}\r\n                                        />\r\n                                    </StyledTableCell>\r\n                                }\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.questionText}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.created_at}</StyledTableCell>\r\n                                {!isSelectionMode &&\r\n                                    <StyledTableCell onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                        <SettingsIcon fontSize='medium' color='secondary' />\r\n                                    </StyledTableCell>\r\n                                }\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={editQuestionHandler}>\r\n                    <EditIcon />\r\n                    Edit\r\n                </MenuItem>\r\n                <MenuItem color='error' onClick={deleteQuestionHandler}>\r\n                    <DeleteForeverIcon color='error' />\r\n                    Delete\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import { Switch } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Formik } from 'formik';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport { matchPath } from 'react-router-dom';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\n\nconst SetExamOptions = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [examId, setExamId] = useState(null)\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const oldExamConfig = examOldData?.config\n\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/set-options'\n        })\n        console.log(match.params.examId)\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    const setOptionsHandler = (values, actions) => {\n        let submittedValues = { ...values }\n        submittedValues['gradingMethod'] = submittedValues['gradingMethod'] ? 'auto' : 'manual'\n\n        if (isEditMode && oldExamConfig) {\n            ExamServices.editExamOptions(examId, submittedValues)\n                .then(res => {\n                    showSuccessMsg('Exam options has been edited!')\n                    history.push(`/exams/${examOldData?.id}/add-questions`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.setExamOptions(examId, submittedValues)\n            .then(res => {\n                showSuccessMsg('Exam options has been saved!')\n                history.push(`/exams/${examId}/add-questions`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            faceRecognition: oldExamConfig ? Boolean(oldExamConfig?.faceRecognition) : false,\n                            faceDetection: oldExamConfig ? Boolean(oldExamConfig?.faceDetection) : false,\n                            questionsRandomOrder: oldExamConfig ? Boolean(oldExamConfig?.questionsRandomOrder) : false,\n                            plagiarismCheck: oldExamConfig ? Boolean(oldExamConfig?.plagiarismCheck) : false,\n                            disableSwitchBrowser: oldExamConfig ? Boolean(oldExamConfig?.disableSwitchBrowser) : false,\n                            gradingMethod: oldExamConfig ? Boolean(oldExamConfig?.gradingMethod === 'auto') : true,\n                        }}\n                        onSubmit={setOptionsHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('questionsRandomOrder', !props.values.questionsRandomOrder)}>Questions Random Order</label>\n                                    <Switch\n                                        name='questionsRandomOrder'\n                                        checked={props.values.questionsRandomOrder}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('disableSwitchBrowser', !props.values.disableSwitchBrowser)}>Disable Switch Browser</label>\n                                    <Switch\n                                        name='disableSwitchBrowser'\n                                        checked={props.values.disableSwitchBrowser}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('plagiarismCheck', !props.values.plagiarismCheck)}>Plagiarism Check</label>\n                                    <Switch\n                                        name='plagiarismCheck'\n                                        checked={props.values.plagiarismCheck}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceDetection', !props.values.faceDetection)}>Face Detection</label>\n                                    <Switch\n                                        name='faceDetection'\n                                        checked={props.values.faceDetection}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('gradingMethod', !props.values.gradingMethod)}>Automatic Grading</label>\n                                    <Switch\n                                        name='gradingMethod'\n                                        checked={props.values.gradingMethod}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceRecognition', !props.values.faceRecognition)}>Face Recognition</label>\n                                    <Switch\n                                        name='faceRecognition'\n                                        checked={props.values.faceRecognition}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default SetExamOptions\n","import { TextField } from '@mui/material';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../../../constants/Colors';\nimport * as yup from 'yup';\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\n\nconst Label = styled.label`\n    display: block;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000;\n`\nconst DangerLabel = styled(Label)`\n    color: ${Colors.danger};\n`\nconst SuccessLabel = styled(Label)`\n    color: ${Colors.success};\n`\n\nconst MCQ = ({ initValues, getQuestionCreationRequest = () => { } }) => {\n    const MCQSCHEMA = yup.object().shape({\n        questionText: yup.string().required('This is a required field'),\n        correctAnswer: yup.string().required('This is a required field'),\n        choise1: yup.string().required('This is a required field'),\n        choise2: yup.string().required('This is a required field'),\n        choise3: yup.string().required('This is a required field'),\n    });\n    const submitQuestionHandler = (values) => {\n        if (!initValues) {\n            let creationRequest = QuestionServices.createMcqQuestion({\n                questionText: values.questionText,\n                correctAnswer: values.correctAnswer,\n                answers: [values.correctAnswer, values.choise1, values.choise2, values.choise3]\n            })\n            // pass the request outside the component\n            getQuestionCreationRequest(creationRequest)\n        }\n        //EDIT MODE\n        else {\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\n                questionText: values.questionText,\n                correctAnswer: values.correctAnswer,\n                answers: [values.correctAnswer, values.choise1, values.choise2, values.choise3]\n            })\n\n            // pass the request outside the component\n            getQuestionCreationRequest(editRequest)\n        }\n\n    }\n\n    const mcqChoices = initValues?.mcq?.mcq_answers?.filter(item=>!item.isCorrect)\n    const mcqCorrectAnswer = initValues?.mcq?.mcq_answers?.find(item=>item.isCorrect)\n    return <Formik\n        initialValues={{\n            questionText: initValues?.questionText || '',\n            correctAnswer: mcqCorrectAnswer?.option.value || '',\n            choise1: mcqChoices?.[0].option.value || '',\n            choise2: mcqChoices?.[1].option.value || '',\n            choise3: mcqChoices?.[2].option.value || ''\n        }}\n        enableReinitialize={true}\n        validationSchema={MCQSCHEMA}\n        onSubmit={submitQuestionHandler}\n    >\n        {props => (\n            <form className='m-5' onSubmit={props.handleSubmit}>\n                {/* Question Header */}\n                <div className='mt-4 text-start'>\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\n                    <TextField\n                        name=\"questionText\"\n                        id=\"questionText\"\n                        placeholder='Question on your mind....'\n                        multiline\n                        rows={4}\n                        fullWidth\n                        value={props.values.questionText}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        helperText={props.touched.questionText && props.errors.questionText}\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\n                        variant=\"filled\"\n                    />\n                </div>\n\n                {/* Correct Answer */}\n                <div className='mt-4 text-start'>\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Correct Option</SuccessLabel>\n                    <TextField\n                        name=\"correctAnswer\"\n                        id=\"correctAnswer\"\n                        placeholder='Correct Answer....'\n                        fullWidth\n                        value={props.values.correctAnswer}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\n                    />\n                </div>\n\n                {/* Options #1 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise1' className='mb-2'>Wrong Option 1</DangerLabel>\n                    <TextField\n                        name=\"choise1\"\n                        id=\"choise1\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise1}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise1 && props.errors.choise1}\n                        error={props.touched.choise1 && Boolean(props.errors.choise1)}\n                    />\n                </div>\n\n                {/* Options #2 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise2' className='mb-2'>Wrong Option 2</DangerLabel>\n                    <TextField\n                        name=\"choise2\"\n                        id=\"choise2\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise2}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise2 && props.errors.choise2}\n                        error={props.touched.choise2 && Boolean(props.errors.choise2)}\n                    />\n                </div>\n\n                {/* Options #3 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise3' className='mb-2'>Wrong Option 3</DangerLabel>\n                    <TextField\n                        name=\"choise3\"\n                        id=\"choise3\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise3}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise3 && props.errors.choise3}\n                        error={props.touched.choise3 && Boolean(props.errors.choise3)}\n                    />\n                </div>\n\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\n            </form>\n        )}\n    </Formik>\n};\n\nexport default MCQ;\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MCQ from './QuestionTypes/MCQ';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons/lib/icons';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\n\r\n\r\nconst AddQuestionScreen = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.question)\r\n    const oldQuestion = location.state?.question\r\n\r\n    /** get question details */\r\n    const [oldQuestionDetails, setOldQuestionDetails] = useState(null)\r\n    useEffect(() => {\r\n        if (!oldQuestion?.id) return\r\n        QuestionServices.getQuestionDetails(oldQuestion?.id)\r\n            .then(res => {\r\n                setOldQuestionDetails(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [oldQuestion?.id])\r\n\r\n    const [questionTypes, setQuestionTypes] = useState(null);\r\n    const getQuestionTypes = () => {\r\n        setQuestionTypes([\r\n            { id: '123', value: 'mcq' }\r\n        ])\r\n    }\r\n    useEffect(() => {\r\n        getQuestionTypes();\r\n    }, []);\r\n\r\n\r\n    const [questionType, setQuestionType] = useState(oldQuestion?.type || '');\r\n    const questionTypeSelectionMenuMarkup = (\r\n        <div className='w-50 mx-auto'>\r\n            <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                fullWidth\r\n                label=\"Question Type\"\r\n                value={questionType}\r\n                onChange={(event) => setQuestionType(event.target.value)}\r\n                disabled={isEditMode}\r\n            >\r\n                {questionTypes?.map((type) => (\r\n                    <MenuItem key={type.id} value={type.value}>\r\n                        {type.value}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n\r\n    const createQuestionHandler = (request) => {\r\n        request\r\n            .then(res => {\r\n                console.log(\"Question request\", res)\r\n\r\n                let isFromExamCreation = location.state?.fromExamCreation\r\n                if (isFromExamCreation) {\r\n                    dispatch(saveAQuestion([{ questionText: res.questionText, id: res.id }]))\r\n                }\r\n                showSuccessMsg(\"Request done successfully\")\r\n                history.goBack()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return <div className=\"row justify-content-center text-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            <CardComponent title={!isEditMode ? 'Add Question' : 'Edit Question'}>\r\n                <div className='p-4'>\r\n                    {questionTypes && questionTypeSelectionMenuMarkup}\r\n\r\n                    {!questionType &&\r\n                        <div className='d-flex flex-row justify-content-center align-items-center mt-5'>\r\n                            <ExclamationCircleOutlined size={36} style={{ color: Colors.danger, marginInlineEnd: '.5rem' }} />\r\n                            <h6 className='text-danger m-0'>Please Choose Question Type</h6>\r\n                        </div>\r\n                    }\r\n\r\n                    {questionType === 'mcq' &&\r\n                        <div>\r\n                            <MCQ\r\n                                initValues={oldQuestionDetails?.type === 'mcq' ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </CardComponent>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default AddQuestionScreen;\r\n","import React from 'react'\r\nimport { Button, Card, CardContent, CardHeader, colors, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n\r\nconst McqAnswer = ({\r\n    questionText,\r\n    choices,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n    const submitHandler = (values) => {\r\n        console.log(values)\r\n    }\r\n    const correctAnswer = choices?.find(item => item.isCorrect)\r\n    const formatedAnswer = (answer) => {\r\n        return {\r\n            id: answer?.id,\r\n            displayText: (answer?.option?.value || answer?.value)\r\n        }\r\n    }\r\n\r\n    const isCorrectStudentAnswer = questionMark === studentMark\r\n    return (\r\n        <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n            {studentAnswer ?\r\n                <CardHeader\r\n                    action={\r\n                        !isMarked ?\r\n                            <div>\r\n                                <IconButton onClick={markAsWrong} size='large'>\r\n                                    <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                </IconButton>\r\n                                <IconButton onClick={markAsRight} size='large'>\r\n                                    <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                </IconButton>\r\n                            </div>\r\n                            :\r\n                            <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                    {3}\r\n                                </Typography>\r\n                                <Typography variant='h5'>\r\n                                    {`/5`}\r\n                                </Typography>\r\n                            </div>\r\n                    }\r\n                />\r\n                :\r\n                null\r\n            }\r\n\r\n            <CardContent>\r\n                {/* Question Text */}\r\n                <Typography className='m-3' variant='h5'>\r\n                    {questionText}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            {/* MCQ Content */}\r\n            <CardContent className=''>\r\n                <form onSubmit={submitHandler}>\r\n                    <FormControl>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                            defaultValue={formatedAnswer(studentAnswer)?.id || formatedAnswer(correctAnswer)?.id}\r\n                            name=\"radio-buttons-group\"\r\n                        >\r\n                            {choices?.map(choice => (\r\n                                formatedAnswer(choice).id === formatedAnswer(correctAnswer).id ?\r\n                                    <div key={choice.id} className='d-flex align-items-center py-3 text-success' >\r\n                                        <FormControlLabel\r\n                                            key={formatedAnswer(choice).id}\r\n                                            value={formatedAnswer(choice).id}\r\n                                            disabled\r\n                                            control={<Radio />}\r\n                                            label={formatedAnswer(choice).displayText}\r\n                                        />\r\n                                        <CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                                    </div>\r\n                                    :\r\n                                    <div className='d-flex align-items-center py-3 text-danger' >\r\n                                        <FormControlLabel\r\n                                            key={formatedAnswer(choice).id}\r\n                                            disabled\r\n                                            value={formatedAnswer(choice).id}\r\n                                            control={<Radio />}\r\n                                            label={formatedAnswer(choice).displayText}\r\n                                        />\r\n                                        {(!studentAnswer || (formatedAnswer(studentAnswer).id === formatedAnswer(choice).id)) ?\r\n                                            <CancelOutlinedIcon fontSize='large' color='error' />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </div>\r\n                            ))\r\n                            }\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </CardContent>\r\n            {isMarked ?\r\n                <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '18%' }}>\r\n                    {(isCorrectStudentAnswer) ?\r\n                        <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                        :\r\n                        <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                    }\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default McqAnswer","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\n\r\nconst QuestionViewScreen = () => {\r\n    const { questionId } = useParams()\r\n\r\n    const [question, setQuestion] = useState(null)\r\n    useEffect(() => {\r\n        QuestionServices.getQuestionDetails(questionId)\r\n            .then(res => {\r\n                console.log(res?.question)\r\n                setQuestion(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [questionId])\r\n\r\n    return <div className=\"row justify-content-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            {question?.mcq &&\r\n                <McqAnswer questionText={question?.questionText} choices={question?.mcq?.mcq_answers} />\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default QuestionViewScreen;\r\n","import _axios from \"../axios-instance\";\n\nexport class MarkExamServices {\n    static getAllStudentsAnswers(examId) {\n        return _axios.get(`exams/${examId}/all-answers`)\n    }\n\n    static getSpecificStudentAnswers(examId, studentId) {\n        return _axios.get(`exams/${examId}/all-answers/answer`, {\n            params: {\n                student_id: studentId\n            }\n        })\n    }\n\n    static manualMark({ studentId, examId, questionId, questionMark }) {\n        return _axios.post(`exams/manual`, { studentId, examId, questionId, questionMark })\n    }\n\n    static markAllAutomatic(examId) {\n        return _axios.post(`exams/mark/${examId}`)\n    }\n\n    static markSpecificStudentAutomatic(examId, studentId) {\n        return _axios.post(`exams/mark/${examId}/${studentId}`)\n    }\n\n}\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { ExamServices } from '../../../../apis/Services/ExamService'\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\nimport HandleErrors from '../../../../hooks/handleErrors'\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\nimport Typography from '@mui/material/Typography';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\nimport DesktopAccessDisabledIcon from '@mui/icons-material/DesktopAccessDisabled';\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\nimport SupervisedUserCircleIcon from '@mui/icons-material/SupervisedUserCircle';\nimport PhotoCameraFrontIcon from '@mui/icons-material/PhotoCameraFront';\n\nconst AntiCheatingTimeline = ({ examConfig }) => {\n    const isRandom = examConfig?.questionsRandomOrder\n    const isDisableSwitch = examConfig?.disableSwitchBrowser\n    const isplagiarism = examConfig?.plagiarismCheck\n    const isFaceDetection = examConfig?.faceDetection\n    const isFaceVerify = examConfig?.faceRecognition\n    return (\n        <Timeline position=\"alternate\">\n            <TimelineItem>\n                <TimelineOppositeContent\n                    sx={{ m: 'auto 0' }}\n                    align=\"right\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                    style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\n                >\n                    Level1\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineConnector />\n                    <TimelineDot color={isRandom ? \"primary\" : \"error\"}>\n                        <ShuffleIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\n                    <Typography\n                        style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\n                        variant=\"h6\"\n                        component=\"span\"\n                    >\n                        Random Order\n                    </Typography>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    sx={{ m: 'auto 0' }}\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                    style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\n                >\n                    Level2\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineConnector />\n                    <TimelineDot color={isDisableSwitch ? \"primary\" : \"error\"}>\n                        <DesktopAccessDisabledIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\n                    <Typography\n                        style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\n                        variant=\"h6\"\n                        component=\"span\"\n                    >\n                        Disable Switch Browser\n                    </Typography>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\n                    sx={{ m: 'auto 0' }}\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                >\n                    Level3\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineConnector />\n                    <TimelineDot color={isplagiarism ? \"primary\" : \"error\"}>\n                        <FactCheckIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\n                    <Typography\n                        style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\n                        variant=\"h6\"\n                        component=\"span\"\n                    >\n                        Plagiarism Check\n                    </Typography>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\n                    sx={{ m: 'auto 0' }}\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                >\n                    Level4\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineConnector />\n                    <TimelineDot color={isFaceDetection ? \"primary\" : \"error\"}>\n                        <SupervisedUserCircleIcon />\n                    </TimelineDot>\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\n                    <Typography\n                        style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\n                        variant=\"h6\"\n                        component=\"span\"\n                    >\n                        Face Detection\n                    </Typography>\n                </TimelineContent>\n            </TimelineItem>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\n                    sx={{ m: 'auto 0' }}\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                >\n                    Level5\n                </TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot color={isFaceVerify ? \"primary\" : \"error\"}>\n                        <PhotoCameraFrontIcon />\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\n                    <Typography\n                        style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\n                        variant=\"h6\"\n                        component=\"span\"\n                    >\n                        Face Recognition\n                    </Typography>\n                </TimelineContent>\n            </TimelineItem>\n        </Timeline>\n    )\n}\n\nexport const ExamOverview = ({ questions, examConfigs}) => {\n    const { examId } = useParams()\n    \n    return (\n        <>\n            <CardComponent title={'Anti Cheating Levels'}>\n                <AntiCheatingTimeline examConfig={examConfigs} />\n            </CardComponent>\n            <br /><br />\n            <CardComponent title={'Questions'}>\n                {questions?.map(item =>\n                    (item.type === 'mcq') &&\n                    <div key={item?.id} className='m-4'>\n                        <McqAnswer questionText={item?.questionText} choices={item?.answers} />\n                    </div>\n\n                )}\n            </CardComponent>\n        </>\n    )\n}","import { Typography } from '@mui/material'\nimport React from 'react'\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\n\nconst NoContentComponent = ({ text }) => {\n    return (\n        <div className='d-flex justify-content-center align-items-center'>\n            <DoNotDisturbAltIcon color='error' />\n            <Typography className='ms-1' color={'error'}>{text}</Typography>\n        </div>\n    )\n}\n\nexport default NoContentComponent","const useImageResolver = () => {\n    return (imageName) => {\n        if (imageName?.includes(\"http\")) return imageName\n        return 'https://smartexamwebsite.s3.us-east-2.amazonaws.com/uploads/' + imageName\n    }\n}\n\nexport default useImageResolver\n","import React from 'react'\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Avatar, Button, colors, IconButton, Paper } from '@mui/material';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { Colors } from '../../../../constants/Colors';\nimport { useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport NoContentComponent from '../../../../Components/NoContentComponent/NoContentComponent';\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\nimport useImageResolver from '../../../../hooks/useImageResolver';\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\nimport { useParams } from 'react-router-dom';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../../hooks/handleErrors';\n\nconst StudentsList = ({ students, getStudentExams = () => { }, examConfigs }) => {\n    const imageResolver = useImageResolver()\n\n    const history = useHistory()\n    const location = useLocation()\n    const params = useParams()\n    const goToThisStudent = (id) => {\n        history.push(`${location.pathname}/${id}`, { examConfigs })\n    }\n\n    const markAllHandler = () => {\n        MarkExamServices.markAllAutomatic(params?.examId)\n            .then(res => {\n                showSuccessMsg(\"Mark All Student Successfully!\")\n                getStudentExams()\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div>\n            <div className=\"d-flex justify-content-end\">\n                <Button onClick={markAllHandler} color='success' variant=\"contained\">Mark All <CheckOutlinedIcon /></Button>\n            </div>\n            <Paper className='mt-3' elevation={3}>\n                <List>\n                    {students?.map(item => (\n                        <ListItem key={`${item.student_id}_${item.attempt}`} onClick={() => goToThisStudent(item.student_id)}>\n                            <ListItemButton>\n                                <ListItemAvatar>\n                                    <Avatar alt={item.name} src={imageResolver(item?.image)} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primaryTypographyProps={item?.isMarked ? { color: Colors.success, fontWeight: 'bolder' } : {}}\n                                    primary={`${item.name}`}\n                                    secondary={item?.isMarked && `Mark: ${item.mark}`}\n                                />\n                            </ListItemButton>\n                        </ListItem>\n                    ))\n                    }\n                    {!students?.length ?\n                        <NoContentComponent text={\"No submittion yet\"} />\n                        :\n                        null\n                    }\n                </List>\n            </Paper>\n        </div>\n    )\n}\n\nexport default StudentsList","import { Box, Tabs, Tab } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport { ExamOverview } from './ExamOverview';\nimport StudentsList from './StudentsList';\n\nconst ExamView = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const [selectedTab, setSelectedTab] = React.useState('Overview');\n    /**\n     * Auto Select tab based on query params\n     */\n    useEffect(() => {\n        let selectedTab = new URLSearchParams(location.search).get('selectedTab')\n        setSelectedTab(selectedTab || 'Overview')\n    }, [location.search?.selectedTab])\n\n\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n        history.push({\n            pathname: location.pathname,\n            search: `?selectedTab=${newValue}`\n        })\n    };\n\n    const params = useParams()\n    const [questions, setQuestions] = useState(null)\n    useEffect(() => {\n        ExamServices.getExamQuestions(params.examId)\n            .then(res => {\n                setQuestions(res.questions)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const [studentAnswers, setStudentAnswers] = useState(null)\n    const getStudentExams = () => {\n        MarkExamServices.getAllStudentsAnswers(params.examId)\n            .then(res => {\n                console.log(res.solvedExams)\n                setStudentAnswers(res.solvedExams)\n            })\n            .catch(err => HandleErrors(err))\n    }\n    useEffect(() => {\n        getStudentExams()\n    }, [])\n\n    const {examId} = useParams()\n    const [examConfigs, setExamConfigs] = useState(null)\n    useEffect(() => {\n        ExamServices.getExamConfig(examId)\n            .then(res => {\n                console.log(res.configuration)\n                setExamConfigs(res.configuration)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 mt-5\">\n                    <Box sx={{ width: '100%' }}>\n                        <Tabs\n                            value={selectedTab}\n                            onChange={handleChange}\n                            textColor=\"primary\"\n                            indicatorColor=\"primary\"\n                            aria-label=\"secondary tabs example\"\n                        >\n                            <Tab value=\"Overview\" label=\"Overview\" />\n                            <Tab value=\"StudentAnswers\" label=\"Student Answers\" />\n                            <Tab value=\"ExamReport\" label=\"Exam Report\" />\n                        </Tabs>\n                    </Box>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-12 mt-5\">\n                    {selectedTab === 'Overview' &&\n                        <ExamOverview questions={questions} examConfigs={examConfigs}/>\n                    }\n                    {selectedTab === 'StudentAnswers' &&\n                        <StudentsList\n                            students={studentAnswers}\n                            getStudentExams={getStudentExams}\n                            examConfigs={examConfigs}\n                        />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ExamView","import { Button, Chip, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService'\nimport HandleErrors from '../../../../hooks/handleErrors'\nimport useImageResolver from '../../../../hooks/useImageResolver'\nimport PersonIcon from '@mui/icons-material/Person';\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\n\nconst StudentCard = ({ name, isVerified, numberOfFaces, image, markAutoFun, examConfigs }) => {\n    const imageResolver = useImageResolver()\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-md-6 col-12\">\n                <div className=\"d-flex\">\n                    <img\n                        className='shadow-sm'\n                        src={imageResolver(image)}\n                        style={{ height: 200, width: 200, objectFit: 'cover', borderRadius: 15 }}\n                        alt=\"student Photo\"\n                    />\n                    <div className='ms-3'>\n                        <Typography variant=\"h4\" fontWeight={'bold'} color={'primary'}>{name}</Typography>\n                        {examConfigs?.faceDetection ?\n                            <Chip icon={<PersonIcon />} color={(numberOfFaces === 1) ? 'success' : 'error'} label={`${numberOfFaces} face detected`} className=\"me-2\" />\n                            :\n                            null\n                        }\n                        {examConfigs?.faceRecognition ?\n                            <Chip icon={<VerifiedIcon />} color={isVerified ? 'success' : 'error'} label={isVerified ? \"Verified\" : \"Unverified\"} />\n                            :\n                            null\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className='col-md-6 col-12 mt-md-0 mt-5 text-md-end text-center'>\n                <Button onClick={markAutoFun} variant=\"contained\" color=\"success\">\n                    Mark Automatic\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nconst StudentSolvedExam = () => {\n    const params = useParams()\n    const history = useHistory()\n    const location = useLocation()\n    const examConfigs = location?.state?.examConfigs\n\n    const [studentExamResult, setStudentExamResult] = useState(null)\n\n    const autoMarkThisStudentHandler = () => {\n        MarkExamServices.markSpecificStudentAutomatic(params?.examId, params?.studentId)\n            .then(res => {\n                showSuccessMsg(`Mark ${studentExamResult.studentName}'s exam successfully!`)\n                history.goBack()\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    const markAsRightHandler = (questionId, mark) => {\n        MarkExamServices.manualMark({\n            examId: params?.examId,\n            studentId: params?.studentId,\n            questionId: questionId,\n            questionMark: mark\n        })\n            .then(res => {\n                getStudentAnswers()\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    const markAsWrongHandler = (questionId) => {\n        MarkExamServices.manualMark({\n            examId: params?.examId,\n            studentId: params?.studentId,\n            questionId: questionId,\n            questionMark: 0\n        })\n            .then(res => {\n                getStudentAnswers()\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    const getStudentAnswers = () => {\n        MarkExamServices.getSpecificStudentAnswers(params?.examId, params?.studentId)\n            .then(res => {\n                setStudentExamResult(res)\n                console.log(res)\n            })\n            .catch(err => HandleErrors(err))\n    }\n    useEffect(() => {\n        getStudentAnswers()\n    }, [])\n\n    return (\n        <div className='container'>\n            <StudentCard\n                name={studentExamResult?.studentName}\n                isVerified={studentExamResult?.isVerified}\n                numberOfFaces={studentExamResult?.numberOfFaces}\n                image={studentExamResult?.image}\n                markAutoFun={autoMarkThisStudentHandler}\n                examConfigs={examConfigs}\n            />\n            <hr />\n            <div className=\"row mt-5 justify-content-center\">\n                <div className=\"col-12\">\n                    <>\n                        {studentExamResult?.solution?.map(item =>\n                            <div className='my-2'>\n                                {(item?.question?.type === 'mcq') ?\n                                    <McqAnswer\n                                        key={item.question_id}\n                                        markAsRight={() => markAsRightHandler(item?.question_id, item?.totalQuestionMark)}\n                                        markAsWrong={() => markAsWrongHandler(item?.question_id)}\n                                        studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\n                                        questionText={item?.question?.questionText}\n                                        choices={item?.question?.answers}\n                                        studentMark={item?.questionMark}\n                                        questionMark={item?.totalQuestionMark}\n                                        isMarked={item?.isMarked}\n                                    />\n                                    :\n                                    null\n                                }\n                            </div>\n\n                        )}\n                    </>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentSolvedExam","import AddExam from '../Views/Instructor/Exams/AddExam/AddExam'\nimport AddExamQuestions from '../Views/Instructor/Exams/AddExamQuestions/AddExamQuestions'\nimport Exams from '../Views/Instructor/Exams/Exams'\nimport Questions from '../Views/Instructor/Questions/Questions'\nimport SetExamOptions from '../Views/Instructor/Exams/SetExamOptions/SetExamOptions'\nimport AddQuestionScreen from '../Views/Instructor/Questions/AddQuestionScreen'\nimport QuestionViewScreen from '../Views/Instructor/Questions/QuestionViewScreen'\nimport ExamView from '../Views/Instructor/Exams/ExamView'\nimport StudentSolvedExam from '../Views/Instructor/Exams/ExamView/StudentSolvedExam'\n\nconst InstructorRoutes =\n    [\n        { path: '/exams', component: Exams, exact: true },\n        \n        { path: '/exams/add', component: AddExam, exact: true },\n        { path: '/exams/edit', component: AddExam, exact: true },\n        { path: '/exams/:examId/set-options', component: SetExamOptions, exact: true },\n        { path: '/exams/:examId/add-questions', component: AddExamQuestions, exact: true },\n\n        { path: '/questions', component: Questions, exact: true },\n        { path: '/questions/add', component: AddQuestionScreen, exact: true },\n        { path: '/questions/edit', component: AddQuestionScreen, exact: true },\n        { path: '/questions/:questionId', component: QuestionViewScreen, exact: true },\n\n        { path: '/exams/:examId', component: ExamView, exact: true },\n        { path: '/exams/:examId/:studentId', component: StudentSolvedExam, exact: true },\n    ]\nexport default InstructorRoutes\n","import Home from '../Views/Home/Home'\n\nconst MainRoutes =\n    [\n        { path: \"/\", component: Home, exact: true },\n    ]\n\nexport default MainRoutes\n","import React from 'react'\nimport './Home.css'\n\nconst Home = () => {\n    return (\n        \n        <div className='main' style={{minHeight:\"80vh\"}}>\n            {/* <h1>Hiii</h1> */}\n            {/* <Signupinquiry></Signupinquiry> */}\n            {/* <Signup></Signup> */}\n            {/* <Login></Login> */}\n        </div>\n    )\n}\n\nexport default Home\n","import Webcam from \"react-webcam\";\nimport { useRef, useCallback } from \"react\";\nimport Button from '@mui/material/Button';\n\n// const videoConstraints = {\n//     width: 1280,\n//     height: 720,\n//     facingMode: \"user\"\n// };\n\nconst TakePhoto = (props) => {\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n\n\n            const imageSrc = webcamRef.current.getScreenshot();\n            props.captured(imageSrc)\n            props.clicked()\n\n        },\n\n\n\n\n\n        [webcamRef,props]\n    );\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-center\">\n                <Webcam\n                    audio={false}\n                    // height={720}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                // width={1280}\n                // videoConstraints={videoConstraints}\n                />\n\n            </div>\n            {/* {imgSrc && (\n                <img src={imgSrc} alt=\"555\" />\n\n            )} */}\n            <div className=\"d-flex justify-content-center\">\n                <Button\n                    className='btn m-2 p-2 text-white'\n                    size=\"small\"\n                    variant=\"contained\"\n                    color='success'\n                    onClick={capture}\n                >\n                    Capture\n                </Button>\n\n            </div>\n        </div>\n    );\n};\nexport default TakePhoto;\n","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport TakePhoto from '../TakePhoto/TakePhoto';\nimport { useState } from 'react';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport { ExamServices } from '../../../apis/Services/ExamService';\nimport moment from 'moment';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { useParams } from 'react-router-dom';\n\n\nconst Examinstructions = (props) => {\n    const exam = props.location.state.exam\n\n    const [isPhotoTaken, setIsPhotoTaken] = useState(false);\n    const [noOfFaces, setNoOfFaces] = useState(null);\n    const [photoVerified, setPhotoVerified] = useState(null);\n    // const [studentImage, setStudentImage] = useState(null);\n\n    const { examId } = useParams()\n    const [examConfigs, setExamConfigs] = useState(null)\n    useEffect(() => {\n        console.log(examId)\n        ExamServices.getExamConfig(examId)\n            .then(res => {\n                console.log(res.configuration)\n                setExamConfigs(res.configuration)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const goToExamHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        let startExamData = {\n            \"startTime\": moment().format('yyyy-MM-DD HH:mm:ss'),\n            \"numberOfFaces\": 1/*noOfFaces*/,\n            \"isVerified\": true/*photoVerified*/\n        }\n        ExamServices.startExam(exam.id, startExamData)\n            .then((response) => {\n                console.log(\"Starting Exam\")\n                console.log(response)\n\n                props.history.push({\n                    pathname: `/exams/${exam.id}/start`,\n                    state: { exam: exam }\n                })\n            }).catch((error) => {\n                if (error?.message?.includes(\"You must submit the previous attempt first before starting a new attempt\")) {\n                    props.history.push({\n                        pathname: `/exams/${exam.id}/start`,\n                        state: { exam: exam }\n                    })\n                    return\n                }\n                HandleErrors(error)\n            })\n    }\n\n    const photoTakenHandler = (img) => {\n        setIsPhotoTaken(true)\n        // setStudentImage(img)\n        showSuccessMsg(\"Photo Taken Successfully\")\n\n        // Data to be passed to ML apis\n        let faceDetectionData = {\n            \"image\": img,\n            \"examId\": exam.id\n        }\n        let faceVerificationData = {\n            \"image1\": img,\n            \"examId\": exam.id\n        }\n\n        // let numberOfFaces;\n        // let verified; // faceVerified or not\n        ExamServices.applyFaceDetection(faceDetectionData)\n            .then((response) => {\n                setNoOfFaces(response.numberOfFaces)\n            }).catch((error) => {\n                console.log(error)\n            })\n\n        ExamServices.applyFaceVerification(faceVerificationData)\n            .then((response) => {\n                setPhotoVerified(response.verified)\n            }).catch((error) => {\n                console.log(error)\n            })\n        return\n    }\n\n    const mustVerifyFace = (examConfigs?.faceRecognition || examConfigs?.faceDetection)\n    return (\n        <div>\n            <div className=\"row justify-content-center text-center my-5\">\n                <div className=\"col-md-8 col-12\">\n                    <CardComponent title={'Before The Exam'}>\n                        <div className=\"m-5 text-start \">\n                            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                                <CardContent>\n                                    {/* Instructions Title */}\n                                    <Typography className='text-danger font-weight-bold' variant=\"h4\" component=\"div\">\n                                        Important Instructions\n                                        <hr />\n                                    </Typography>\n                                    <ul>\n                                        <li className='text-danger font-weight-bold'>\n                                            Verify your identity with a photo before entering the exam.\n                                        </li>\n                                        <li>\n                                            Don't use internet for getting information.\n                                        </li>\n                                        <li>\n                                            No one else can be in the room with you.\n                                        </li>\n                                        <li>\n                                            Time is limited, so organize your time well with questions.\n                                        </li>\n                                        <li>\n                                            The room must be well-lit and you must be clearly visible.\n                                        </li>\n                                    </ul>\n                                    <div className='text-center'>\n\n                                    </div>\n                                    <div className='text-center text-success' >\n                                        Good Luck with your exam!\n                                    </div>\n\n                                </CardContent>\n                                <CardActions className='d-flex m-2 justify-content-end'>\n                                    {mustVerifyFace ?\n                                        <Popup\n                                            trigger={\n                                                <Button\n                                                    className='btn m-2 p-2 text-white'\n                                                    size=\"large\"\n                                                    variant=\"contained\"\n                                                    color='warning'\n                                                >\n                                                    Take Photo\n                                                </Button>\n                                            }\n                                            modal\n                                            lockScroll\n                                            position=\"top center\"\n                                        >\n                                            {close => (\n                                                <CardComponent title={'Take a nice photo'}>\n                                                    <h4 className=\"d-flex justify-content-center\">\n                                                        Make sure the place is well lit..!\n                                                    </h4>\n                                                    <TakePhoto\n                                                        captured={photoTakenHandler}\n                                                        clicked={close}\n                                                    ></TakePhoto>\n                                                </CardComponent>\n\n                                            )}\n                                        </Popup>\n                                        :\n                                        null\n                                    }\n                                    <Button\n                                        className='btn m-2 p-2 text-white'\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color='success'\n                                        onClick={goToExamHandler}\n                                        disabled={(mustVerifyFace && !isPhotoTaken)}\n                                    >\n                                        Start Exam Now\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </div>\n                    </CardComponent>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Examinstructions);\n","import DomainUrl from \"../Domain\";\n\nexport const STUDENT_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/students/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/students/me`,\n        method:'GET'\n    }\n};\n\n","import { STUDENT_ENDPOINTS } from \"../Endpoints/StudentEndpoints\";\nimport { Network } from \"../Network\";\nimport _axios from \"../axios-instance\";\n\nexport class StudentServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(STUDENT_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: STUDENT_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(STUDENT_ENDPOINTS.getMyProfile.url, {\n            method: STUDENT_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n\n    static getSpecificExamResults(examId) {\n        return _axios.get(`/exams/${examId}/report`)\n    }\n}","import React, { useEffect } from 'react'\nimport { StudentServices } from '../../../apis/Services/StudentService'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst MyResults = () => {\n    \n    return (\n        <div>MyResults</div>\n    )\n}\n\nexport default MyResults","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { Chip, colors, Grid } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n\r\n\r\n\r\nconst ShowExams = (props) => {\r\n    // const [exam, setExam] = useState(null)\r\n\r\n    const goToInstructionsHandler = (event, exam) => {\r\n        // this code pevents from going to another page\r\n        //event.preventDefault()\r\n\r\n        props.history.push({\r\n            pathname: `/exams/${exam.id}`,\r\n            state: { exam: exam }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get exams\r\n     */\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams()\r\n            .then(res => {\r\n                // console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const getRemainingEndTime = (examEndDate) => {\r\n        let result = moment(examEndDate).diff(moment(), 'hours')\r\n        return result\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Your Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card style={{ border: exam.isSubmitted ? `1px solid ${Colors.success}` : '' }} key={exam.id} className='shadow p-3 mb-5 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Exam Title */}\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {exam.name}\r\n                                    </Typography>\r\n                                    {exam.isSubmitted &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Submitted'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    {exam.isMarked &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Marked'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'}>Due:</Typography>\r\n                                        {getRemainingEndTime(exam.endAt) >= 0 ?\r\n                                            < Typography\r\n                                                className='mx-1'\r\n                                                color={getRemainingEndTime(exam.endAt) > 24 ? Colors.success : Colors.danger}>\r\n                                                {`${moment(exam.endAt).format('yyyy/MM/DD hh:mm A')} [${getRemainingEndTime(exam.endAt)} hours left]`}\r\n                                            </Typography>\r\n                                            :\r\n                                            <Typography className='mx-1'>\r\n                                                {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                            </Typography>\r\n                                        }\r\n                                    </Grid>\r\n                                    <Typography variant=\"body3\">\r\n                                        <b>Duration:</b> {exam.duration}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        className='btn m-2 p-2 btn-primary text-white'\r\n                                        size=\"small\"\r\n                                        onClick={(e) => goToInstructionsHandler(e, exam)}\r\n                                    >\r\n                                        Go to this Exam\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withRouter(ShowExams);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { saveAnswer } from '../../../../redux/actions/QuestionActions'\r\n\r\nconst MCQ = (props) => {\r\n\r\n    const [chosenOptionID, setChosenOptionID] = useState(null);\r\n    const [chosenAnswer, setChosenAnswer] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentQuestionNumber !== props.questionIndex - 1) return\r\n\r\n        setChosenOptionID(props.savedStudentAnswer?.chosenOptionID)\r\n        setChosenAnswer(props.savedStudentAnswer?.chosenAnswer)\r\n    // eslint-disable-next-line\r\n    }, [props.currentQuestionNumber]);\r\n\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n\r\n        setChosenOptionID(parseInt(e.target.id))\r\n        setChosenAnswer(e.target.value)\r\n\r\n        // const answer = {\r\n        //     chosenOptionID: chosenOptionID,\r\n        //     chosenAnswer: chosenAnswer\r\n\r\n        // }\r\n        // console.log(props)\r\n        // props.saveAns(props.questionIndex, answer)\r\n\r\n        // suppose that you send data to redux here\r\n    }\r\n\r\n    let isCheckedCondition = (ansIndex) => {\r\n        // return chosenOptionID && parseInt(chosenOptionID) === parseInt(props.savedStudentAnswer?.chosenOptionID)\r\n        return parseInt(chosenOptionID) === parseInt(props.answers[ansIndex].id)\r\n    }\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* TODO, FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.questionText}\r\n\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent className=''>\r\n                    <form >\r\n                        {/* Option 1 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(0)}\r\n                                type=\"radio\"\r\n                                value={props.answers[0].value}\r\n                                id={props.answers[0].id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[0].id}>\r\n                                {props.answers[0].value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* Option 2 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(1)}\r\n                                type=\"radio\"\r\n                                value={props.answers[1].value}\r\n                                id={props.answers[1].id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[1].id}>\r\n\r\n                                {props.answers[1].value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        {/* Option 3 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(2)}\r\n                                type=\"radio\"\r\n                                value={props.answers[2].value}\r\n                                id={props.answers[2].id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[2].id} >\r\n\r\n                                {props.answers[2].value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* Option 4 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(3)}\r\n                                type=\"radio\"\r\n                                value={props.answers[3].value}\r\n                                id={props.answers[3].id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[3].id}>\r\n                                {props.answers[3].value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                    </form>\r\n\r\n\r\n\r\n\r\n                </CardContent>\r\n\r\n\r\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-danger text-white'\r\n                        variant=\"contained\"\r\n                        onClick={props.clickedPrevious}\r\n                        disabled={props.previousButtonDisabled}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-primary text-white'\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            props.clickedNext(chosenOptionID, chosenAnswer)\r\n                            props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\r\n                            setChosenOptionID(null)\r\n                        }}\r\n                    >\r\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                    </button>\r\n\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default MCQ;\r\n","import ExamInstructions from \"../Views/Student/ExamInstructions/ExamInstructions\"\nimport MyResults from \"../Views/Student/MyResults\"\nimport ShowExams from \"../Views/Student/ShowExams/ShowExams\"\nimport TakeExam from \"../Views/Student/TakeExam/TakeExam\"\nimport WellDone from \"../Views/Student/WellDone/WellDone\"\n\nconst StudentRoutes =\n    [\n        { path: '/exams', component: ShowExams, exact: true },\n        { path: \"/exams/:examId\", component: ExamInstructions, exact: true },\n        { path: \"/exams/:examId/start\", component: TakeExam, exact: true },\n        { path: \"/done\", component: WellDone, exact: true },\n        { path: \"/my-results\", component: MyResults, exact: true }\n    ]\nexport default StudentRoutes\n","import React, { useEffect } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport MCQ from '../Questions/MCQ/MCQ';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport { useState } from 'react';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useParams } from 'react-router-dom';\r\nconst TakeExam = (props) => {\r\n    const params = useParams()\r\n    const exam = props.location.state?.exam || { id: params.examId, name: 'Continoue The Exam' }\r\n    const [questions, setQuestions] = useState(null);\r\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let responseQuestions;\r\n        ExamServices.getExamQuestions(exam.id)\r\n            .then((response) => {\r\n                responseQuestions = response.questions\r\n                return ExamServices.getStudentExamAnswers(exam.id)\r\n            })\r\n            .then(res => {\r\n                // Formatting answer array stage\r\n                let formatedAnswers = {}\r\n                res?.answers.forEach((answer) => {\r\n                    formatedAnswers[answer.question_id] = { chosenOptionID: answer.option_id, chosenAnswer: answer.studentAnswer }\r\n                })\r\n                console.log(\"ANSWERS\", formatedAnswers)\r\n                //formated question stage\r\n                let formatedQuestions = responseQuestions.map((question) => {\r\n                    let thisQuestionAnswer = formatedAnswers?.[question.id]\r\n                    if (!thisQuestionAnswer) return question\r\n\r\n                    let formatedQuestion = { ...question, studentAnswer: thisQuestionAnswer }\r\n                    return formatedQuestion\r\n                })\r\n                setQuestions([...formatedQuestions])\r\n            })\r\n            .catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n    }, [exam.id]);\r\n\r\n    const clickedNextHandler = (chosenOptionID, chosenAnswer) => {\r\n        // Add this answer to backend\r\n        const answerData = {\r\n            \"option_id\": chosenOptionID,\r\n            \"studentAnswer\": chosenAnswer,\r\n            \"question_id\": questions[currentQuestionNumber].id,\r\n            \"exam_id\": exam.id\r\n\r\n        }\r\n\r\n        ExamServices.addAnswer(answerData)\r\n            .then(() => {\r\n                // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \r\n                const newQuestionNumber = currentQuestionNumber + 1\r\n                // If we are in the last question, then we should refer to the Done Page\r\n                if (newQuestionNumber === questions.length) {\r\n                    ExamServices.submitExam(exam.id)\r\n                        .then(res => {\r\n                            showSuccessMsg(\"Exam has been submitted successfully\")\r\n                            props.history.push({\r\n                                pathname: '/done',\r\n                                state: { examName: exam.name }\r\n                            })\r\n                        })\r\n                        .catch(err => HandleErrors(err))\r\n                    return\r\n                }\r\n                // advance to the next question\r\n                setCurrentQuestionNumber(newQuestionNumber)\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n\r\n    }\r\n\r\n    const clickedPreviousHandler = () => {\r\n        // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \r\n        setCurrentQuestionNumber(currentQuestionNumber - 1)\r\n    }\r\n\r\n    const getAnswer = (questionIndex, chosenOptionID, chosenAnswer) => {\r\n        setQuestions((prevState) => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[questionIndex - 1] = {\r\n                ...newQuestions[questionIndex - 1],\r\n                studentAnswer: {\r\n                    chosenOptionID,\r\n                    chosenAnswer\r\n                }\r\n            }\r\n            return newQuestions\r\n        })\r\n    }\r\n\r\n    let My_Questions_Markup = questions?.map((question, index) => {\r\n        return (\r\n            <MCQ\r\n                questionIndex={index + 1}\r\n\r\n                currentQuestionNumber={currentQuestionNumber}\r\n                key={props.questionIndex}\r\n\r\n                questionText={question.questionText}\r\n                answers={question.answers}\r\n\r\n                clickedNext={clickedNextHandler}\r\n                clickedPrevious={clickedPreviousHandler}\r\n\r\n                previousButtonDisabled={currentQuestionNumber === 0}\r\n                changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                studentAnswerFunction={getAnswer}\r\n\r\n                savedStudentAnswer={question?.studentAnswer}\r\n            >\r\n            </MCQ>\r\n        )\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={exam.name}>\r\n\r\n                        {My_Questions_Markup?.[currentQuestionNumber]}\r\n\r\n\r\n\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TakeExam);\r\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport Typography from '@mui/material/Typography';\nconst WellDone = (props) => {\n    const examName = props.location.state.examName\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className='col-md-8 col-12'>\n\n                <CardComponent title={examName}>\n                    <div className=\"m-5 text-start text-center\">\n\n\n                        <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                            <CardContent>\n\n                                {/* Well Done Label */}\n                                <Typography className='font-weight-bold ' variant=\"h3\" component=\"div\">\n\n                                    Well Done\n                                </Typography>\n\n\n                                {/* Hope Text */}\n                                <Typography className='m-3 text-success' variant='h4'>\n                                    We hope you done well in this exam and best wishes for next....!\n                                </Typography>\n\n                            </CardContent>\n\n\n                            <button\n                                className='btn m-2 p-auto btn-primary text-white'\n                                onClick={() => {props.history.push('/')}}\n                            >\n                                Homepage\n\n\n                            </button>\n\n\n\n                        </Card>\n                    </div>\n                </CardComponent>\n            </div>\n        </div >\n    )\n}\nexport default WellDone;\n","import React from 'react'\n\nconst Classes = () => {\n    return (\n        <div>\n            <h1>Classes</h1>\n        </div>\n    )\n}\n\nexport default Classes\n","import DomainUrl from \"../Domain\";\n\nexport const INSTRUCTOR_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/instructors/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/instructors/me`,\n        method:'GET'\n    }\n};\n\n","import { INSTRUCTOR_ENDPOINTS } from \"../Endpoints/InstructorEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class InstructorServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: INSTRUCTOR_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.getMyProfile.url, {\n            method: INSTRUCTOR_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './InstructorProfile.css'\nimport { InstructorServices } from '../../../apis/Services/InstructorService'\nimport useImageResolver from '../../../hooks/useImageResolver'\n\nconst InstructorProfile = () => {\n\n    const [instructorData, setInstructorData] = useState(null)\n    useEffect(() => {\n        InstructorServices.getMyProfile()\n            .then(res => {\n                setInstructorData(res.instructor)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return ( instructorData &&\n        <div className=\"Profile_I mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={imageResolver(instructorData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row align-items-center mt-2\">\n                        <h2>{`${instructorData?.user?.firstName} ${instructorData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary\">{instructorData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.phone}</h4>\n                        </div>\n\n                        {/* DEGREE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Degree: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.degree}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.gender}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InstructorProfile\n","import Classes from \"../Views/Instructor/Classes/Classes\"\r\nimport InstructorProfile from \"../Views/Profiles/Instructor-Profile/InstructorProfile\"\r\nimport StudentProfile from \"../Views/Profiles/Student-Profile/StudentProfile\"\r\n\r\nconst UserRoutes =\r\n    [\r\n        { path: '/classes', component: Classes, exact: true },\r\n        { path: \"/profile/student\", component: StudentProfile, exact: true },\r\n        { path: \"/profile/instructor\", component: InstructorProfile, exact: true }\r\n    ]\r\nexport default UserRoutes\r\n","import React, { useEffect, useState } from 'react'\nimport './StudentProfile.css'\nimport { StudentServices } from '../../../apis/Services/StudentService'\nimport useImageResolver from '../../../hooks/useImageResolver'\n\nconst StudentProfile = () => {\n\n    const [studentData, setStudentData] = useState(null)\n    useEffect(() => {\n        StudentServices.getMyProfile()\n            .then(res => {\n                setStudentData(res.student)\n            })\n            .catch(err => console.log(err))\n\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (studentData &&\n        <div className=\"Profile_S mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={imageResolver(studentData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row mt-2\">\n                        <h2>{`${studentData?.user?.firstName} ${studentData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary text-capitalize\">{studentData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.phone}</h4>\n                        </div>\n\n                        {/* CODE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Code: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.studentCode}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.gender}</h4>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentProfile\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport AuthRoutes from './AuthRoutes'\r\nimport InstructorRoutes from './InstructorRoutes'\r\nimport MainRoutes from './MainRoutes'\r\nimport StudentRoutes from './StudentRoutes'\r\nimport UserRoutes from './UserRoutes'\r\n\r\nconst Routes = () => {\r\n    const userType = useSelector(state=>state.auth.userType) || localStorage.getItem('userType')\r\n    console.log(userType)\r\n    return (\r\n        <Switch>\r\n            {MainRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {AuthRoutes.map((props, index) => <Route key={index}{...props} />)}\r\n\r\n            {/* FOR ANY USER */}\r\n            {userType && UserRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR INSTRUCTOR */}\r\n            {userType === 'instructor' && InstructorRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR STUDENT */}\r\n            {userType === 'student' && StudentRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            <Redirect to={'/login'} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions/AppActions';\nimport { Button } from '@mui/material';\n\nconst Alert = () => {\n    const alertObject = useSelector(state => state.app.alertObject)\n    const dispatch = useDispatch()\n    const closeHandler = () => {\n        dispatch(hideAlert())\n    }\n    const confirmHandler = () => {\n        alertObject?.alertFunction()\n    }\n\n    return (\n        <Dialog\n            open={Boolean(alertObject?.header)}\n            onClose={closeHandler}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {alertObject?.header}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {alertObject?.details}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} autoFocus>Cancel</Button>\n                <Button color='error' onClick={confirmHandler}>\n                    Yes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Alert","import { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Header from './Components/Header/Header';\r\nimport { setUserType, signin } from \"./redux/actions/AuthActions\";\r\nimport Toast from './Components/Toast'\r\nimport Routes from \"./routes\";\r\nimport Alert from \"./Components/Dialogs/Alert\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const _bootstrapFunction = useCallback(() => {\r\n    let isAuth = localStorage.getItem('token');\r\n    let userType = localStorage.getItem('userType');\r\n\r\n    if (!isAuth) return\r\n    if (!userType) return\r\n    \r\n    // TODO: Check token with an endpoint\r\n    dispatch(signin(isAuth))\r\n    dispatch(setUserType(userType))\r\n  }, [dispatch])\r\n\r\n  // Bootstrap function\r\n  useEffect(() => {\r\n    _bootstrapFunction();\r\n  }, [_bootstrapFunction])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Routes />\r\n      </div>\r\n\r\n      <Toast />\r\n      <Alert />\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2F4F4F',\n        },\n        secondary: {\n            main: '#50303A',\n        },\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './Theme/MaterialUiTheme';\n\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}