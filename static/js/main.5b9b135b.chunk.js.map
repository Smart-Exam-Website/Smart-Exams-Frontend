{"version":3,"sources":["assets/images/logo.png","Components/Footer/Footer.js","redux/actions/AuthActions.js","Components/Header/Header.js","redux/actionTypes.js","redux/actions/AppActions.js","Components/Toast/SuccessToast.js","Components/Toast/ErrorToast.js","Components/Toast/index.js","apis/Domain.js","apis/axios-instance.js","Views/Registration/ForgotPassword/forgotPassword.jsx","apis/Endpoints/AuthEndpoints.js","apis/Network.js","apis/Services/AuthService.js","Components/CardComponent/CardComponent.js","redux/reducers/AppReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ResetReducer.js","redux/reducers/ExamReducer.js","redux/store.js","hooks/handleErrors.js","Views/Registration/Login/Login.jsx","Views/Registration/Register/RegisterInquiry.jsx","apis/Services/UploadService.js","Views/Registration/Register/RegisterInstructor/RegisterInstructor.jsx","Views/Registration/Register/RegisterStudent/RegisterStudent.jsx","hooks/showSuccessMsg.js","Views/Registration/ResetPassword/ResetPassword.jsx","hooks/useWindowWidth.js","Views/VerifyEmail/VerifyEmail.jsx","routes/AuthRoutes.js","apis/Services/ExamService.js","Views/Instructor/Exams/AddExam/AddExam.js","Components/QuestionComponents/AddationMethodsMenu.js","constants/Colors.js","constants/GlobalStyle.js","Components/QuestionComponents/BorderdQuestionController.js","redux/actions/ExamAction.js","constants/QuestionTypes.js","Components/QuestionComponents/BorderdGroupQuestion.js","apis/Services/QuestionService.js","Views/Instructor/Exams/AddExamQuestions/AddExamQuestions.js","Components/NoContentComponent/NoContentComponent.js","Views/Instructor/Exams/Exams.js","Views/Instructor/Questions/Questions.js","Views/Instructor/Exams/SetExamOptions/SetExamOptions.js","Views/Instructor/Questions/QuestionTypes/MCQ.js","Views/Instructor/Questions/QuestionTypes/Essay.js","hooks/useRandomValue.js","Views/Instructor/Questions/QuestionTypes/Formula.js","Views/Instructor/Questions/AddQuestionScreen.js","Components/AnsweredQuestion/McqAnswer.js","Components/AnsweredQuestion/EssayAnswer.js","Components/AnsweredQuestion/ShortAnswer.js","Components/AnsweredQuestion/FormulaAnswer.js","Components/AnsweredQuestion/GroupAnswer.js","Views/Instructor/Questions/QuestionViewScreen.js","apis/Services/MarkExamService.js","Views/Instructor/Exams/ExamView/ExamOverview.js","hooks/useImageResolver.js","Views/Instructor/Exams/ExamView/StudentsList.js","constants/CheatTypes.js","apis/Services/CheatService.js","constants/CheatActions.js","assets/images/mofty.jpg","assets/images/mofty2.jpg","Views/Instructor/Exams/ExamView/ExamReport.jsx","Views/Instructor/Exams/ExamView/index.jsx","Views/Instructor/Exams/ExamView/StudentSolvedExam.js","routes/InstructorRoutes.js","Views/Instructor/Exams/AddQuestionGroup/AddQuestionGroup.jsx","routes/MainRoutes.js","Views/Home/Home.js","Views/Student/TakePhoto/TakePhoto.jsx","Components/Loader/Loader.js","Views/Student/ExamInstructions/ExamInstructions.jsx","Views/Student/MyResults/index.js","apis/Endpoints/StudentEndpoints.js","apis/Services/StudentService.js","Views/Student/ResultDetails/index.js","Views/Student/ShowExams/ShowExams.jsx","Views/Student/Questions/MCQ/MCQ.jsx","Views/Student/Questions/Essay/Essay.jsx","hooks/useListShuffler.js","hooks/useSwitchBrowserDetector.js","assets/images/cheat-inspector.png","Components/CheaterPopup/CheaterPopup.js","Components/ExamCounter/ExamCounter.js","Views/Student/Questions/Formula/Formula.js","Views/Student/Questions/Group/Group.js","Views/Student/TakeExam/TakeExam.jsx","routes/StudentRoutes.js","Views/Student/WellDone/WellDone.jsx","Views/Instructor/Classes/Classes.js","apis/Endpoints/InstructorEndpoints.js","apis/Services/InstructorService.js","Views/Profiles/Instructor-Profile/InstructorProfile.js","routes/UserRoutes.js","Views/Profiles/Student-Profile/StudentProfile.js","routes/index.js","Components/Dialogs/Alert.js","App.js","reportWebVitals.js","Theme/MaterialUiTheme.js","index.js","Components/ExamCounter/ExamCounter.module.css"],"names":["iconStyle","fontSize","color","margin","cursor","isMobile","window","innerWidth","Footer","style","marginTop","className","height","src","Logo","alt","FacebookOutlined","InstagramOutlined","PhoneOutlined","Date","getFullYear","signin","setUserToken","type","payload","setUserType","Header","isAuth","useSelector","state","auth","userToken","userType","history","useHistory","dispatch","useDispatch","isInstructor","to","id","activeclassname","exact","onClick","localStorage","clear","push","LogoutOutlined","UserOutlined","actionTypes","showError","msg","showSuccess","showAlert","alertObject","hideAlert","Alert","React","forwardRef","props","ref","elevation","variant","SuccessToast","successMsg","app","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","severity","ErrorToast","errorMsg","autoHideDuration","index","DomainUrl","_axios","axios","create","baseURL","headers","interceptors","request","use","config","a","token","getItem","undefined","err","Promise","reject","response","data","connect","email_address","rst","email","saveEmail","useState","setEmail","onChange","e","target","value","placeholder","width","event","preventDefault","setItem","console","log","post","then","catch","error","AUTHENDPOINTS","login","url","method","verifyEmail","changePassword","logout","ResetPassword","Network","this","jwt","init","addAuth","fetch","mode","getHeaders","promise","ok","status","resolve","json","handleErrorsBasedOnStatus","originalHeaders","Accept","Authorization","AuthServices","values","body","JSON","stringify","CardComponent","children","title","initStates","initialState","ResetReducer","action","examQuestions","examGroups","ExamReducer","addedGroupQuestions","length","newGroup","newGroupQuestions","forEach","group","groupId","newExamQuestions","filter","item","newExamGroupQuestions","rootReducer","combineReducers","exam","question","QuestionReducer","middleware","applyMiddleware","thunk","store","createStore","HandleErrors","showErrorToast","message","String","includes","withRouter","password","setPassword","TextField","fullWidth","label","res","user","pathname","Registerinquiry","RegisterAsStudentHandler","RegisterAsInstructorHandler","MaxWidth","Component","UploadServices","file","formDate","FormData","append","Input","styled","display","RegisterInstructor","firstName","lastName","gender","phone","department","degree","school","confirmPassword","firstNameFormHandler","setState","lastNameFormHandler","genderHandler","emailFormHandler","phoneFormHandler","departmentFormHandler","degreeFormHandler","schoolFormHandler","passwordFormHandler","confirmPasswordFormHandler","isValidEmail","Boolean","toLowerCase","match","isValidName","name","isValidPhone","number","isPasswordMatch","validateData","selectedFile","registerHandler","validationMessage","uploadImage","image","userInfo","handleUploadClick","files","reader","FileReader","readAsDataURL","onloadend","photoName","personalImageUrl","result","bind","checked","htmlFor","Typography","accept","IconButton","component","loading","RegisterStudent","studentcode","studentCodeFormHandler","showSuccessMsg","setConfirmPassword","params","put","removeItem","getWindowWidth","AuthRoutes","path","Login","forgotPassword","RegisterInquiry","codeValue","location","code","screenWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","onComplete","autoFocus","fieldHeight","fieldWidth","fields","ExamServices","examMainInfo","examId","options","questions","get","isMarked","answerData","delete","DURATION_REGEX","AddExam","createExamSchema","yup","shape","required","numberOfTrials","min","description","totalMark","duration","matches","test","Number","split","examSubject","startAt","endAt","when","schema","moment","isBefore","useLocation","isEditMode","examOldData","initialValues","setMinutes","format","add","validationSchema","onSubmit","actions","editExamMainInfo","createNewExam","handleSubmit","handleChange","onBlur","handleBlur","helperText","touched","errors","MobileDateTimePicker","minutesStep","inputFormat","onClose","setFieldTouched","date","selectedDate","setFieldValue","renderInput","AddationMethodsMenu","methods","anchorEl","setAnchorEl","handleClose","Menu","PaperProps","sx","overflow","mt","ml","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","map","MenuItem","function","displayName","Divider","Colors","ClickableView","div","Wrapper","Text","span","BorderdQuestionController","questionTitle","deleteFunction","hasNoDelete","questionType","flexDirection","alignItems","backgroundColor","left","padding","textTransform","saveAQuestion","questionData","addNewGroup","QuestionTypes","ESSAY","MCQ","FORMULA","GROUP","BorderdGroupQuestion","isCreationMode","getCreationData","cancelCreationFunction","questionsMarkup","questionnType","headerTextStyle","cancelHandler","CreationFormMarkup","groupName","QuestionServices","AddExamQuestions","groupQuestionAnchorEl","setGroupQuestionAnchorEl","selctedGroupId","setselctedGroupId","groupMethods","fromExamCreation","isFromGroup","canSelectQuestionsForExam","setShowGroupCreationForm","document","getElementById","scrollIntoView","behavior","block","examOldQuestions","setExamOldQuestions","setExamId","matchPath","getExamQuestions","setQuestions","savedQuestions","oldQuestionsOtherThanGroupQuestions","getQuestions","removeQuestionFromListHandler","removeSavedQuestionFromExam","prevState","setGroupQuestions","groupQuestions","savedQroupQuestions","oldGroupQuestionsOnly","showGroupCreationForm","currentTarget","PlusCircleOutlined","questionText","selectedgroupId","showGroupQuestionMenu","subQuestion","scrollTo","createGroupQuestion","submittedQuestions","question_id","qroupQuestionsId","editQuestionsOfExam","addQuestionsToExam","NoContentComponent","text","StyledTableCell","TableCell","theme","tableCellClasses","head","palette","common","white","fontWeight","StyledTableRow","TableRow","hover","border","Exams","exams","setExams","getExamsHandler","getMyExams","selectedExam","setSelectedExam","isExamNotCompleted","row","isSelectedExamPublished","selectedExamObject","find","isPublished","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","scope","Chip","size","icon","stopPropagation","MenuListProps","isSelctedExamIsNotCompleted","isWantToBePublish","examName","makeExamPublished","makeExamUnPublished","finally","makePublishHandler","header","details","alertFunction","deleteExam","newExams","Questions","isSelectionMode","selectedQuestion","setSelectedQuestion","isAllSelected","every","isSelected","selectedQuestions","selectedGroupQuestionId","filterValue","setFilterValue","filterMenuEl","setFilterMenuEl","searchValue","setsearchValue","isAllowedToSearch","setIsAllowedToSearch","getMyQuestions","myQuestions","isMyQuestions","tag","search","clearSearch","FilterMarkup","enableReinitialize","select","Object","keys","FormControlLabel","control","Switch","getQuestionDetails","returnedQuestion","groupReturnedQuestions","editGroupQuestion","goBack","normalQuestions","Checkbox","questionId","newQuestions","onCheckHandler","instructor","instructorName","created_at","deleteQuestion","SetExamOptions","oldExamConfig","faceRecognition","faceDetection","questionsRandomOrder","plagiarismCheck","disableSwitchBrowser","gradingMethod","submittedValues","editExamOptions","setExamOptions","Label","DangerLabel","SuccessLabel","initValues","getQuestionCreationRequest","MCQSCHEMA","correctAnswer","choice1","choice2","choice3","mcqChoices","isCorrect","mcqCorrectAnswer","editRequest","editQuestion","answers","creationRequest","createMcqQuestion","multiline","rows","Essay","EssaySchema","createEssayQuestion","getRandomValue","first","second","max","Math","floor","random","useRandomValue","VAR_REGEX","BRACKETS_REGEX","Formula","formula","numberOfQuestions","questionFormValue","setQuestionFormValue","vars","setVars","uniqueTokensList","setUniqueTokensList","setQuestionText","tokenList","matchAll","editedToken","replace","uniqueTokens","Array","from","Set","generateVars","oldVarList","setOldVarList","editedList","varObject","element","setGeneratedQuestions","initVarList","variables","generatedQuestions","formula_questions","numberOfGeneratedQuestion","finalQuestionValue","variablesAttr","generatedAttempt","var","finalValue","mexp","eval","variable","newVars","onChangeMin","onChangeMax","textDecorationLine","disabled","generatedFormulas","questionTextAfterGeneration","replaceAll","createFormulaQuestion","formulas","editFormulaQuestion","AddQuestionScreen","oldQuestion","oldQuestionDetails","setOldQuestionDetails","questionTypes","setQuestionTypes","typesObject","typeList","key","getQuestionTypes","setQuestionType","questionTypeSelectionMenuMarkup","createQuestionHandler","addedQuestion","isFromExamCreation","marginInlineEnd","McqAnswer","choices","studentAnswer","markAsRight","markAsWrong","questionMark","studentMark","formatedAnswer","answer","displayText","option","isCorrectStudentAnswer","Card","CardHeader","CardContent","FormControl","RadioGroup","defaultValue","choice","Radio","bottom","EssayAnswer","textDecoration","ShortAnswer","FormulaAnswer","questionHeader","teacherMode","formulaText","GroupAnswer","specificQuestionMark","option_id","QuestionViewScreen","useParams","setQuestion","MarkExamServices","studentId","student_id","AntiCheatingTimeline","examConfig","isRandom","isDisableSwitch","isplagiarism","isFaceDetection","isFaceVerify","Timeline","TimelineItem","TimelineOppositeContent","m","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","ExamOverview","examConfigs","useImageResolver","imageName","StudentsList","students","getStudentExams","imageResolver","Button","markAllAutomatic","List","ListItem","ListItemButton","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","primary","secondary","mark","attempt","CheatTypes","CheatServices","ActionData","CheatActions","ExamReport","cheaters","setCheaters","decrementDegree","setDecrementDegree","getCheaters","actionHandler","cheaterDetails","performStudentDecrement","uniqueCheaters","Map","unique_cheater","typeCounter","c","cheater_details","profileImage","studentName","CheatersMarkup","ExamView","selectedTab","setSelectedTab","URLSearchParams","studentAnswers","setStudentAnswers","getAllStudentsAnswers","solvedExams","setExamConfigs","getExamConfig","configuration","Box","Tabs","newValue","textColor","indicatorColor","Tab","StudentCard","isVerified","numberOfFaces","markAutoFun","objectFit","borderRadius","InstructorRoutes","setGroupName","groupNameCreated","setGroupNameCreated","AddQuestionHandler","submitGroupHandler","createGroupHandler","studentExamResult","setStudentExamResult","markAsRightHandler","manualMark","getStudentAnswers","markAsWrongHandler","getSpecificStudentAnswers","markSpecificStudentAutomatic","solution","pivot","MainRoutes","minHeight","TakePhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","captured","clicked","audio","screenshotFormat","Loader","class","isLoading","setIsLoading","isPhotoTaken","setIsPhotoTaken","noOfFaces","setNoOfFaces","photoVerified","setPhotoVerified","startDate","setstartDate","getExamInfo","photoTakenHandler","img","faceDetectionData","faceVerificationData","applyFaceDetection","verified","applyFaceVerification","mustVerifyFace","hasStarted","CardActions","trigger","modal","lockScroll","close","startExamData","startExam","MyResults","getAllPublishedExams","Grid","justifyContent","direction","isSubmitted","STUDENT_ENDPOINTS","register","getMyProfile","StudentServices","ResultDetails","getSpecificExamResults","totalQuestionMark","getRemainingEndTime","examEndDate","diff","remainingMins","hours","mins","goToInstructionsHandler","fontStyle","isInGroupQuestion","sentAnswerChanges","chosenOptionID","setChosenOptionID","chosenAnswer","setChosenAnswer","savedStudentAnswer","onChangeHandler","parseInt","isCheckedCondition","ansIndex","questionIndex","clickedPrevious","previousButtonDisabled","clickedNext","studentAnswerFunction","changeNextNameIntoFinish","essayAnswer","setEssayAnswer","nextAnswer","shuffler","list","sort","useListShuffler","useSwitchBrowserDetector","isBrowserHidden","setIsBrowserHidden","CheaterPopup","isVisible","setVisibility","cheatReasons","cheaterImage","Dialog","DialogTitle","DialogContent","InspectorCheaterImage","DialogContentText","join","DialogActions","_withLeadingZero","ExamCounter","numberOfSecs","onFinish","remainingSeconds","setremainingSeconds","numberOfSeconds","timer","setInterval","clearInterval","styles","primaryText","formulaAnswer","setFormulaAnswer","quesitonId","Group","groupAnswers","setGroupAnswers","groupAnswersChangesHandler","currentQuestionNumber","setCurrentQuestionNumber","setExamInfo","examOptions","endExamTime","setEndExamTime","responseQuestions","getStudentExamAnswers","endTime","formatedAnswers","formatedQuestions","newQuestionsForThisGroupQuestion","formatedQuestion","thisQuestionAnswer","randomQuestions","examDurationInSecs","examDurationInMins","ceil","totalCountedMins","setTotalCountedMins","lastRandomMin","setLastRandomMin","RandomMins","callback","activateJobWithRandomTriggerTimer","reportFaceDetectionCheater","reportFaceRecognationCheater","clearTimeout","setCheatReasons","setCheaterImage","isCheaterPopVisible","setIsCheaterPopVisible","isBrowserSwitched","sentSwitchBrowserCheatAttempt","capturePhotoFromWebcam","sentFaceDetectionCheatAttempt","sentFaceRecognationCheatAttempt","_successSentAnswerResonse","newQuestionNumber","submitExam","clickedNextHandler","questionPromises","addAnswer","all","clickedPreviousHandler","getAnswer","My_Questions_Markup","videoRecorderIsShown","StudentRoutes","ShowExams","ExamInstructions","TakeExam","Classes","rr","INSTRUCTOR_ENDPOINTS","InstructorServices","InstructorProfile","instructorData","setInstructorData","UserRoutes","studentData","setStudentData","student","studentCode","Routes","closeHandler","App","_bootstrapFunction","Toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","main","ReactDOM","render","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter","module","exports"],"mappings":"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","file":"static/js/main.5b9b135b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.18795106.png\";","import React from 'react'\nimport './Footer.css'\nimport Logo from '../../assets/images/logo.png'\nimport { InstagramOutlined, FacebookOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst iconStyle = {\n    fontSize: 36,\n    color: '#313131',\n    margin: '0px 12px',\n    cursor: 'pointer'\n}\n\nconst isMobile = window.innerWidth < 992;\nconst Footer = () => {\n    return (\n        <footer style={{marginTop:200}} className=\"Footer container\">\n            <div className=\"row justify-content-lg-center pl-3 p-lg-0\">\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                    <h5 className=\"text-grey my-3\">Test your student smartly.</h5>\n\n                    {!isMobile &&\n                        <div className=\"d-flex flex-row justify-content-center\">\n                            <FacebookOutlined style={iconStyle} />\n                            <InstagramOutlined style={iconStyle} />\n                            <PhoneOutlined style={iconStyle} />\n                        </div>\n                    }\n\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Menu</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">Home</li>\n                        <li className=\"mx-2\">Tours</li>\n                        <li className=\"mx-2\">Category</li>\n                        <li className=\"mx-2\">About Us</li>\n                    </ul>\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Support</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">FAQ</li>\n                        <li className=\"mx-2\">Terms & Conditions</li>\n                        <li className=\"mx-2\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {isMobile &&\n                    <div className=\"d-flex flex-row justify-content-center\">\n                        <FacebookOutlined style={iconStyle} />\n                        <InstagramOutlined style={iconStyle} />\n                        <PhoneOutlined style={iconStyle} />\n                    </div>\n                }\n                <small className=\"text-grey\">{new Date().getFullYear()} (c) — SmartExam. All Rights Reserved</small>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const SIGN_IN = 'SIGN_IN'\r\nconst SIGN_OUT = 'SIGN_OUT'\r\nconst SET_USER_TYPE = \"SET_USER_TYPE\"\r\nconst signin = (setUserToken) => {\r\n   return {\r\n      type: SIGN_IN,\r\n      payload: setUserToken\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return {\r\n      type: SIGN_OUT,\r\n      payload: null\r\n   }\r\n}\r\n\r\nconst setUserType = (type)=>{\r\n   return {\r\n      type: SET_USER_TYPE,\r\n      payload: type\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport { signin, logout, setUserType }","import React from 'react'\r\nimport './Header.css'\r\nimport Logo from '../../assets/images/logo.png'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/AuthActions';\r\n\r\n\r\nconst Header = () => {\r\n    const isAuth = useSelector(state => state.auth.userToken)\r\n    const userType = useSelector(state => state.auth.userType)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch(null)\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n\r\n    const isInstructor = userType === 'instructor'\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav mx-auto mainNav\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Features</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Pricing</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/classes\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/exams\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Exams</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to={isInstructor ? \"/questions\" : \"/my-results\"}>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>{isInstructor ? 'Questions' : 'My Results'}</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav d-flex justify-content-lg-center justify-content-between flex-row\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <li className=\"nav-item mx-2 d-flex align-items-center\">\r\n                                    <Link className=\"loginText\" to={'/login'}>Login</Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link className=\"btn btn-primary\" to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {/* Logout */}\r\n                                <li onClick={logoutHandler} className=\"nav-item mx-2\">\r\n                                    <LogoutOutlined className=\"primaryColoredIcon\" />\r\n                                </li>\r\n\r\n                                {/* Profile */}\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link to={`/profile/${userType}`}>\r\n                                        <UserOutlined className=\"primaryColoredIcon\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const actionTypes = {\n\n    ADD_EMAIL: \"ADD_EMAIL\",\n\n    SAVE_ANSWER: \"SAVE_ANSWER\",\n\n    SHOW_ERROR: \"SHOW_ERROR\",\n\n    SHOW_SUCCESS: \"SHOW_SUCCESS\",\n\n    SHOW_ALERT: \"SHOW_ALERT\",\n\n    HIDE_ALERT: \"HIDE_ALERT\",\n\n    ADD_QUESTION: \"ADD_QUESTION\",\n\n    ADD_GROUP: \"ADD_GROUP\",\n\n    ADD_GROUP_QUESTION: \"ADD_GROUP_QUESTION\",\n\n    REMOVE_QUESTION: \"REMOVE_QUESTION\",\n\n    REMOVE_ALL: \"REMOVE_ALL\",\n\n\n}\n\n","import { actionTypes } from \"../actionTypes\"\nconst showError = (msg) => {\n    return {\n        type: actionTypes.SHOW_ERROR,\n        payload: msg\n    }\n}\n\nconst showSuccess = (msg) => {\n    return {\n        type: actionTypes.SHOW_SUCCESS,\n        payload: msg\n    }\n}\n/**\n * \n * @param {{header:string, details:string, alertFunction:Function}} alertObject \n * @returns \n */\nconst showAlert = (alertObject) => {\n    return {\n        type: actionTypes.SHOW_ALERT,\n        payload: alertObject\n    }\n}\n\nconst hideAlert = () => {\n    return {\n        type: actionTypes.HIDE_ALERT,\n    }\n}\n\n\nexport { showError, showSuccess, showAlert, hideAlert }","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showSuccess } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SuccessToast = () => {\n    const successMsg = useSelector(state => state.app.successMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        successMsg && setTimeout(() => {\n            dispatch(showSuccess(null))\n        }, 3000);\n\n    }, [successMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={successMsg}\n            key={'success1'}\n        >\n            <Alert severity={\"success\"}>{successMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default SuccessToast\n","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showError } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ErrorToast = () => {\n    const errorMsg = useSelector(state => state.app.errorMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        errorMsg && setTimeout(() => {\n            dispatch(showError(null))\n        }, 3000);\n\n    }, [errorMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={errorMsg}\n            key={'error1'}\n            autoHideDuration={3000}\n        >\n            <Alert severity={\"error\"}>{errorMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default ErrorToast\n","import React from 'react'\nimport SuccessToast from './SuccessToast'\nimport ErrorToast from './ErrorToast'\n\n\nconst index = () => {\n    return (\n        <div>\n            <SuccessToast />\n            <ErrorToast />\n        </div>\n    )\n}\n\nexport default index\n","const DomainUrl = 'https://api.smart-exam.ml/api';\r\nexport default DomainUrl;","import axios from 'axios';\nimport DomainUrl from './Domain';\n\nlet headers = {}\nconst _axios = axios.create({\n    baseURL: DomainUrl,\n    headers\n});\n\n_axios.interceptors.request.use(\n    async (config) => {\n        const token = localStorage.getItem('token');\n        config.headers = {\n            ...config.headers,\n            'Authorization': token ? `Bearer ${token}` : undefined,\n        }\n        return config\n    },\n    (err) => {\n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => response.data,\n    err => {\n        return Promise.reject(err?.response?.data);\n    }\n)\n\nexport default _axios;\n","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport { actionTypes } from '../../../redux/actionTypes';\nconst Forgotpassword = (props) => {\n    const [email, setEmail] = useState(null)\n\n    const sendLinkHandler = (event) => {\n        event.preventDefault()\n        const data = {\n            email: email\n        }\n\n        props.saveEmail(email)\n        localStorage.setItem(\"email\",email)\n        console.log(data)\n        _axios.post(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            \n\n\n        }).catch((error) => {\n            console.log(error)\n\n        })\n    }\n    return (\n\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Forgot Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n                    <div>\n                        <div className='text-center'>\n                            <label >We'll send you a link via email to reset password</label>\n\n                        </div>\n                        <div className='text-center'>\n                            <label >Please type your email address</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email address\" />\n                    </div>\n                    <br />\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={sendLinkHandler} style={{ width: 200 }}>Send Link</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveEmail: (email) => { return dispatch({ type: actionTypes.ADD_EMAIL, email: email  }) }\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgotpassword);\n\n","import DomainUrl from \"../Domain\";\r\n\r\nexport const AUTHENDPOINTS = {\r\n   login: {\r\n      url: `${DomainUrl}/auth/login`,\r\n      method: 'POST',\r\n   },\r\n   verifyEmail:{\r\n      url:`${DomainUrl}/auth/verifyEmail`,\r\n      method : 'POST'\r\n   },\r\n   changePassword:{\r\n      url:`${DomainUrl}/auth/changePassword`,\r\n      method : 'PUT'\r\n   },\r\n   logout:{\r\n      url:`${DomainUrl}/auth/logout`,\r\n      method : 'POST'\r\n   },\r\n   ResetPassword:{  \r\n      url:`${DomainUrl}/auth/forgotPassword`,\r\n      method:'PUT'\r\n   }\r\n};\r\n\r\n","export class Network {\r\n  constructor() {\r\n    this.jwt = \"\";\r\n  }\r\n\r\n  static async fetch(url, init, addAuth) {\r\n    this.jwt = localStorage.getItem(\"token\");\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      ...init,\r\n      headers: Network.getHeaders(init.headers, addAuth),\r\n    });\r\n    let promise;\r\n    if (!response.ok) {\r\n      promise = Network.handleErrorsBasedOnStatus(response);\r\n    } else if (response.status === 204) {\r\n      promise = Promise.resolve({});\r\n    } else {\r\n      promise = response.json();\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  static getHeaders(originalHeaders, addAuth) {\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (addAuth) {\r\n      headers.Authorization = `Bearer ${this.jwt}`;\r\n    }\r\n\r\n    headers = {\r\n      ...headers,\r\n      ...originalHeaders,\r\n    };\r\n\r\n    return headers;\r\n  }\r\n  static handleErrorsBasedOnStatus(response) {\r\n    let promise;\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 422:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 429:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 401:\r\n      case 403:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n    }\r\n    return promise.catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n","import { AUTHENDPOINTS } from \"../Endpoints/AuthEndpoints\";\r\nimport { Network } from \"../Network\";\r\n\r\nexport class AuthServices {\r\n  // sign in\r\n  static login(values) {\r\n    return Network.fetch(AUTHENDPOINTS.login.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.login.method,\r\n    });\r\n  }\r\n  \r\n  // verifying mobile phone by sending  code , phone\r\n  static emailVerifySms(values) {\r\n    return Network.fetch(AUTHENDPOINTS.verifyEmail.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.verifyEmail.method,\r\n    });\r\n  }\r\n\r\n  // change password\r\n  static changePassword(values) {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.changePassword.url,\r\n      {\r\n        body: JSON.stringify(values),\r\n        method: AUTHENDPOINTS.changePassword.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n  \r\n  // logout\r\n  static logout() {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.logout.url,\r\n      {\r\n        method: AUTHENDPOINTS.logout.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  // reset forgotten  Password\r\n  static resetForgottenPassword(values) {\r\n    return Network.fetch(AUTHENDPOINTS.ResetPassword.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.ResetPassword.method,\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './CardComponent.css'\r\nconst CardComponent = ({children, title}) => {\r\n    return (\r\n        <div className=\"greenCard\">\r\n            <h2 className=\"text-light text-center mx-auto py-3\">{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import { actionTypes } from \"../actionTypes\";\n\nconst initStates = {\n    errorMsg: null,\n    successMsg: null,\n    alertObject: null\n}\n\nconst AppReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case actionTypes.SHOW_ERROR:\n            console.log(action.payload)\n            return {\n                ...state,\n                errorMsg: action.payload,\n            };\n        case actionTypes.SHOW_SUCCESS:\n            return {\n                ...state,\n                successMsg: action.payload\n            };\n        case actionTypes.SHOW_ALERT:\n            return {\n                ...state,\n                alertObject: action.payload\n            };\n        case actionTypes.HIDE_ALERT:\n            return {\n                ...state,\n                alertObject: null\n            };\n        default:\n            return state\n    }\n}\n\nexport { AppReducer };","\r\nconst initStates = {\r\n   userToken: null,\r\n   userType: null\r\n}\r\n\r\nconst AuthReducer = (state = initStates, action) => {\r\n   switch (action.type) {\r\n      case 'SIGN_IN':\r\n         return {\r\n            ...state,\r\n            userToken: action.payload,\r\n         };\r\n      case 'SIGN_OUT':\r\n         return {\r\n            ...state,\r\n            userToken: null,\r\n            userType: null\r\n         };\r\n\r\n      case 'SET_USER_TYPE':\r\n         return {\r\n            ...state,\r\n            userType: action.payload,\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport { AuthReducer };","import {actionTypes} from \"../actionTypes\"\n\nconst initialState = {\n    email: 'LOL'\n\n}\nconst ResetReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_EMAIL:\n            // console.log(\"this from reducer\")\n            // console.log(action.email)\n            return {\n                ...state,\n                email: action.email\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default ResetReducer;","import { actionTypes } from \"../actionTypes\";\r\n\r\nconst initStates = {\r\n    examQuestions: [],\r\n    examGroups: []\r\n}\r\n\r\nconst ExamReducer = (state = initStates, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                examQuestions: [...state.examQuestions, ...action.payload],\r\n            };\r\n\r\n        case actionTypes.ADD_GROUP:\r\n            {\r\n                let addedGroupQuestions = action.payload?.length ? [...action.payload] : [action.payload]\r\n                console.log(\"ADDED ROUP\",addedGroupQuestions)\r\n                let newGroup = [...state.examGroups, ...addedGroupQuestions]\r\n                console.log(\"newGroup\", newGroup)\r\n                return {\r\n                    ...state,\r\n                    examGroups: newGroup,\r\n                };\r\n            }\r\n\r\n        case actionTypes.ADD_GROUP_QUESTION:\r\n            {\r\n                let newGroupQuestions = [...state.examGroups]\r\n                newGroupQuestions.forEach(group => {\r\n                    if (group.id === action.groupId) {\r\n                        group['questions'] = [...group['questions'], ...action.payload]\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    ...state,\r\n                    examGroups: newGroupQuestions,\r\n                };\r\n            }\r\n\r\n        case actionTypes.REMOVE_QUESTION:\r\n            {\r\n                let newExamQuestions = state?.examQuestions\r\n                newExamQuestions = newExamQuestions.filter(item => {\r\n                    return item.id !== action.payload\r\n                })\r\n\r\n                let newExamGroupQuestions = state?.examGroups\r\n                newExamGroupQuestions = newExamGroupQuestions.filter(item => {\r\n                    return item.id !== action.payload\r\n                })\r\n                return {\r\n                    ...state,\r\n                    examQuestions: [...newExamQuestions],\r\n                    examGroups: [...newExamGroupQuestions]\r\n                };\r\n            }\r\n\r\n        case actionTypes.REMOVE_ALL:\r\n            return {\r\n                ...state,\r\n                examQuestions: [],\r\n                examGroups: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconsole.log(\"initStates.examGroups\", initStates.examGroups)\r\nexport default ExamReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from './reducers/AppReducer';\r\nimport { AuthReducer } from './reducers/AuthReducer';\r\nimport ResetReducer from './reducers/ResetReducer';\r\nimport ExamReducer from './reducers/ExamReducer';\r\nimport QuestionReducer from './reducers/QuestionReducer';\r\n\r\nconst rootReducer = combineReducers(\r\n   {\r\n      auth: AuthReducer,\r\n      app: AppReducer,\r\n      rst: ResetReducer,\r\n      exam: ExamReducer,\r\n      question: QuestionReducer\r\n   }\r\n);\r\nconst middleware = applyMiddleware(thunk)\r\nconst configureStore = () => {\r\n   return createStore(rootReducer, middleware);\r\n}\r\n\r\nexport const store = configureStore();","import { showError } from '../redux/actions/AppActions'\r\nimport { logout } from '../redux/actions/AuthActions'\r\nimport { store } from '../redux/store'\r\n\r\nexport default function HandleErrors(err) {\r\n    //Showing Toast Function\r\n    const showErrorToast = (msg) => {\r\n        store.dispatch(\r\n            showError(msg)\r\n        )\r\n    }\r\n\r\n\r\n    if (err?.message) {\r\n        showErrorToast(err?.message)\r\n    } else if (typeof err === 'string' || err instanceof String) {\r\n        showErrorToast(err)\r\n    } else {\r\n        showErrorToast(\"UNKNOWN_ERROR\")\r\n    }\r\n\r\n    if (err?.message?.includes(\"Unauthenticated\")) {\r\n        store.dispatch(logout())\r\n        localStorage.clear()\r\n    }\r\n}","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AuthServices } from '../../../apis/Services/AuthService';\nimport { setUserType, signin } from '../../../redux/actions/AuthActions';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const forgotPasswordHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: '/forgot-password',\n            state: { email: email }\n        })\n\n        // props.history.push('/forgot-password')\n        // props.history.push('/reset-password')\n\n    }\n\n    const SignUpHandler = () => {\n        props.history.push('/register')\n    }\n\n    const dispatch = useDispatch(null)\n    const LoginHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        AuthServices.login({ email, password })\n            .then(res => {\n                console.log(\"result =>\", res)\n                localStorage.setItem('token', res?.token)\n                localStorage.setItem('userType', res?.user?.type)\n                dispatch(signin(res?.token))\n                dispatch(setUserType(res?.user?.type))\n                props.history.push(`/profile/${res?.user?.type}`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Login'}>\n                    <form className=\"m-3 text-start\">\n                        <div className='mt-4'>\n                            <TextField fullWidth id=\"outlined-basic\" onChange={(e) => setEmail(e.target.value)} label=\"Email Address\" variant=\"outlined\" />\n                        </div>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                id=\"outlined-adornment-password\"\n                                type={'password'}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"mx-auto mt-4 text-center\">\n                            <button className=\"btn btn-primary mx-auto\" onClick={LoginHandler}>Login</button>\n                            <div>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={forgotPasswordHandler}>Forgot password?</button>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={SignUpHandler}>Signup</button>\n                            </div>\n                        </div>\n                    </form>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\nclass Registerinquiry extends Component {\n\n    RegisterAsStudentHandler = () => {\n        // this.props.history.push('/signup')\n        this.props.history.push('/register-student')\n\n    }\n    RegisterAsInstructorHandler = () => {\n        \n        this.props.history.push('/register-instructor')\n\n     }\n\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center mt-5\">\n                <div className=\"card border-success mb-3\" style={{ MaxWidth: 18 }}>\n                    <div className=\"card-header\">Sign up</div>\n                    <div className=\"card-body text-success\">\n                        <h5 className=\"card-title text-center\">Register As...?</h5>\n                        <div className=\"form-inline\">\n                            <button type=\"button\" onClick={this.RegisterAsStudentHandler} className=\"btn btn-primary m-3\">Student</button>\n                            <button type=\"button\" onClick={this.RegisterAsInstructorHandler} className=\"btn btn-danger m-3\">Instructor</button>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Registerinquiry);\n","import _axios from \"../axios-instance\";\n\nexport class UploadServices {\n    static uploadImage(file) {\n        const formDate = new FormData()\n        formDate.append('image', file)\n        return _axios.post('/image-upload', formDate, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    }\n}\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterInstructor extends Component {\r\n\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        degree: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    degreeFormHandler = (event) => {\r\n        this.setState({ degree: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.degree)) {\r\n            return \"Invalid Degree\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n        var data;\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"type\": \"instructor\",\r\n                    \"degree\": this.state.degree,\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/instructors/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email, userInfo: data }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.degreeFormHandler} label=\"Degree\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className=\"mx-auto mt-4\" >\r\n                                <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler} style={{ width: 200 }}>Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterInstructor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterStudent extends Component {\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        studentcode: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    studentCodeFormHandler = (event) => {\r\n        this.setState({ studentcode: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.studentcode)) {\r\n            return \"Invalid Student Code\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                var data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"studentCode\": this.state.studentcode,\r\n                    \"type\": \"student\",\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/students/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.studentCodeFormHandler} label=\"Student Code\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"mx-auto mt-4\">\r\n                                <button type='button' className=\"btn btn-primary mx-auto\" onClick={this.registerHandler}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterStudent;\r\n","import { showSuccess } from '../redux/actions/AppActions'\nimport { store } from \"../redux/store\"\n\nexport default function showSuccessMsg(msg) {\n\n    store.dispatch(\n        showSuccess(msg)\n    )\n\n    return null\n}","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../hooks/handleErrors';\n\nconst Resetpassword = (props) => {\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n\n\n    const ResetHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            HandleErrors(\"Password Mismatch\")\n            return\n        }\n\n        var data = {\n            password: password,\n            email: localStorage.getItem(\"email\"),\n            token: props.match.params.token\n\n        }\n        _axios.put(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            localStorage.removeItem(\"email\")\n            showSuccessMsg(\"Password Reset Successfully\")\n            props.history.push('/login')\n        }).catch((error) => {\n            console.log(error)\n\n        })\n\n\n    }\n    return (\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Reset Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n\n                    <div className=\"form-group\">\n                        <label >New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setPassword(e.target.value)} placeholder=\"New Password\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Confirm New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm New Password\" />\n                    </div>\n\n                    <hr />\n\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={ResetHandler} style={{ width: 200 }}>Reset Password</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return 0\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Resetpassword);\n\n","import { useState, useEffect } from 'react';\n\nfunction getWindowWidth() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nexport default function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}","import React from 'react'\nimport CardComponent from '../../Components/CardComponent/CardComponent'\nimport ReactCodeInput from 'react-verification-code-input';\nimport './VerifyEmail.css'\nimport useWindowWidth from '../../hooks/useWindowWidth';\nimport HandleErrors from '../../hooks/handleErrors';\nimport _axios from '../../apis/axios-instance';\nimport showSuccessMsg from '../../hooks/showSuccessMsg';\n\nconst VerifyEmail = (props) => {\n    const onsubmit = (e) => {\n        verifyEmail(e);\n    }\n    // const resend = () => {\n    //     const data = props.location.state.userInfo\n    //     const type = data['type'];\n    //     if (type === 'instructor') {\n    //         _axios.post('/instructors/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n    //     } else if (type === 'student') {\n    //         _axios.post('/students/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n\n    //     }\n    // }\n\n    const verifyEmail = (codeValue) => {\n        //sent to server\n        // console.log(codeValue)\n        // console.log(props.location.state.email)\n        var data = {\n            email: props.location.state.email,\n            code: codeValue\n        }\n        _axios.post(\"/verifyEmail\", data).then((response) => {\n            // console.log(response)\n            // console.log(\"Success ya wlaaa\")\n            showSuccessMsg(\"Verified Successfully!\")\n            props.history.push({\n                pathname: '/login',\n            })\n\n        }).catch((err) => HandleErrors(err))\n\n    }\n\n    const screenWidth = useWindowWidth();\n    const isMobile = screenWidth < 768\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Verify Email'}>\n                    <div className=\"d-flex flex-column justify-content-center align-items-center py-2\">\n                        <small className='text-green'>We have sent for you a verify code.</small>\n                        <small className='text-green'>Please enter the code here</small>\n                        <ReactCodeInput\n                            onComplete={onsubmit}\n                            className=\"my-4 text-primary\"\n                            type='text'\n                            autoFocus={true}\n                            fieldHeight={85}\n                            fieldWidth={isMobile ? screenWidth / 7 : 66}\n                            fields={6} />\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyEmail\n","import forgotPassword from '../Views/Registration/ForgotPassword/forgotPassword'\r\nimport Login from '../Views/Registration/Login/Login'\r\nimport RegisterInquiry from '../Views/Registration/Register/RegisterInquiry'\r\nimport RegisterInstructor from '../Views/Registration/Register/RegisterInstructor/RegisterInstructor'\r\nimport RegisterStudent from '../Views/Registration/Register/RegisterStudent/RegisterStudent'\r\nimport ResetPassword from '../Views/Registration/ResetPassword/ResetPassword'\r\nimport VerifyEmail from '../Views/VerifyEmail/VerifyEmail'\r\n\r\nconst AuthRoutes =\r\n    [\r\n        { path: \"/login\", component: Login, exact: true },\r\n        { path: \"/forgot-password\", component: forgotPassword, exact: true },\r\n        { path: \"/reset-password/:token\", component: ResetPassword, exact: true },\r\n        { path: \"/register\", component: RegisterInquiry, exact: true },\r\n        { path: \"/verifyEmail\", component: VerifyEmail, exact: true },\r\n        { path: \"/register-student\", component: RegisterStudent, exact: true },\r\n        { path: \"/register-instructor\", component: RegisterInstructor, exact: true },\r\n       \r\n    ]\r\n\r\nexport default AuthRoutes\r\n","import _axios from \"../axios-instance\";\r\n\r\nexport class ExamServices {\r\n    /**\r\n     * Create new exam with main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static createNewExam(examMainInfo) {\r\n        return _axios.post('/exams/step1', examMainInfo);\r\n    }\r\n\r\n    /**\r\n     * edit exam main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static editExamMainInfo(examMainInfo, examId) {\r\n        return _axios.put(`/exams/${examId}}/step1`, examMainInfo);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setExamOptions(examId, options) {\r\n        return _axios.post('/exams/step2', { examId, ...options });\r\n    }\r\n\r\n    /**\r\n     * Edit exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static editExamOptions(examId, options) {\r\n        return _axios.put(`/exams/${examId}/step2`, { ...options });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static addQuestionsToExam(examId, questions) {\r\n        return _axios.post('/exams/step3', { examId, questions });\r\n    }\r\n\r\n    /**\r\n     * Edit questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n     static editQuestionsOfExam(examId, questions) {\r\n        return _axios.put(`/exams/${examId}/step3`, { questions });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{id:number, mark:number, duration:string}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setQuestionsMarksAndDuration(examId, questions) {\r\n        return _axios.post('/exams/step4', { examId, questions });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Instrunctor Own Exams\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyExams() {\r\n        return _axios.get('/instructors/my-exams');\r\n    }\r\n\r\n    /**\r\n     * Get All published exam\r\n     * @param {{isMarked: boolean}} data\r\n     * @returns {Promise<Array>}\r\n     */\r\n    // static getAllPublishedExams({ isMarked = false } = {}) {\r\n    //     return _axios.get('/exams');\r\n    // }\r\n    static getAllPublishedExams({ isMarked = false } = {}) {\r\n        return _axios.get('/exams', {\r\n            params: {\r\n                isMarked\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a specific Exam\r\n     * @param {number} examId \r\n     * @returns Promise<{Exam:Object}>\r\n     */\r\n    static getExamQuestions(examId) {\r\n        return _axios.get(`/exams/${examId}/questions`);\r\n    }\r\n\r\n    static getExamConfig(examId) {\r\n        return _axios.get(`/exams/${examId}/configs`);\r\n    }\r\n\r\n    static getExamInfo(examId) {\r\n        return _axios.get(`/exams/${examId}`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Post a question answer to \r\n     * @param {object} answerData \r\n     * Example Object\r\n     * {\r\n     \" studentAnswer\": \"seven\"\r\n     \" option_id\": 1,\r\n     \" question_id\": 1,\r\n     \" exam_id\": 1,\r\n     * } \r\n     * @returns Promise<{message}>\r\n     */\r\n    static addAnswer(answerData) {\r\n        return _axios.post(`/answers`, answerData);\r\n    }\r\n\r\n    /**\r\n    * Delete specific exam\r\n    * @param {number} examId \r\n    * @returns \r\n    */\r\n    static deleteExam(examId) {\r\n        return _axios.delete(`/exams/${examId}`);\r\n    }\r\n\r\n    /**\r\n     * Make an exam publish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": true })\r\n    }\r\n\r\n    /**\r\n     * Make an exam unpublish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamUnPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": false })\r\n    }\r\n\r\n    static getStudentExamAnswers(examId) {\r\n        return _axios.get(`exams/${examId}/my-answers`)\r\n    }\r\n\r\n    static submitExam(examId) {\r\n        return _axios.post(`exams/${examId}/submit`)\r\n    }\r\n\r\n    static applyFaceDetection(data) {\r\n        return _axios.post(`/face-detection`, data)\r\n    }\r\n    static applyFaceVerification(data) {\r\n        return _axios.post(`/face-verification`, data)\r\n    }\r\n    static startExam(examId, data) {\r\n        return _axios.post(`exams/${examId}/start`, data)\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TextField } from '@mui/material'\nimport React, { useState } from 'react'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport { Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport moment from 'moment';\nimport * as yup from 'yup';\n\nconst DURATION_REGEX = /^[0-9]{2}:[0-9]{2}:[0-9]{2}$/\nconst AddExam = () => {\n    const createExamSchema = yup.object().shape({\n        name: yup.string().required('This is a required field'),\n        numberOfTrials: yup.number().min(1).required('This is a required field'),\n        description: yup.string().required('This is a required field'),\n        totalMark: yup.number().min(1).required('This is a required field'),\n        duration: yup\n            .string()\n            .matches(DURATION_REGEX, \"Wrong Duration Formate (hh:mm:ss)\")\n            .test(\"duration\", \"mins must not be more than 60\", value => Number(value?.split(':')?.[1]) <= 60)\n            .test(\"duration\", \"seconds must not be more than 60\", value => Number(value?.split(':')?.[2]) <= 60)\n            .required('This is a required field'),\n        examSubject: yup.string().required('This is a required field'),\n        startAt: yup.date().min(new Date(), \"Start Date must be a future date\").required('This is a required field'),\n        endAt: yup\n            .date()\n            .when('startAt', (startAt, schema) => {\n                return schema.test({\n                    test: endAt => moment(startAt).isBefore(moment(endAt)),\n                    message: \"End Date must be after start date\"\n                })\n            })\n            .required('This is a required field')\n\n    });\n\n    const history = useHistory()\n    const location = useLocation()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    console.log(examOldData)\n    const onAddExamHandler = (values, actions) => {\n        if (isEditMode) {\n            ExamServices.editExamMainInfo(values, examOldData.id)\n                .then(res => {\n                    showSuccessMsg('Edited exam information successfully!')\n                    history.push(`/exams/${examOldData.id}/set-options`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.createNewExam(values)\n            .then(res => {\n                showSuccessMsg('Exam information has been saved!')\n                history.push(`/exams/${res.examId}/set-options`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            name: examOldData?.name || '',\n                            numberOfTrials: examOldData?.numberOfTrials || '',\n                            description: examOldData?.description || '',\n                            totalMark: examOldData?.totalMark || '',\n                            duration: examOldData?.duration || '',\n                            examSubject: examOldData?.examSubject || '',\n                            startAt: examOldData?.startAt || moment(new Date().setMinutes(0)).format('yyyy-MM-DD HH:mm'),\n                            endAt: examOldData?.endAt || moment(new Date().setMinutes(0)).add(7, 'days').format('yyyy-MM-DD HH:mm'),\n                        }}\n                        validationSchema={createExamSchema}\n                        onSubmit={onAddExamHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"name\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.name}\n                                        type=\"text\"\n                                        label=\"Exam Name\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.name && props.errors.name}\n                                        error={props.touched.name && Boolean(props.errors.name)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"numberOfTrials\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.numberOfTrials}\n                                        type=\"number\"\n                                        label=\"Number Of Trials\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.numberOfTrials && props.errors.numberOfTrials}\n                                        error={props.touched.numberOfTrials && Boolean(props.errors.numberOfTrials)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"description\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.description}\n                                        type=\"text\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.description && props.errors.description}\n                                        error={props.touched.description && Boolean(props.errors.description)}\n                                    />\n                                </div>\n\n                                {/* Exam Subject */}\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"examSubject\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.examSubject}\n                                        type=\"text\"\n                                        label=\"Exam Subject\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.examSubject && props.errors.examSubject}\n                                        error={props.touched.examSubject && Boolean(props.errors.examSubject)}\n                                    />\n                                </div>\n\n                                {/* Start Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"Start Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.startAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('startAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            props.setFieldValue('startAt', selectedDate)\n                                        }}\n                                        renderInput={\n                                            (params) => <TextField\n                                                {...params}\n                                                fullWidth\n                                                helperText={props.touched.startAt && props.errors.startAt}\n                                                error={props.touched.startAt && Boolean(props.errors.startAt)}\n                                            />\n                                        }\n                                    />\n                                </div>\n\n                                {/* End Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"End Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.endAt}\n\n                                        onClose={() => {\n                                            props.setFieldTouched('endAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            props.setFieldValue('endAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField\n                                            {...params}\n                                            fullWidth\n                                            helperText={props.touched.endAt && props.errors.endAt}\n                                            error={props.touched.endAt && Boolean(props.errors.endAt)}\n                                        />\n                                        }\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"totalMark\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.totalMark}\n                                        type=\"number\"\n                                        label=\"Total Mark\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.totalMark && props.errors.totalMark}\n                                        error={props.touched.totalMark && Boolean(props.errors.totalMark)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"duration\"\n                                        placeholder='Ex: 01:30:00'\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.duration}\n                                        type=\"text\"\n                                        label=\"Duration\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.duration && props.errors.duration}\n                                        error={props.touched.duration && Boolean(props.errors.duration)}\n                                    />\n                                </div>\n\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExam\n","import React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Divider } from '@mui/material';\n\nconst AddationMethodsMenu = ({ methods = [], anchorEl, setAnchorEl }) => {\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    return <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                mt: 1.5,\n                '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                },\n                '&:before': {\n                    content: '\"\"',\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: 'background.paper',\n                    transform: 'translateY(-50%) rotate(45deg)',\n                    zIndex: 0,\n                },\n            },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n        {\n            methods?.map((method, index) => <div key={index} >\n                <MenuItem onClick={method.function}>\n                    {method.displayName}\n                </MenuItem>\n                {(index !== methods.length - 1) && <Divider />}\n            </div>\n            )\n        }\n        \n    </Menu>;\n};\n\nexport default AddationMethodsMenu;\n","export const Colors = {\n    primary: '#2F4F4F',\n    primaryHover: '#3c6464',\n    secondary: '#50303A',\n    black: '#313131',\n    grey: '#AEAEAE',\n    white: '#fff',\n    danger: '#DC3545',\n    success: '#28A745'\n}","import styled from 'styled-components';\n\n\nconst ClickableView = styled.div`\n    cursor: pointer;\n`\n\n\nexport {\n    ClickableView\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from '@mui/material';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdQuestionController = ({ questionTitle, id, deleteFunction = () => { }, hasNoDelete, questionType, children }) => {\n  const history = useHistory();\n\n  const headerTextStyle = {\n    backgroundColor: '#fff',\n    position: 'absolute',\n    top: -25,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '5px 10px'\n  }\n\n  const goToQuestion = () => {\n    /** TODO */\n    history.push('/questions/' + id)\n  }\n\n  return <Wrapper className='mb-3' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n    {questionType ?\n      <Typography\n        variant='h5'\n        className='fw-bolder'\n        color=\"primary\"\n        style={headerTextStyle}\n        textTransform='capitalize'\n      >\n        {questionType}\n      </Typography>\n      :\n      null\n    }\n\n    {hasNoDelete ?\n      <div className='my-4'>\n        <Text className='text-decoration-none'>{questionTitle}</Text>\n      </div>\n      :\n      <div className='d-flex align-items-center justify-content-between'>\n        <ClickableView onClick={goToQuestion}>\n          <Text>{questionTitle}</Text>\n        </ClickableView>\n        <ClickableView onClick={deleteFunction}>\n          <CloseIcon color={'error'} fontSize={'large'} />\n        </ClickableView>\n      </div>\n    }\n\n    {\n      children\n    }\n  </Wrapper>\n};\n\nexport default BorderdQuestionController;\n","import { actionTypes } from \"../actionTypes\"\r\n\r\n/**\r\n * \r\n * @param {Array.<{questionText:string, id:string}>} questionData \r\n * @returns \r\n */\r\nexport const saveAQuestion = (questionData, groupId='') => {\r\n\r\n    console.log(\"Question data from Action: \", questionData)\r\n    if (groupId) {\r\n        // then the questtion belongs to a group\r\n        return {\r\n\r\n            type: actionTypes.ADD_GROUP_QUESTION,\r\n            payload: questionData,\r\n            groupId: groupId\r\n\r\n        }\r\n    }\r\n    else\r\n        return {\r\n            type: actionTypes.ADD_QUESTION,\r\n            payload: questionData\r\n        }\r\n}\r\n\r\n/**\r\n * \r\n * @param {{id:string}} param0 \r\n * @returns \r\n */\r\nexport const addNewGroup = (group) => {\r\n    return {\r\n        type: actionTypes.ADD_GROUP,\r\n        payload: group\r\n    }\r\n}\r\nexport const removeSavedQuestionFromExam = (id) => {\r\n    return {\r\n        type: actionTypes.REMOVE_QUESTION,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const removeAllSavedQuestions = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_ALL,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export { saveAQuestion, removeSavedQuestionFromExam, removeAllSavedQuestions }","export const QuestionTypes = {\n    ESSAY: \"essay\",\n    MCQ: \"mcq\",\n    FORMULA: \"formula\",\n    GROUP: \"group\"\n}\n\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\nimport BorderdQuestionController from './BorderdQuestionController';\nimport { TextField, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdGroupQuestion = ({ isCreationMode, getCreationData, cancelCreationFunction = () => { }, questionTitle, id, deleteFunction = () => { }, questionsMarkup, hasNoDelete, questionnType = QuestionTypes?.GROUP }) => {\n    const history = useHistory();\n\n    const goToQuestion = () => {\n        /** TODO */\n        history.push('/questions/' + id)\n    }\n\n    const headerTextStyle = {\n        backgroundColor: '#fff',\n        position: 'absolute',\n        top: -25,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        padding: '5px 10px'\n    }\n\n\n    const submitGroupQuesion = (values) => {\n        console.log(values)\n        getCreationData(values)\n    }\n\n    const cancelHandler = () => {\n        cancelCreationFunction()\n    }\n\n    const CreationFormMarkup = (\n        <Wrapper className='my-5 rounded-2' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n            <Typography\n                variant='h5'\n                className='fw-bolder'\n                color=\"primary\"\n                style={headerTextStyle}\n            >\n                Create Group Question\n            </Typography>\n            <Formik\n                initialValues={{ groupName: \"\" }}\n                onSubmit={submitGroupQuesion}\n            >\n                {props => (\n                    <>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                name=\"groupName\"\n                                required\n                                label=\"Group Name\"\n                                variant=\"outlined\"\n                            />\n                        </div>\n                        <div className='d-flex justify-content-end'>\n                            <button onClick={cancelHandler} className=\"btn btn-secondary mx-auto mt-4\">Cancel</button>\n                            <button onClick={props.handleSubmit} className=\"btn btn-primary mx-auto mt-4\">Save</button>\n                        </div>\n                    </>\n                )}\n            </Formik>\n        </Wrapper>\n    )\n\n    return (isCreationMode ?\n        CreationFormMarkup\n        :\n        <div>\n            <Wrapper className='my-5 rounded-2' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n                <Typography\n                    variant='h5'\n                    className='fw-bolder'\n                    color=\"primary\"\n                    style={headerTextStyle}\n                    textTransform='capitalize'\n                >\n                    {questionnType}\n                </Typography>\n                {hasNoDelete ?\n                    <div className='my-4'>\n                        <Text className='text-decoration-none'>{questionTitle}</Text>\n                    </div>\n                    :\n                    <div className='my-4 w-100 d-flex align-items-start justify-content-between'>\n                        <ClickableView onClick={goToQuestion}>\n                            <Text>{questionTitle}</Text>\n                        </ClickableView>\n                        <ClickableView onClick={deleteFunction}>\n                            <CloseIcon color={'error'} fontSize={'large'} />\n                        </ClickableView>\n                    </div>\n\n                }\n                <div className='mx-5'>\n                    {questionsMarkup}\n                </div>\n            </Wrapper>\n\n        </div>\n    )\n\n};\n\nexport default BorderdGroupQuestion;\n","import _axios from \"../axios-instance\";\r\nimport { QuestionTypes } from '../../constants/QuestionTypes'\r\nimport { string } from \"yup\";\r\nexport class QuestionServices {\r\n    /**\r\n     * Create new question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.mark\r\n     * @param {Array<string>} question.answers All the possible answers\r\n     * @param {string} question.correctAnswer Correct answer\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createMcqQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.MCQ, ...question });\r\n    }\r\n\r\n    static createEssayQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.ESSAY, ...question });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} id Question id\r\n     * @returns \r\n     */\r\n    static getQuestionDetails(id) {\r\n        return _axios.get(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Edit any type of question\r\n     * @param {*} id question id\r\n     * @param {*} question Question as it returned from server\r\n     * @returns \r\n     */\r\n    static editQuestion(id, question) {\r\n        return _axios.put(`/questions/${id}`, { ...question });\r\n    }\r\n\r\n    /**\r\n     * Delete any type of question\r\n     * @param {*} id question id\r\n     * @returns \r\n     */\r\n    static deleteQuestion(id) {\r\n        return _axios.delete(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Get All My Exams\r\n     * @param {Object} params\r\n     * @param {string} params.tag\r\n     * @param {Boolean} params.myQuestions\r\n     * @param {string} params.search\r\n     * @param {string} params.type\r\n     * \r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyQuestions(params) {\r\n        return _axios.get('/questions', { params: params });\r\n    }\r\n\r\n    // Formula Question Endpoints\r\n    /**\r\n     * Create Formula Question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.formula\r\n     * @param {Array<Array<any>>} question.variables [[var name, min val, max val]] ex: [ ['x',30,40] ]\r\n     * @param {Array<Array<any>>} question.formulas [[questionHeader, finalAnswer]] ex: [ ['1+23=??', 8] ]\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createFormulaQuestion(question) {\r\n        return _axios.post('/questions/formula/create', { type: QuestionTypes.FORMULA, ...question });\r\n    }\r\n\r\n    /**\r\n     * Edit Formula Question\r\n     * @param {*} id Question id\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.formula\r\n     * @param {Array<Array<any>>} question.variables [[var name, min val, max val]] ex: [ ['x',30,40] ]\r\n     * @param {Array<Array<any>>} question.formulas [[questionHeader, finalAnswer]] ex: [ ['1+23=??', 8] ]\r\n     * @returns {Promise<any>}\r\n     */\r\n    static editFormulaQuestion(id, question) {\r\n        return _axios.put(`/questions/formula/${id}`, { type: QuestionTypes.FORMULA, ...question });\r\n\r\n    }\r\n\r\n\r\n    // Grouping Question Endpoints\r\n    /**\r\n     * Create Group Question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {Array<number>} question.questions Array of question ids\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createGroupQuestion(question) {\r\n        return _axios.post('/questions/question-group/create', { type: QuestionTypes.GROUP, ...question });\r\n    }\r\n\r\n    /**\r\n     * Edit Group Question\r\n     * @param {*} id Question id\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {Array<number>} question.questions Array of question ids\r\n     * @returns {Promise<any>}\r\n     */\r\n    static editGroupQuestion(id, question) {\r\n        return _axios.put(`/questions/question-group/${id}`, { type: QuestionTypes.GROUP, ...question });\r\n    }\r\n\r\n\r\n}\r\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React, { useRef, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { matchPath, useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport MaterialModal from '../../../../Components/MaterialModal/MaterialModal'\r\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu'\r\nimport BorderdQuestionController from '../../../../Components/QuestionComponents/BorderdQuestionController'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { showAlert } from '../../../../redux/actions/AppActions'\r\nimport { addNewGroup, removeAllSavedQuestions, removeSavedQuestionFromExam } from '../../../../redux/actions/ExamAction'\r\n\r\nimport { TextField } from '@mui/material'\r\nimport BorderdGroupQuestion from '../../../../Components/QuestionComponents/BorderdGroupQuestion'\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService'\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n\r\nconst AddExamQuestions = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [groupQuestionAnchorEl, setGroupQuestionAnchorEl] = useState(null);\r\n    const [selctedGroupId, setselctedGroupId] = useState(null);\r\n\r\n    const AddQuestionHandler = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const goCreateNewQuestion = () => {\r\n        history.push('/questions/add', { fromExamCreation: true, isFromGroup: Boolean(selctedGroupId), groupId: selctedGroupId })\r\n    }\r\n    const selectQuestionFromQBank = () => {\r\n        history.push('/questions', { canSelectQuestionsForExam: true, isFromGroup: Boolean(selctedGroupId), groupId: selctedGroupId })\r\n    }\r\n    const goCreateNewGroup = () => {\r\n        setShowGroupCreationForm(true)\r\n\r\n        // Delay to give chance to be a static content to not distribute the scrolling\r\n        setTimeout(() => {\r\n            document.getElementById('scrollElementToGroupCreationForm').scrollIntoView({ behavior: 'smooth', block: 'center' })\r\n        }, 100);\r\n    }\r\n    const groupMethods = [\r\n        {\r\n            displayName: 'Create a new question',\r\n            function: goCreateNewQuestion\r\n        }\r\n        ,\r\n        {\r\n            displayName: 'Select from question bank',\r\n            function: selectQuestionFromQBank\r\n        }\r\n    ]\r\n    const methods = [\r\n        ...groupMethods,\r\n        ,\r\n        {\r\n            displayName: 'Create a new group',\r\n            function: goCreateNewGroup\r\n        }\r\n    ]\r\n\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.exam)\r\n    const examOldData = location.state?.exam\r\n    const [examOldQuestions, setExamOldQuestions] = useState(null)\r\n    const [examId, setExamId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const match = matchPath(history.location.pathname, {\r\n            path: '/exams/:examId/add-questions'\r\n        })\r\n        console.log(match.params.examId)\r\n        setExamId(match.params.examId)\r\n    }, [history.location.pathname])\r\n\r\n    /** Get Old Exam Questions */\r\n    useEffect(() => {\r\n        if (!examId) return;\r\n\r\n        ExamServices.getExamQuestions(examId)\r\n            .then(res => {\r\n                setExamOldQuestions(res?.questions)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [examId])\r\n\r\n\r\n\r\n    /** Get Questions of this exam */\r\n    const [questions, setQuestions] = useState(null);\r\n    const savedQuestions = useSelector(state => state?.exam?.examQuestions)\r\n    const getQuestions = () => {\r\n        console.log(examOldQuestions)\r\n        let oldQuestionsOtherThanGroupQuestions = examOldQuestions?.filter(item => (item.type !== QuestionTypes.GROUP))\r\n        setQuestions([...oldQuestionsOtherThanGroupQuestions, ...savedQuestions])\r\n    }\r\n    useEffect(() => {\r\n        if (!examOldQuestions) return\r\n        getQuestions();\r\n        // eslint-disable-next-line\r\n    }, [examOldQuestions]);\r\n\r\n   \r\n\r\n\r\n    const submitExamHandler = () => {\r\n        let submittedQuestions = [...questions]\r\n        submittedQuestions = submittedQuestions?.map(item => { return { question_id: item.id } })\r\n        let qroupQuestionsId = groupQuestions?.map(item => { return { question_id: item.id } })\r\n        submittedQuestions = [...(submittedQuestions || []), ...(qroupQuestionsId || [])]\r\n        let request = !isEditMode ? ExamServices.addQuestionsToExam(examId, submittedQuestions) : ExamServices.editQuestionsOfExam(examId, submittedQuestions)\r\n\r\n        request\r\n            .then(res => {\r\n                history.push('/exams')\r\n                dispatch(removeAllSavedQuestions())\r\n                showSuccessMsg('Exam has been created successfully!')\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const removeQuestionFromListHandler = (id) => {\r\n        dispatch(removeSavedQuestionFromExam(id))\r\n        setQuestions(prevState => {\r\n            return prevState?.filter(item => item.id !== id)\r\n        })\r\n        setGroupQuestions(prevState => {\r\n            return prevState?.filter(item => item.id !== id)\r\n        })\r\n    }\r\n\r\n\r\n    // QUESTION GROUP STUFF\r\n    const [groupQuestions, setGroupQuestions] = useState(null);\r\n    const savedQroupQuestions = useSelector(state => state?.exam?.examGroups)\r\n    useEffect(() => {\r\n        let oldGroupQuestionsOnly = examOldQuestions?.filter(item => (item?.type === QuestionTypes.GROUP)) || []\r\n        setGroupQuestions([...oldGroupQuestionsOnly, ...savedQroupQuestions])\r\n    }, [examOldQuestions, savedQroupQuestions])\r\n\r\n    const [showGroupCreationForm, setShowGroupCreationForm] = useState(false)\r\n    const createGroupQuestion = (values) => {\r\n        QuestionServices.createGroupQuestion({ questionText: values?.groupName })\r\n            .then(res => {\r\n                console.log(\"QUESTION RES\", res)\r\n                let group = {\r\n                    id: res.id,\r\n                    questionText: values?.groupName,\r\n                    type: QuestionTypes.GROUP,\r\n                    questions: []\r\n                }\r\n                dispatch(addNewGroup(group))\r\n                setShowGroupCreationForm(false)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    const cancelGroupCreation = () => {\r\n        setShowGroupCreationForm(false)\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n    const showGroupQuestionMenu = (e, selectedgroupId) => {\r\n        setGroupQuestionAnchorEl(e.currentTarget)\r\n        setselctedGroupId(selectedgroupId)\r\n    }\r\n    const hideGroupQuestionMenu = () => {\r\n        setGroupQuestionAnchorEl(null)\r\n        setselctedGroupId(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"QUESTIOS\", savedQroupQuestions)\r\n\r\n    }, [savedQroupQuestions])\r\n    // Main Component\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={!isEditMode ? 'Create Exam: add questions' : 'Edit Exam: edit questions'}>\r\n                    <div className='p-4'>\r\n                        <div className='d-flex justify-content-end mb-4'>\r\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\r\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                            </button>\r\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                                questions?.map(question =>\r\n                                    <BorderdQuestionController\r\n                                        deleteFunction={() => removeQuestionFromListHandler(question?.id)}\r\n                                        id={question?.id} key={question?.id}\r\n                                        questionTitle={question?.questionText}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <AddationMethodsMenu methods={groupMethods} anchorEl={groupQuestionAnchorEl} setAnchorEl={hideGroupQuestionMenu} />\r\n                        <div>\r\n                            {\r\n                                groupQuestions?.map(question =>\r\n                                    <div key={question.id} className='position-relative'>\r\n                                        <button onClick={(e) => showGroupQuestionMenu(e, question?.id)} className='btn btn-success position-absolute p-0 rounded-circle' style={{ top: -20, zIndex: 20, right: -10, width: 44, height: 44 }}>\r\n                                            <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff', transform: 'scale(0.8)' }} />\r\n                                        </button>\r\n                                        <BorderdGroupQuestion\r\n                                            questionTitle={question?.questionText}\r\n                                            deleteFunction={() => removeQuestionFromListHandler(question?.id)}\r\n                                            questionsMarkup={\r\n                                                question?.questions?.map(subQuestion => (\r\n                                                    <BorderdQuestionController\r\n                                                        key={subQuestion?.id}\r\n                                                        id={subQuestion?.id}\r\n                                                        questionTitle={subQuestion?.questionText}\r\n                                                    />\r\n                                                ))\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div id=\"scrollElementToGroupCreationForm\" />\r\n                        {showGroupCreationForm ?\r\n                            <div>\r\n                                <BorderdGroupQuestion\r\n                                    isCreationMode={true}\r\n                                    cancelCreationFunction={cancelGroupCreation}\r\n                                    getCreationData={createGroupQuestion}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n\r\n                        <div>\r\n                            <button onClick={submitExamHandler} className=\"btn btn-primary mx-auto mt-4\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddExamQuestions\r\n","import { Typography } from '@mui/material'\nimport React from 'react'\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\n\nconst NoContentComponent = ({ text }) => {\n    return (\n        <div className='d-flex justify-content-center align-items-center'>\n            <DoNotDisturbAltIcon color='error' />\n            <Typography className='ms-1' color={'error'}>{text}</Typography>\n        </div>\n    )\n}\n\nexport default NoContentComponent","import React from 'react'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Chip, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport PublishIcon from '@mui/icons-material/Publish';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Exams = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const addNewExamHandler = (e) => {\r\n        console.log(e)\r\n        history.push('/exams/add')\r\n    }\r\n\r\n    const [exams, setExams] = useState(null)\r\n    const getExamsHandler = () => {\r\n        ExamServices.getMyExams()\r\n            .then(res => {\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getExamsHandler()\r\n    }, [])\r\n\r\n    const GoToExamDetailsHandler = (examId) => {\r\n        history.push(`/exams/${examId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedExam, setSelectedExam] = React.useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedExam(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedExam(null)\r\n    };\r\n\r\n    const editExamHandler = () => {\r\n        console.log(selectedExam)\r\n        let exam = exams.find(item => item.id === selectedExam)\r\n        console.log(exam)\r\n        history.push('/exams/edit', { exam })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteExamHandler = () => {\r\n        let deleteFun = () => {\r\n            ExamServices.deleteExam(selectedExam)\r\n                .then(res => {\r\n                    showSuccessMsg('Exam deleted successfully!')\r\n                    let newExams = [...exams]\r\n                    newExams = newExams.filter(item => item.id !== selectedExam)\r\n                    setExams(newExams)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        dispatch(showAlert({\r\n            header: 'Delete this exam?',\r\n            details: 'You are going to delete this exam permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    const makePublishHandler = (isWantToBePublish) => {\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        let examName = selectedExamObject?.name\r\n        let request = isWantToBePublish ? ExamServices.makeExamPublished(selectedExam) : ExamServices.makeExamUnPublished(selectedExam)\r\n        request\r\n            .then(res => {\r\n                showSuccessMsg(`Your Exam (${examName}) has been ${isWantToBePublish ? 'published' : 'unpublished'} successfully!`)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n            .finally(() => {\r\n                handleClose() //for menu\r\n                getExamsHandler()\r\n            })\r\n    }\r\n\r\n    const isExamNotCompleted = (row) => (!row.config || !row.questions?.length)\r\n    const isSelectedExamPublished = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return selectedExamObject?.isPublished\r\n    }\r\n    const isSelctedExamIsNotCompleted = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return (!selectedExamObject?.config || !selectedExamObject?.questions?.length)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{}} className='d-flex mt-4 justify-content-end'>\r\n                <button onClick={addNewExamHandler} className='btn btn-success'>\r\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                </button>\r\n            </div>\r\n\r\n            {exams?.length ?\r\n                <TableContainer className='mt-5' component={Paper}>\r\n                    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>Exam Name</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Start Date</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">End Date</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Total Marks</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Duration</StyledTableCell>\r\n                                <StyledTableCell align=\"right\"> </StyledTableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {exams?.map((row) => (\r\n                                <StyledTableRow\r\n                                    className={isExamNotCompleted(row) ? 'bg-danger disablePointer' : ''}\r\n                                    onClick={!isExamNotCompleted(row) ? () => GoToExamDetailsHandler(row.id) : null}\r\n                                    key={row.id}\r\n                                >\r\n                                    {/* NAME */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} component=\"th\" scope=\"row\">\r\n                                        {row.name}\r\n                                        {row.isPublished ?\r\n                                            < Chip className='ms-2' size='small' color=\"success\" icon={<DoneAllIcon />} label=\"Published\" />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </StyledTableCell>\r\n                                    {/* STARE DATE */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.startAt}\r\n                                    </StyledTableCell>\r\n                                    {/* END DATE */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.endAt}\r\n                                    </StyledTableCell>\r\n                                    {/* TOTAL MARK */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.totalMark}\r\n                                    </StyledTableCell>\r\n                                    {/* DURATION */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.duration}\r\n                                    </StyledTableCell>\r\n                                    {/* OPTIONS */}\r\n                                    <StyledTableCell style={{ cursor: 'pointer' }} className={isExamNotCompleted(row) ? 'text-light' : ''} onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                        <SettingsIcon fontSize='medium' color={isExamNotCompleted(row) ? '#fff' : 'secondary'} />\r\n                                    </StyledTableCell>\r\n\r\n                                </StyledTableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                :\r\n                null\r\n            }\r\n\r\n            {!exams?.length ?\r\n                <NoContentComponent text={\"No Exams Right Now\"} />\r\n                :\r\n                null\r\n            }\r\n\r\n            {\r\n                selectedExam &&\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    autoFocus={false}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    {!isSelctedExamIsNotCompleted() ?\r\n                        <MenuItem onClick={() => makePublishHandler(!isSelectedExamPublished())}>\r\n                            <PublishIcon />\r\n                            {isSelectedExamPublished() ? 'UnPublish' : 'Publish'}\r\n                        </MenuItem>\r\n                        :\r\n                        null\r\n                    }\r\n                    <MenuItem onClick={editExamHandler}>\r\n                        <EditIcon />\r\n                        Edit\r\n                    </MenuItem>\r\n                    <MenuItem color='error' onClick={deleteExamHandler}>\r\n                        <DeleteForeverIcon color='error' />\r\n                        Delete\r\n                    </MenuItem>\r\n                </Menu>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Exams\r\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { useState } from 'react';\r\nimport { Checkbox, FormControlLabel, Menu, MenuItem, Switch, TextField, Typography } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport { addNewGroup, saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { Formik } from 'formik';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Questions = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const isSelectionMode = location.state?.canSelectQuestionsForExam\r\n\r\n    const goToAddQuestionPageHandler = () => {\r\n        history.push(`${history.location.pathname}/add`)\r\n    }\r\n\r\n    /**\r\n     * Getting Questions\r\n     */\r\n    const [questions, setQuestions] = useState(null)\r\n    const getAllQuestions = () => {\r\n        QuestionServices.getMyQuestions()\r\n            .then(res => {\r\n                console.log(\"Questions =>\", res)\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        //Commented as it get from filter useeffect initially\r\n        //getAllQuestions();\r\n    }, [])\r\n\r\n    const GoToQuestionDetailsHandler = (questionId) => {\r\n        history.push(`${history.location.pathname}/${questionId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedQuestion(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedQuestion(null)\r\n    };\r\n\r\n    const editQuestionHandler = () => {\r\n        console.log(selectedQuestion)\r\n        let question = questions.find(item => item.id === selectedQuestion)\r\n        history.push('/questions/edit', { question })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteQuestionHandler = () => {\r\n        let deleteFun = () => {\r\n            QuestionServices.deleteQuestion(selectedQuestion)\r\n                .then(res => {\r\n                    showSuccessMsg('Question deleted successfully!')\r\n                    let newQuestions = [...questions]\r\n                    newQuestions = newQuestions.filter(item => item.id !== selectedQuestion)\r\n                    setQuestions(newQuestions)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        // show alert\r\n        dispatch(showAlert({\r\n            header: 'Delete this question?',\r\n            details: 'You are going to delete this question permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    // #### SELECTION MODE STUFF ####\r\n\r\n    const isAllSelected = questions?.every(item => item.isSelected)\r\n    const selectedQuestions = questions?.filter(item => item.isSelected)\r\n    /**\r\n     * Mark needed question to be selected for an exam in [selection mode]\r\n     */\r\n    const onCheckHandler = (index, isSelected) => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[index].isSelected = isSelected\r\n            return newQuestions\r\n        })\r\n    }\r\n    const selectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: true } })\r\n        })\r\n    }\r\n    const deselectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: false } })\r\n        })\r\n    }\r\n    const selectedGroupQuestionId = location.state?.groupId\r\n    const sentSelectedQuestionHandler = () => {\r\n        console.log(\"testttt\", selectedGroupQuestionId)\r\n        if (selectedGroupQuestionId) {\r\n            QuestionServices.getQuestionDetails(selectedGroupQuestionId)\r\n                .then(res => {\r\n                    let returnedQuestion = res?.question\r\n                    let groupReturnedQuestions = res?.question?.questions\r\n                    console.log(returnedQuestion)\r\n                    return QuestionServices.editGroupQuestion(selectedGroupQuestionId, {\r\n                        questionText: returnedQuestion?.questionText,\r\n                        questions: [...groupReturnedQuestions?.map(item => item.id), ...selectedQuestions?.map(item => item.id)]\r\n                    })\r\n                })\r\n                .then(res => {\r\n                    console.log(\"Edites Question:::=>>\", res)\r\n                    dispatch(saveAQuestion(selectedQuestions, selectedGroupQuestionId))\r\n                    history.goBack()\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n        }\r\n        else {\r\n            let normalQuestions = selectedQuestions?.filter(item => item.type !== QuestionTypes.GROUP)\r\n            let groupQuestions = selectedQuestions?.filter(item => item.type === QuestionTypes.GROUP)\r\n            groupQuestions?.length && dispatch(addNewGroup(groupQuestions))\r\n            normalQuestions?.length && dispatch(saveAQuestion(normalQuestions, null))\r\n            history.goBack()\r\n        }\r\n    }\r\n\r\n\r\n    // #### SEARCH AND FILTER FUNCTIONALITY ####\r\n\r\n    const [filterValue, setFilterValue] = useState(null)\r\n    const [filterMenuEl, setFilterMenuEl] = useState(null)\r\n    const [searchValue, setsearchValue] = useState('')\r\n    const [isAllowedToSearch, setIsAllowedToSearch] = useState(true)\r\n    const onFilterHandler = (values) => {\r\n        setFilterValue(prevState => { return { ...prevState, ...values } })\r\n        setFilterMenuEl(false)\r\n    }\r\n    useEffect(() => {\r\n        QuestionServices.getMyQuestions({\r\n            myQuestions: filterValue?.isMyQuestions,\r\n            tag: filterValue?.tag,\r\n            type: filterValue?.type,\r\n            search: filterValue?.search\r\n        })\r\n            .then(res => {\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [filterValue])\r\n\r\n    const searchHandler = () => {\r\n        if (!searchValue) return\r\n        setIsAllowedToSearch(false)\r\n        setFilterValue(prevState => { return { ...prevState, search: searchValue } })\r\n    }\r\n    const clearSearch = () => {\r\n        setsearchValue('')\r\n        setIsAllowedToSearch(true)\r\n        setFilterValue(prevState => { return { ...prevState, search: null } })\r\n    }\r\n    const clearFilter = () => {\r\n        setFilterValue(null)\r\n        clearSearch()\r\n        setFilterMenuEl(false)\r\n    }\r\n    const FilterMarkup = (\r\n        <div className='d-flex justify-content-between mt-3'>\r\n            <div className='position-relative'>\r\n                <TextField\r\n                    name=\"search\"\r\n                    fullWidth\r\n                    value={searchValue}\r\n                    type=\"text\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => { setsearchValue(e.target.value); setIsAllowedToSearch(true) }}\r\n                />\r\n                <div onClick={isAllowedToSearch ? searchHandler : clearSearch} className='position-absolute p-2 pointer' style={{ right: 0, top: '50%', zIndex: 10, transform: 'translateY(-50%)' }}>\r\n                    {isAllowedToSearch ?\r\n                        <SearchIcon style={searchValue ? {} : { cursor: 'not-allowed' }} color=\"secondary\" />\r\n                        :\r\n                        <CloseIcon color=\"secondary\" />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className='d-flex align-items-center p-2 pointer' onClick={(e) => setFilterMenuEl(e.currentTarget)}>\r\n                <FilterListIcon color=\"secondary\" fontSize='large' />\r\n            </div>\r\n\r\n            <Menu\r\n                id=\"basic-menu2\"\r\n                anchorEl={filterMenuEl}\r\n                open={Boolean(filterMenuEl)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={() => { setFilterMenuEl(null) }}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <div className='p-3'>\r\n                    <div onClick={clearFilter} className='pointer mb-3 d-flex justify-content-end'>\r\n                        <Typography color='secondary' className='text-decoration-underline'>clear filter</Typography>\r\n                    </div>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={{\r\n                            type: filterValue?.type || '',\r\n                            tag: filterValue?.tag || '',\r\n                            isMyQuestions: filterValue?.isMyQuestions || false\r\n                        }}\r\n                        onSubmit={onFilterHandler}\r\n                    >\r\n                        {props => (\r\n                            <form className='p-2' onSubmit={props.handleSubmit}>\r\n                                <div className='mb-2'>\r\n                                    <TextField\r\n                                        name=\"type\"\r\n                                        onChange={props.handleChange}\r\n                                        onBlur={props.handleBlur}\r\n                                        value={props.values.type}\r\n                                        fullWidth\r\n                                        select\r\n                                        label=\"Type\"\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        {\r\n                                            Object.keys(QuestionTypes).map((type) => (\r\n                                                <MenuItem key={type} value={QuestionTypes[type]}>\r\n                                                    {type}\r\n                                                </MenuItem>\r\n                                            ))\r\n                                        }\r\n                                    </TextField>\r\n                                </div>\r\n\r\n                                <div className='mb-2'>\r\n                                    <TextField\r\n                                        name=\"tag\"\r\n                                        onChange={props.handleChange}\r\n                                        onBlur={props.handleBlur}\r\n                                        value={props.values.tag}\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        label=\"Tags\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='mb-2'>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={props.values.isMyQuestions}\r\n                                                onChange={props.handleChange}\r\n                                                onBlur={props.handleBlur}\r\n                                                name=\"isMyQuestions\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Show My Questions Only\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='d-flex'>\r\n                                    <button className=\"btn btn-secondary mx-auto\" type=\"button\" onClick={() => { setFilterMenuEl(null) }}>Cancel</button>\r\n                                    <button className=\"btn btn-primary mx-auto\" type=\"submit\">Apply</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </Menu>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex mt-4 justify-content-end'>\r\n                {!isSelectionMode ?\r\n                    <button onClick={goToAddQuestionPageHandler} className='btn btn-success'>\r\n                        <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                    </button>\r\n                    :\r\n                    <button onClick={sentSelectedQuestionHandler} className='btn btn-success'>\r\n                        Confirm Selection ({selectedQuestions?.length})\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            {FilterMarkup}\r\n            {questions?.length ?\r\n                <>\r\n                    <TableContainer className='mt-1' component={Paper}>\r\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {isSelectionMode &&\r\n                                        <StyledTableCell>\r\n                                            <Checkbox\r\n                                                style={{ backgroundColor: '#fff' }}\r\n                                                checked={isAllSelected}\r\n                                                onChange={isAllSelected ? deselectAllQuestions : selectAllQuestions}\r\n                                            />\r\n                                        </StyledTableCell>\r\n                                    }\r\n                                    <StyledTableCell>Question Header</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Owned By</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Created Date</StyledTableCell>\r\n                                    {!isSelectionMode &&\r\n                                        <StyledTableCell align=\"right\"> </StyledTableCell>\r\n                                    }\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {questions?.map((row, index) => (\r\n                                    <StyledTableRow onClick={() => GoToQuestionDetailsHandler(row.id)} key={row.id}>\r\n                                        {isSelectionMode &&\r\n                                            <StyledTableCell onClick={(e) => e.stopPropagation()} component=\"th\" scope=\"row\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={Boolean(row.isSelected)}\r\n                                                    onChange={(e) => onCheckHandler(index, e.target.checked)}\r\n                                                />\r\n                                            </StyledTableCell>\r\n                                        }\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.questionText}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{`${row.instructor.degree}, ${row.instructorName}`}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.created_at}</StyledTableCell>\r\n                                        {!isSelectionMode &&\r\n                                            <StyledTableCell onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                                <SettingsIcon fontSize='medium' color='secondary' />\r\n                                            </StyledTableCell>\r\n                                        }\r\n\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n\r\n            {!questions?.length ?\r\n                <NoContentComponent text=\"No Questions at the moment\" />\r\n                :\r\n                null\r\n            }\r\n\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={editQuestionHandler}>\r\n                    <EditIcon />\r\n                    Edit\r\n                </MenuItem>\r\n                <MenuItem color='error' onClick={deleteQuestionHandler}>\r\n                    <DeleteForeverIcon color='error' />\r\n                    Delete\r\n                </MenuItem>\r\n            </Menu>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import { Switch } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Formik } from 'formik';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport { matchPath } from 'react-router-dom';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\n\nconst SetExamOptions = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [examId, setExamId] = useState(null)\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const oldExamConfig = examOldData?.config\n\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/set-options'\n        })\n        console.log(match.params.examId)\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    const setOptionsHandler = (values, actions) => {\n        let submittedValues = { ...values }\n        submittedValues['gradingMethod'] = submittedValues['gradingMethod'] ? 'auto' : 'manual'\n\n        if (isEditMode && oldExamConfig) {\n            ExamServices.editExamOptions(examId, submittedValues)\n                .then(res => {\n                    showSuccessMsg('Exam options has been edited!')\n                    history.push(`/exams/${examOldData?.id}/add-questions`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.setExamOptions(examId, submittedValues)\n            .then(res => {\n                showSuccessMsg('Exam options has been saved!')\n                history.push(`/exams/${examId}/add-questions`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam: options' : 'Edit Exam: options'}>\n                    <Formik\n                        initialValues={{\n                            faceRecognition: oldExamConfig ? Boolean(oldExamConfig?.faceRecognition) : false,\n                            faceDetection: oldExamConfig ? Boolean(oldExamConfig?.faceDetection) : false,\n                            questionsRandomOrder: oldExamConfig ? Boolean(oldExamConfig?.questionsRandomOrder) : false,\n                            plagiarismCheck: oldExamConfig ? Boolean(oldExamConfig?.plagiarismCheck) : false,\n                            disableSwitchBrowser: oldExamConfig ? Boolean(oldExamConfig?.disableSwitchBrowser) : false,\n                            gradingMethod: oldExamConfig ? Boolean(oldExamConfig?.gradingMethod === 'auto') : true,\n                        }}\n                        onSubmit={setOptionsHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('questionsRandomOrder', !props.values.questionsRandomOrder)}>Questions Random Order</label>\n                                    <Switch\n                                        name='questionsRandomOrder'\n                                        checked={props.values.questionsRandomOrder}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('disableSwitchBrowser', !props.values.disableSwitchBrowser)}>Disable Switch Browser</label>\n                                    <Switch\n                                        name='disableSwitchBrowser'\n                                        checked={props.values.disableSwitchBrowser}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('plagiarismCheck', !props.values.plagiarismCheck)}>Plagiarism Check</label>\n                                    <Switch\n                                        name='plagiarismCheck'\n                                        checked={props.values.plagiarismCheck}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceDetection', !props.values.faceDetection)}>Face Detection</label>\n                                    <Switch\n                                        name='faceDetection'\n                                        checked={props.values.faceDetection}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('gradingMethod', !props.values.gradingMethod)}>Automatic Grading</label>\n                                    <Switch\n                                        name='gradingMethod'\n                                        checked={props.values.gradingMethod}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceRecognition', !props.values.faceRecognition)}>Face Recognition</label>\n                                    <Switch\n                                        name='faceRecognition'\n                                        checked={props.values.faceRecognition}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default SetExamOptions\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\nconst DangerLabel = styled(Label)`\r\n    color: ${Colors.danger};\r\n`\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst MCQ = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const MCQSCHEMA = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n        choice1: yup.string().required('This is a required field'),\r\n        choice2: yup.string().required('This is a required field'),\r\n        choice3: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createMcqQuestion({\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n\r\n    }\r\n\r\n    const mcqChoices = initValues?.options?.filter(item => !item.isCorrect)\r\n    const mcqCorrectAnswer = initValues?.options?.find(item => item.isCorrect)\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: mcqCorrectAnswer?.value || '',\r\n            choice1: mcqChoices?.[0].value || '',\r\n            choice2: mcqChoices?.[1].value || '',\r\n            choice3: mcqChoices?.[2].value || ''\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={MCQSCHEMA}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Correct Option</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Correct Answer....'\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #1 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice1' className='mb-2'>Wrong Option 1</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice1\"\r\n                        id=\"choice1\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice1}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice1 && props.errors.choice1}\r\n                        error={props.touched.choice1 && Boolean(props.errors.choice1)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #2 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice2' className='mb-2'>Wrong Option 2</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice2\"\r\n                        id=\"choice2\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice2}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice2 && props.errors.choice2}\r\n                        error={props.touched.choice2 && Boolean(props.errors.choice2)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #3 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice3' className='mb-2'>Wrong Option 3</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice3\"\r\n                        id=\"choice3\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice3}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice3 && props.errors.choice3}\r\n                        error={props.touched.choice3 && Boolean(props.errors.choice3)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">{!initValues? 'ADD':'EDIT'}</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default MCQ;\r\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\n\r\n\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst Essay = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const EssaySchema = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        // console.log(values)\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createEssayQuestion({\r\n                questionText: values?.questionText,\r\n                // correctAnswer: values?.correctAnswer,\r\n                answers: [values?.correctAnswer]\r\n            })\r\n            // .then((response) => {\r\n            //     console.log(\"Success Response\")\r\n            //     console.log(response)\r\n\r\n            // }).catch((error) => {\r\n            //     console.log(\"error\")\r\n            //     console.log(error)\r\n\r\n\r\n            // })\r\n            // pass the request outside the component\r\n\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                answers: [values.correctAnswer],\r\n            })\r\n\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n\r\n    }\r\n\r\n    console.log(initValues)\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: initValues?.options[0]?.value || '',\r\n\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={EssaySchema}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Model Answer</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Model Answer....'\r\n                        multiline\r\n                        rows={9}\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default Essay;\r\n","/**\r\n * params order is not mandatory\r\n * @param {Number} first \r\n * @param {Number} second \r\n * @returns a random number between two numbers\r\n */\r\nconst getRandomValue = (first, second) => {\r\n    let max = Math.max(first, second)\r\n    let min = Math.min(first, second)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst useRandomValue = () => {\r\n    return getRandomValue\r\n}\r\nexport default useRandomValue\r\n","import { TextField, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../../../constants/Colors';\nimport * as yup from 'yup';\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\nimport mexp from 'math-expression-evaluator'\nimport useRandomValue from '../../../../hooks/useRandomValue';\nimport HandleErrors from '../../../../hooks/handleErrors';\n\nconst VAR_REGEX = /\\[[a-z A-Z]+\\]/g\nconst BRACKETS_REGEX = /\\[|\\]/g\n\nconst Label = styled.label`\n    display: block;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000;\n`\nconst Formula = ({ initValues, getQuestionCreationRequest = () => { } }) => {\n    const EssaySchema = yup.object().shape({\n        questionText: yup.string().required('This is a required field'),\n        formula: yup.string().required('This is a required field'),\n        numberOfQuestions: yup.number().required().max(50).min(1),\n    });\n\n    const isEditMode = Boolean(initValues)\n\n    const getRandomValue = useRandomValue();\n    const [questionFormValue, setQuestionFormValue] = useState(null)\n    const submitQuestionHandler = (values) => {\n        setQuestionFormValue(values)\n\n        let numberOfGeneratedQuestion = values.numberOfQuestions\n        let finalQuestionValue = []\n\n        // setting Variables\n        while (numberOfGeneratedQuestion--) {\n            let variablesAttr = []\n            vars.forEach(element => {\n                let generatedAttempt = {}\n                generatedAttempt['var'] = element[0]\n                generatedAttempt['value'] = getRandomValue(Number(element[1]), Number(element[2]))\n                variablesAttr.push(generatedAttempt)\n            });\n            finalQuestionValue.push({ variables: variablesAttr })\n        }\n\n        // setting final value\n        finalQuestionValue = finalQuestionValue.map(item => {\n            let formula = values.formula + ''\n            let vars = item.variables\n            vars.forEach(element => {\n                formula = formula.replace(element.var, element.value)\n            })\n            return { ...item, finalValue: mexp.eval(formula) }\n        })\n        setGeneratedQuestions(finalQuestionValue)\n    }\n\n    const [vars, setVars] = useState([])\n    const [uniqueTokensList, setUniqueTokensList] = useState([])\n    const [questionText, setQuestionText] = useState('')\n\n    /** Creating tokens */\n    const generateVars = () => {\n        let tokenList = [...questionText?.matchAll(VAR_REGEX)]\n        tokenList = tokenList?.map(item => item[0])\n        tokenList = tokenList?.map(item => {\n            let editedToken = item + ''\n            editedToken = editedToken.replace(BRACKETS_REGEX, '')\n            return editedToken\n        })\n        const uniqueTokens = Array.from(new Set(tokenList))\n        setUniqueTokensList(uniqueTokens)\n    }\n    useEffect(() => {\n        generateVars()\n    }, [questionText])\n\n    /** ONLY trigger unique tokens list changes  */\n    const [oldVarList, setOldVarList] = useState(null)\n\n    useEffect(() => {\n        let editedList = uniqueTokensList?.map(item => { return [item, '', ''] })\n        if (oldVarList) {\n            let varObject = {};\n            oldVarList.forEach(element => {\n                varObject[element[0]] = [element[1], element[2]]\n            });\n            editedList.forEach(element => {\n                if (varObject?.[element[0]]) {\n                    element[1] = varObject?.[element[0]][0]\n                    element[2] = varObject?.[element[0]][1]\n                }\n            })\n        }\n        setVars(editedList)\n        setOldVarList(editedList)\n        setGeneratedQuestions(null)\n    }, [uniqueTokensList])\n\n    /** Trigger when get an init value */\n    useEffect(() => {\n        if (!initValues) return\n        setQuestionText(initValues?.questionText)\n\n        let initVarList = initValues?.variables?.map(item => [item['variable'], item['startVal'], item['endVal']])\n        setOldVarList(initVarList)\n    }, [initValues])\n\n    const onChangeMin = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][1] = value\n            return newVars\n        })\n    }\n\n    const onChangeMax = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][2] = value\n            return newVars\n        })\n    }\n\n    const [generatedQuestions, setGeneratedQuestions] = useState(null)\n\n    const createQuestion = () => {\n        let generatedFormulas = generatedQuestions?.map(item => {\n            let questionText = questionFormValue?.questionText\n            let questionTextAfterGeneration = questionText\n            item?.variables?.forEach(element => {\n                questionTextAfterGeneration = questionTextAfterGeneration?.replaceAll(`[${element.var}]`, element.value)\n            });\n\n            return [questionTextAfterGeneration, item.finalValue]\n        })\n\n        let creationRequest = QuestionServices.createFormulaQuestion({\n            questionText: questionFormValue?.questionText,\n            formula: questionFormValue?.formula,\n            variables: vars,\n            formulas: generatedFormulas\n        })\n\n        let editRequest = QuestionServices.editFormulaQuestion(initValues?.id, {\n            questionText: questionFormValue?.questionText,\n            formula: questionFormValue?.formula,\n            variables: vars,\n            formulas: generatedFormulas\n        })\n        getQuestionCreationRequest(isEditMode ? editRequest : creationRequest)\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    questionText: initValues?.questionText || '',\n                    correctAnswer: initValues?.correctAnswer || '',\n                    formula: initValues?.formula?.formula || '',\n                    numberOfQuestions: initValues?.formula_questions?.length || ''\n                }}\n                enableReinitialize={true}\n                validationSchema={EssaySchema}\n                onSubmit={submitQuestionHandler}\n            >\n                {props => (\n                    <form className='m-5' onSubmit={props.handleSubmit}>\n                        {/* Question Header */}\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\n                            <TextField\n                                name=\"questionText\"\n                                id=\"questionText\"\n                                placeholder='Question on your mind....'\n                                multiline\n                                rows={4}\n                                fullWidth\n                                value={props.values.questionText}\n                                onChange={(e) => { props.handleChange(e); setQuestionText(e.target.value) }}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.questionText && props.errors.questionText}\n                                error={props.touched.questionText && Boolean(props.errors.questionText)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='formula' className='mb-2'>Formula</Label>\n                            <TextField\n                                name=\"formula\"\n                                id=\"formula\"\n                                placeholder='Final Answer Formula'\n                                fullWidth\n                                value={props.values.formula}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.formula && props.errors.formula}\n                                error={props.touched.formula && Boolean(props.errors.formula)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        {vars?.map((variable, index) => (\n                            <div key={index} className='d-flex justify-content-between align-items-center mt-5'>\n                                <Label style={{ color: Colors.primary }}>{`${variable[0]} :`}</Label>\n                                <TextField\n                                    name=\"min\"\n                                    label=\"Min Value\"\n                                    placeholder='Variable minimum value'\n                                    value={variable[1]}\n                                    onChange={(e) => onChangeMin(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                                <TextField\n                                    name=\"max\"\n                                    label=\"Max Value\"\n                                    placeholder='Variable maximum value'\n                                    value={variable[2]}\n                                    onChange={(e) => onChangeMax(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                            </div>\n                        ))}\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='numberOfQuestions' className='mb-2'>Number of random questions</Label>\n                            <TextField\n                                name=\"numberOfQuestions\"\n                                id=\"numberOfQuestions\"\n                                type={'number'}\n                                placeholder='Max: 50'\n                                fullWidth\n                                value={props.values.numberOfQuestions}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.numberOfQuestions && props.errors.numberOfQuestions}\n                                error={props.touched.numberOfQuestions && Boolean(props.errors.numberOfQuestions)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Generate</button>\n\n                        {generatedQuestions ?\n                            <div className='mt-4'>\n                                <Typography\n                                    variant='h5'\n                                    color='primary'\n                                    style={{ textDecorationLine: 'underline' }}\n                                >\n                                    Generated Questions\n                                </Typography>\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            {uniqueTokensList?.map((item, index) => (\n                                                <th key={index + ''} scope=\"col\">{item}</th>\n                                            ))\n                                            }\n                                            <th scope=\"col\">{'Final Value'}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {generatedQuestions?.map((item, index) => (\n                                            <tr key={index + ''}>\n                                                {\n                                                    item?.variables?.map((item, index) => (\n                                                        <td key={index + ''}>{item.value}</td>\n                                                    ))\n                                                }\n\n                                                <th>{item?.finalValue}</th>\n                                            </tr>\n                                        ))\n                                        }\n                                    </tbody>\n                                </table >\n                            </div>\n                            :\n                            null\n                        }\n                    </form>\n                )}\n            </Formik>\n            <button disabled={!generatedQuestions} onClick={createQuestion} className=\"btn btn-primary mx-auto mt-4\" type=\"button\">\n                {!isEditMode ? 'ADD' : 'Edit'}\n            </button>\n        </>\n    )\n\n};\n\nexport default Formula;\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MCQ from './QuestionTypes/MCQ';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons/lib/icons';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport Essay from './QuestionTypes/Essay';\r\nimport Formula from './QuestionTypes/Formula';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\n\r\n\r\nconst AddQuestionScreen = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.question)\r\n    const oldQuestion = location.state?.question\r\n\r\n    /** get question details */\r\n    const [oldQuestionDetails, setOldQuestionDetails] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!oldQuestion?.id) return\r\n        QuestionServices.getQuestionDetails(oldQuestion?.id)\r\n            .then(res => {\r\n                setOldQuestionDetails(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [oldQuestion?.id])\r\n\r\n    const [questionTypes, setQuestionTypes] = useState(null);\r\n    const getQuestionTypes = () => {\r\n        let typesObject = QuestionTypes\r\n        let typeList = []\r\n        Object.keys(typesObject).forEach(key => {\r\n            if (QuestionTypes[key] === QuestionTypes.GROUP)\r\n                return;\r\n\r\n            typeList.push({ id: key, value: typesObject[key] })\r\n        })\r\n        setQuestionTypes(typeList)\r\n    }\r\n    useEffect(() => {\r\n        getQuestionTypes();\r\n    }, []);\r\n\r\n\r\n    const [questionType, setQuestionType] = useState(oldQuestion?.type || '');\r\n    const questionTypeSelectionMenuMarkup = (\r\n        <div className='w-50 mx-auto'>\r\n            <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                fullWidth\r\n                label=\"Question Type\"\r\n                value={questionType}\r\n                onChange={(event) => setQuestionType(event.target.value)}\r\n                disabled={isEditMode}\r\n            >\r\n                {questionTypes?.map((type) => (\r\n                    <MenuItem key={type.id} value={type.value}>\r\n                        {type.value}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n\r\n    const createQuestionHandler = (request) => {\r\n        let addedQuestion;\r\n        request\r\n            .then(res => {\r\n                addedQuestion = res\r\n                console.log(\"Question request\", res)\r\n\r\n                let isFromExamCreation = location?.state?.fromExamCreation\r\n                let isFromGroup = location?.state?.isFromGroup\r\n                let groupId = location?.state?.groupId\r\n\r\n                if (groupId) {\r\n                    QuestionServices.getQuestionDetails(groupId)\r\n                        .then(res => {\r\n                            let returnedQuestion = res?.question\r\n                            let groupReturnedQuestions = res?.question?.questions\r\n                            console.log(returnedQuestion)\r\n                            return QuestionServices.editGroupQuestion(groupId, {\r\n                                questionText: returnedQuestion?.questionText,\r\n                                questions: [...groupReturnedQuestions?.map(item => item.id), addedQuestion?.id]\r\n                            })\r\n                        })\r\n                        .then(res => {\r\n                            console.log(\"Edites Question:::=>>\", res)\r\n                            dispatch(saveAQuestion([addedQuestion], groupId))\r\n                            showSuccessMsg(\"Request done successfully\")\r\n                            history.goBack()\r\n                        })\r\n                        .catch(err => HandleErrors(err))\r\n                }\r\n                else {\r\n                    if(isFromExamCreation){\r\n                        dispatch(saveAQuestion([addedQuestion], groupId))\r\n                    }\r\n                    showSuccessMsg(\"Request done successfully\")\r\n                    history.goBack()\r\n                }\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return <div className=\"row justify-content-center text-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            <CardComponent title={!isEditMode ? 'Add Question' : 'Edit Question'}>\r\n                <div className='p-4'>\r\n                    {questionTypes && questionTypeSelectionMenuMarkup}\r\n\r\n                    {!questionType &&\r\n                        <div className='d-flex flex-row justify-content-center align-items-center mt-5'>\r\n                            <ExclamationCircleOutlined size={36} style={{ color: Colors.danger, marginInlineEnd: '.5rem' }} />\r\n                            <h6 className='text-danger m-0'>Please Choose Question Type</h6>\r\n                        </div>\r\n                    }\r\n\r\n                    {questionType === QuestionTypes.MCQ &&\r\n                        <div>\r\n                            <MCQ\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.MCQ ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === QuestionTypes.ESSAY &&\r\n                        <div>\r\n                            <Essay\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.ESSAY ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === QuestionTypes.FORMULA &&\r\n                        <div>\r\n                            <Formula\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.FORMULA ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </CardComponent>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default AddQuestionScreen;\r\n","import React from 'react'\r\nimport { Button, Card, CardContent, CardHeader, colors, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\r\nimport { QuestionTypes } from '../../constants/QuestionTypes';\r\n\r\nconst McqAnswer = ({\r\n    questionText,\r\n    choices,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n    const submitHandler = (values) => {\r\n        console.log(values)\r\n    }\r\n    const correctAnswer = choices?.find(item => item.isCorrect)\r\n    const formatedAnswer = (answer) => {\r\n        return {\r\n            id: answer?.id,\r\n            displayText: (answer?.option?.value || answer?.value)\r\n        }\r\n    }\r\n\r\n    const isCorrectStudentAnswer = questionMark === studentMark\r\n    return (\r\n        <BorderdQuestionController\r\n            hasNoDelete\r\n            questionType={QuestionTypes.MCQ}\r\n        >\r\n            <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n                {studentAnswer ?\r\n                    <CardHeader\r\n                        action={\r\n                            !isMarked ?\r\n                                <div>\r\n                                    <IconButton onClick={markAsWrong} size='large'>\r\n                                        <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={markAsRight} size='large'>\r\n                                        <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                    </IconButton>\r\n                                </div>\r\n                                :\r\n                                <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                    <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                        {studentMark}\r\n                                    </Typography>\r\n                                    <Typography variant='h5'>\r\n                                        {`/${questionMark}`}\r\n                                    </Typography>\r\n                                </div>\r\n                        }\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <CardContent>\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                        {questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent className=''>\r\n                    <form onSubmit={submitHandler}>\r\n                        <FormControl>\r\n                            <RadioGroup\r\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                defaultValue={formatedAnswer(studentAnswer)?.id || formatedAnswer(correctAnswer)?.id}\r\n                                name=\"radio-buttons-group\"\r\n                            >\r\n                                {choices?.map(choice => (\r\n                                    formatedAnswer(choice).id === formatedAnswer(correctAnswer).id ?\r\n                                        <div key={choice.id} className='d-flex align-items-center py-3 text-success' >\r\n                                            <FormControlLabel\r\n                                                key={formatedAnswer(choice).id}\r\n                                                value={formatedAnswer(choice).id}\r\n                                                disabled\r\n                                                control={<Radio />}\r\n                                                label={formatedAnswer(choice).displayText}\r\n                                            />\r\n                                            <CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                                        </div>\r\n                                        :\r\n                                        <div key={choice.id} className='d-flex align-items-center py-3 text-danger' >\r\n                                            <FormControlLabel\r\n                                                key={formatedAnswer(choice).id}\r\n                                                disabled\r\n                                                value={formatedAnswer(choice).id}\r\n                                                control={<Radio />}\r\n                                                label={formatedAnswer(choice).displayText}\r\n                                            />\r\n                                            {(!studentAnswer || (formatedAnswer(studentAnswer).id === formatedAnswer(choice).id)) ?\r\n                                                <CancelOutlinedIcon fontSize='large' color='error' />\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                        </div>\r\n                                ))\r\n                                }\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </form>\r\n                </CardContent>\r\n                {isMarked ?\r\n                    <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '18%' }}>\r\n                        {(isCorrectStudentAnswer) ?\r\n                            <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                            :\r\n                            <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </BorderdQuestionController>\r\n    )\r\n}\r\n\r\nexport default McqAnswer","import React from 'react'\r\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\r\nimport { QuestionTypes } from '../../constants/QuestionTypes';\r\n\r\nconst EssayAnswer = ({\r\n    questionText,\r\n    correctAnswer,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n\r\n    const isCorrectStudentAnswer = questionMark === studentMark\r\n    return (\r\n        <BorderdQuestionController\r\n            hasNoDelete\r\n            questionType={QuestionTypes.ESSAY}\r\n        >\r\n            <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n                {studentAnswer ?\r\n                    <CardHeader\r\n                        action={\r\n                            !isMarked ?\r\n                                <div>\r\n                                    <IconButton onClick={markAsWrong} size='large'>\r\n                                        <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={markAsRight} size='large'>\r\n                                        <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                    </IconButton>\r\n                                </div>\r\n                                :\r\n                                <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                    <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                        {studentMark}\r\n                                    </Typography>\r\n                                    <Typography variant='h5'>\r\n                                        {`/${questionMark}`}\r\n                                    </Typography>\r\n                                </div>\r\n                        }\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <CardContent>\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                        {questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* Essay Content */}\r\n                <CardContent className=''>\r\n                    {studentAnswer ?\r\n                        <Typography sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Student Answer:</Typography>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Typography className={studentAnswer ? '' : 'm-4'} variant={studentAnswer ? '' : 'h5'}>\r\n                        {studentAnswer ? studentAnswer?.value : correctAnswer?.value}\r\n                        {!studentAnswer ?\r\n                            < CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                            :\r\n                            null\r\n                        }\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* MODEL ANSWER */}\r\n                {studentAnswer ?\r\n                    <CardContent className=''>\r\n                        <Typography color='green' sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Model Answer:</Typography>\r\n                        <Typography color='green'>{correctAnswer?.value}</Typography>\r\n                    </CardContent>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {isMarked ?\r\n                    <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '25%' }}>\r\n                        {(isCorrectStudentAnswer) ?\r\n                            <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                            :\r\n                            <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n            </Card>\r\n        </BorderdQuestionController>\r\n    )\r\n}\r\n\r\nexport default EssayAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\n\nconst ShortAnswer = ({\n    questionText,\n    correctAnswer,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark\n}) => {\n    const isCorrectStudentAnswer = questionMark === studentMark\n\n    return (\n        <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\n            {studentAnswer ?\n                <CardHeader\n                    action={\n                        !isMarked ?\n                            <div>\n                                <IconButton onClick={markAsWrong} size='large'>\n                                    <CancelOutlinedIcon fontSize='large' color=\"error\" />\n                                </IconButton>\n                                <IconButton onClick={markAsRight} size='large'>\n                                    <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\n                                </IconButton>\n                            </div>\n                            :\n                            <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\n                                <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\n                                    {studentMark}\n                                </Typography>\n                                <Typography variant='h5'>\n                                    {`/${questionMark}`}\n                                </Typography>\n                            </div>\n                    }\n                />\n                :\n                null\n            }\n\n            <CardContent>\n                {/* Question Text */}\n                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\n                    {questionText}\n                </Typography>\n            </CardContent>\n\n            {/* Essay Content */}\n            <CardContent className=''>\n                {studentAnswer ?\n                    <Typography sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Student Answer:</Typography>\n                    :\n                    null\n                }\n                <Typography className={studentAnswer ? '' : 'm-4'} variant={studentAnswer ? '' : 'h5'}>\n                    {studentAnswer ? studentAnswer?.value : correctAnswer}\n                    {!studentAnswer ?\n                        < CheckCircleOutlineIcon fontSize='large' color='success' />\n                        :\n                        null\n                    }\n                </Typography>\n            </CardContent>\n\n            {/* MODEL ANSWER */}\n            {studentAnswer ?\n                <CardContent className=''>\n                    <Typography color='green' sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Model Answer:</Typography>\n                    <Typography color='green'>{correctAnswer}</Typography>\n                </CardContent>\n                :\n                null\n            }\n\n            {isMarked ?\n                <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '25%' }}>\n                    {(isCorrectStudentAnswer) ?\n                        <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\n                        :\n                        <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\n                    }\n                </div>\n                :\n                null\n            }\n\n        </Card>\n    )\n}\n\nexport default ShortAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport ShortAnswer from './ShortAnswer';\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst FormulaAnswer = ({\n    formula_questions,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark,\n    teacherMode,\n    questionHeader\n}) => {\n\n    return (\n        <BorderdQuestionController\n            questionTitle={questionHeader}\n            questionType={QuestionTypes.FORMULA}\n            hasNoDelete\n        >\n            {formula_questions?.map(question => (\n                <ShortAnswer\n                    questionText={question?.formulaText}\n                    correctAnswer={question?.value}\n                    studentAnswer={studentAnswer}\n                    markAsRight={markAsRight}\n                    markAsWrong={markAsWrong}\n                    isMarked={isMarked}\n                    questionMark={questionMark}\n                    studentMark={studentMark}\n                />\n            ))\n            }\n        </BorderdQuestionController>\n    )\n}\n\nexport default FormulaAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport ShortAnswer from './ShortAnswer';\nimport BorderdGroupQuestion from '../QuestionComponents/BorderdGroupQuestion';\nimport FormulaAnswer from './FormulaAnswer';\nimport EssayAnswer from './EssayAnswer';\nimport McqAnswer from './McqAnswer';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst GroupAnswer = ({\n    questions,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark,\n    teacherMode,\n    questionHeader\n}) => {\n    const specificQuestionMark = questionMark / (questions?.length)\n    return (\n        <div className=\"shadow\">\n            <BorderdGroupQuestion\n                hasNoDelete\n                questionTitle={questionHeader}\n                questionsMarkup={\n                    questions?.map(subQuestion => {\n                        if (subQuestion?.type === QuestionTypes.MCQ) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <McqAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        questionText={subQuestion?.questionText}\n                                        choices={subQuestion?.options}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                    />\n                                </div>)\n                        }\n                        else if (subQuestion?.type === QuestionTypes.ESSAY) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <EssayAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        questionText={subQuestion?.questionText}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                        correctAnswer={subQuestion?.options[0]}\n                                    />\n                                </div>)\n                        }\n                        else if (subQuestion?.type === QuestionTypes.FORMULA) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <FormulaAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        formula_questions={subQuestion?.questions}\n                                        teacherMode\n                                        questionHeader={subQuestion?.questionText}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                        correctAnswer={subQuestion?.formula_questions?.value}\n                                    />\n                                </div>)\n                        }\n                    })\n                }\n            />\n        </div>\n    )\n}\n\nexport default GroupAnswer","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer';\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport FormulaAnswer from '../../../Components/AnsweredQuestion/FormulaAnswer';\r\nimport GroupAnswer from '../../../Components/AnsweredQuestion/GroupAnswer';\r\n\r\nconst QuestionViewScreen = () => {\r\n    const { questionId } = useParams()\r\n\r\n    const [question, setQuestion] = useState(null)\r\n    useEffect(() => {\r\n        QuestionServices.getQuestionDetails(questionId)\r\n            .then(res => {\r\n                console.log(res?.question)\r\n                // console.log(res?.question)\r\n                setQuestion(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [questionId])\r\n\r\n    let QuestionMarkup = () => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n            return (\r\n                <EssayAnswer questionText={question?.questionText} correctAnswer={question?.options[0]} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            return (\r\n                <McqAnswer questionText={question?.questionText} choices={question?.options} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.FORMULA) {\r\n            return (\r\n                <FormulaAnswer formula_questions={question?.formula_questions} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.GROUP) {\r\n            return (\r\n                <GroupAnswer questions={question?.questions} teacherMode questionHeader={question?.questionText} />\r\n            )\r\n        }\r\n\r\n    }\r\n    return <div className=\"row justify-content-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            {QuestionMarkup()}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default QuestionViewScreen;\r\n","import _axios from \"../axios-instance\";\n\nexport class MarkExamServices {\n    static getAllStudentsAnswers(examId) {\n        return _axios.get(`exams/${examId}/all-answers`)\n    }\n\n    static getSpecificStudentAnswers(examId, studentId) {\n        return _axios.get(`exams/${examId}/all-answers/answer`, {\n            params: {\n                student_id: studentId\n            }\n        })\n    }\n\n    static manualMark({ studentId, examId, questionId, questionMark }) {\n        return _axios.post(`exams/manual`, { studentId, examId, questionId, questionMark })\n    }\n\n    static markAllAutomatic(examId) {\n        return _axios.post(`exams/mark/${examId}`)\n    }\n\n    static markSpecificStudentAutomatic(examId, studentId) {\n        return _axios.post(`exams/mark/${examId}/${studentId}`)\n    }\n\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport DesktopAccessDisabledIcon from '@mui/icons-material/DesktopAccessDisabled';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport SupervisedUserCircleIcon from '@mui/icons-material/SupervisedUserCircle';\r\nimport PhotoCameraFrontIcon from '@mui/icons-material/PhotoCameraFront';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\nimport FormulaAnswer from '../../../../Components/AnsweredQuestion/FormulaAnswer'\r\nimport GroupAnswer from '../../../../Components/AnsweredQuestion/GroupAnswer'\r\n\r\n\r\n\r\n\r\nconst AntiCheatingTimeline = ({ examConfig }) => {\r\n    const isRandom = examConfig?.questionsRandomOrder\r\n    const isDisableSwitch = examConfig?.disableSwitchBrowser\r\n    const isplagiarism = examConfig?.plagiarismCheck\r\n    const isFaceDetection = examConfig?.faceDetection\r\n    const isFaceVerify = examConfig?.faceRecognition\r\n    return (\r\n        <Timeline position=\"alternate\">\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                >\r\n                    Level1\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isRandom ? \"primary\" : \"error\"}>\r\n                        <ShuffleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Random Order\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                >\r\n                    Level2\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isDisableSwitch ? \"primary\" : \"error\"}>\r\n                        <DesktopAccessDisabledIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Disable Switch Browser\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level3\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isplagiarism ? \"primary\" : \"error\"}>\r\n                        <FactCheckIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Plagiarism Check\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level4\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isFaceDetection ? \"primary\" : \"error\"}>\r\n                        <SupervisedUserCircleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Detection\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level5\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineDot color={isFaceVerify ? \"primary\" : \"error\"}>\r\n                        <PhotoCameraFrontIcon />\r\n                    </TimelineDot>\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Recognition\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const ExamOverview = ({ questions, examConfigs }) => {\r\n    const { examId } = useParams()\r\n    return (\r\n        <>\r\n            <CardComponent title={'Anti Cheating Levels'}>\r\n                <AntiCheatingTimeline examConfig={examConfigs} />\r\n            </CardComponent>\r\n            <br /><br />\r\n            <CardComponent title={'Questions'}>\r\n                <div className='p-5'>\r\n                    {questions?.map((item) => {\r\n                        if (item?.type === QuestionTypes.MCQ) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <McqAnswer questionText={item?.questionText} choices={item?.options} />\r\n                                </div>)\r\n                        }\r\n                        else if (item?.type === QuestionTypes.ESSAY) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <EssayAnswer questionText={item?.questionText} correctAnswer={item?.options[0]} />\r\n                                </div>)\r\n                        }\r\n                        else if (item?.type === QuestionTypes.FORMULA) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <FormulaAnswer formula_questions={item?.questions} teacherMode questionHeader={item?.questionText} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (item?.type === QuestionTypes.GROUP) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'> \r\n                                    <GroupAnswer questions={item?.questions} teacherMode questionHeader={item?.questionText} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return null\r\n                    }\r\n                    )}\r\n                </div>\r\n            </CardComponent>\r\n        </>\r\n    )\r\n}","const useImageResolver = () => {\r\n    return (imageName) => {\r\n        if (imageName?.includes(\"http\")) return imageName\r\n        return 'https://smart-exam.s3.eu-central-1.amazonaws.com/uploads/' + imageName\r\n    }\r\n}\r\n\r\nexport default useImageResolver\r\n","import React from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Avatar, Button, colors, IconButton, Paper } from '@mui/material';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NoContentComponent from '../../../../Components/NoContentComponent/NoContentComponent';\r\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport { useParams } from 'react-router-dom';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\n\r\nconst StudentsList = ({ students, getStudentExams = () => { }, examConfigs }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const params = useParams()\r\n    const goToThisStudent = (id) => {\r\n        history.push(`${location.pathname}/${id}`, { examConfigs })\r\n    }\r\n\r\n    const markAllHandler = () => {\r\n        MarkExamServices.markAllAutomatic(params?.examId)\r\n            .then(res => {\r\n                showSuccessMsg(\"Mark All Student Successfully!\")\r\n                getStudentExams()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={markAllHandler} color='success' variant=\"contained\">Mark All <CheckOutlinedIcon /></Button>\r\n            </div>\r\n            <Paper className='mt-3' elevation={3}>\r\n                <List>\r\n                    {students?.map(item => (\r\n                        <ListItem key={`${item.student_id}_${item.attempt}`} onClick={() => goToThisStudent(item.student_id)}>\r\n                            <ListItemButton>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt={item.name} src={imageResolver(item?.image)} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primaryTypographyProps={item?.isMarked ? { color: Colors.success, fontWeight: 'bolder' } : {}}\r\n                                    primary={`${item.name}`}\r\n                                    secondary={item?.isMarked && `Mark: ${item.mark}`}\r\n                                />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    ))\r\n                    }\r\n                    {!students?.length ?\r\n                        <NoContentComponent text={\"No submittion yet\"} />\r\n                        :\r\n                        null\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsList","export const CheatTypes = {\r\n    FACE_DETECTION: \"FACE_DETECTION\",\r\n    FACE_RECOGNITION : \"FACE_RECOGNITION\",\r\n    SWITCH_BROWSER:\"SWITCH_BROWSER\"\r\n}\r\n\r\n\r\n","import { CheatTypes } from \"../../constants/CheatTypes\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class CheatServices {\r\n\r\n    static sentSwitchBrowserCheatAttempt(examId) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            type: CheatTypes.SWITCH_BROWSER\r\n        })\r\n    }\r\n    static sentFaceDetectionCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_DETECTION\r\n        })\r\n    }\r\n    static sentFaceRecognationCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_RECOGNITION\r\n        })\r\n    }\r\n\r\n\r\n\r\n    static getCheaters(examId) {\r\n        return _axios.get(`/exams/${examId}/cheaters`)\r\n    }\r\n\r\n    static performStudentDecrement(ActionData) {\r\n        return _axios.post(`/cheater/action`, ActionData)\r\n    }\r\n}","export const CheatActions = {\r\n    DISMISS: \"DISMISS\",\r\n    MINUS: \"MINUS\",\r\n    ZERO: \"ZERO\"\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/mofty.9e1fe332.jpg\";","export default __webpack_public_path__ + \"static/media/mofty2.809a9b07.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, Typography, TextField, Button } from '@mui/material'\r\n\r\nimport { CheatServices } from '../../../../apis/Services/CheatService';\r\n\r\nimport Mofty_Image from '../../../../assets/images/mofty.jpg';\r\nimport Mofty_Image_2 from '../../../../assets/images/mofty2.jpg';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport { CheatActions } from '../../../../constants/CheatActions';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { CheatTypes } from '../../../../constants/CheatTypes';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\n\r\n\r\nconst ExamReport = () => {\r\n    const [cheaters, setCheaters] = useState([]);\r\n    const [decrementDegree, setDecrementDegree] = useState(0);\r\n    const params = useParams()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        CheatServices.getCheaters(params?.examId)\r\n            .then((response) => {\r\n                console.log(\"response\")\r\n                console.log(response)\r\n                setCheaters(response?.details)\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n\r\n            })\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const actionHandler = (cheaterDetails, action) => {\r\n\r\n        // {\r\n        //     \"cheatingDetailId\": 1,\r\n        //     \"action\": \"string\",\r\n        //     \"minusMarks\": 3.5,\r\n        //     \"type\": \"string\"\r\n        // }\r\n\r\n        // Real TODO DATA\r\n\r\n        if (action === CheatActions.DISMISS || action === CheatActions.ZERO) {\r\n            setDecrementDegree(0);\r\n\r\n        }\r\n        const ActionData = {\r\n\r\n            \"cheatingDetailId\": cheaterDetails?.id,\r\n            \"action\": action,\r\n            \"minusMarks\": decrementDegree,\r\n            \"type\": cheaterDetails?.type\r\n\r\n        }\r\n\r\n        // const ActionData = {\r\n\r\n        //     \"cheatingDetailId\": 85,\r\n        //     \"action\": action,\r\n        //     \"minusMarks\": decrementDegree,\r\n        //     \"type\": \"SWITCH_BROWSER\"\r\n\r\n        // }\r\n        CheatServices.performStudentDecrement(ActionData)\r\n            .then((response) => {\r\n                showSuccessMsg(\"ِAction Performed Successfully\")\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n\r\n\r\n            })\r\n\r\n        return\r\n    }\r\n\r\n    let imageResolver = useImageResolver()\r\n\r\n\r\n\r\n    // let Cheaters = cheaters.map((cheater, index) => {\r\n\r\n    let CheatersMarkup = () => {\r\n\r\n\r\n\r\n        const uniqueCheaters = [...new Map(cheaters.map(item => [item['student_id'], item])).values()];\r\n\r\n        uniqueCheaters.forEach(unique_cheater => {\r\n            let typeCounter = 0;\r\n            cheaters.forEach(c => {\r\n                if (c?.type === unique_cheater?.type) {\r\n                    typeCounter++;\r\n                }\r\n\r\n            });\r\n            unique_cheater['typeCounter'] = typeCounter;\r\n        });\r\n\r\n\r\n        return (\r\n            uniqueCheaters?.map((cheater_details) => {\r\n                return (\r\n                    <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n\r\n                        {/* <Stack spacing={2}/> */}\r\n                        <div className=\"d-flex col-8 justify-content-start\">\r\n                            <div>\r\n                                <img\r\n                                    style={{ width: 200 }}\r\n                                    // src={`${Mofty_Image}`}\r\n                                    src={`${imageResolver(cheater_details?.profileImage)}`}\r\n                                    // src={`${cheaters[0]?.image}`}\r\n                                    alt={'User'}\r\n                                    loading=\"lazy\"\r\n                                />\r\n\r\n                            </div>\r\n                            <div>\r\n\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Name: {cheater_details?.studentName}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Type: {cheater_details?.type} {cheater_details?.type === CheatTypes.SWITCH_BROWSER ? '(' + cheater_details?.typeCounter + ' times)' : ''}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    {cheater_details?.type !== CheatTypes.SWITCH_BROWSER ? 'Original Profile Photo ' : ''}\r\n                                </Typography>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='m-4' />\r\n                        {cheater_details?.type !== CheatTypes.SWITCH_BROWSER &&\r\n                            <div className=\"d-flex col-8 align-items-center\">\r\n                                <div>\r\n                                    <img\r\n                                        style={{ width: 200 }}\r\n                                        src={`${imageResolver(cheater_details?.image)}`}\r\n\r\n                                        // src={`${Mofty_Image_2}`}\r\n                                        // src={`${cheaters[0]?.image}`}\r\n                                        alt={'no_photo'}\r\n                                        loading=\"lazy\"\r\n                                    />\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                        Suspect image (from his webcam)\r\n                                    </Typography>\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>}\r\n\r\n                        <hr />\r\n                        {/* Action Line */}\r\n\r\n                        <Typography className=' text-danger font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                            Perform Action To This Student (Be Careful..!)\r\n                        </Typography>\r\n                        <Typography className=' text-danger font-weight-bold' variant='h6' >\r\n                            You can either dismiss this issue, decrease his mark, or Revoke the exam (Mark As Zero)\r\n                        </Typography>\r\n                        <div className='m-5' />\r\n\r\n                        <div className=\"d-flex m-3 justify-content-between\">\r\n\r\n                            <Button variant=\"contained\" color=\"success\" onClick={() => { actionHandler(cheater_details, CheatActions.DISMISS) }}>\r\n                                Dismiss This Issue\r\n                            </Button>\r\n\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <TextField\r\n                                    error\r\n                                    id=\"outlined-error\"\r\n                                    label=\"Decrement Value. eg: 6\"\r\n                                    onChange={(event) => setDecrementDegree(event.target.value)}\r\n                                />\r\n                                <div className='m-2' />\r\n\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.MINUS) }}>\r\n                                    Confirm Decrease\r\n                                </Button>\r\n\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.ZERO) }}>\r\n                                Revoke Exam (Put Zero)\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Card >\r\n\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                Suspicious Cheaters\r\n            </Typography>\r\n            <hr />\r\n\r\n            {\r\n\r\n                CheatersMarkup()\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExamReport;\r\n","import { Box, Tabs, Tab } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../../apis/Services/ExamService';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport { ExamOverview } from './ExamOverview';\r\nimport StudentsList from './StudentsList';\r\nimport ExamReport from './ExamReport'\r\nconst ExamView = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [selectedTab, setSelectedTab] = React.useState('Overview');\r\n    /**\r\n     * Auto Select tab based on query params\r\n     */\r\n    useEffect(() => {\r\n        let selectedTab = new URLSearchParams(location.search).get('selectedTab')\r\n        setSelectedTab(selectedTab || 'Overview')\r\n    }, [location.search?.selectedTab])\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n        history.push({\r\n            pathname: location.pathname,\r\n            search: `?selectedTab=${newValue}`\r\n        })\r\n    };\r\n\r\n    const params = useParams()\r\n    const [questions, setQuestions] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamQuestions(params.examId)\r\n            .then(res => {\r\n                setQuestions(res.questions)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const [studentAnswers, setStudentAnswers] = useState(null)\r\n    const getStudentExams = () => {\r\n        MarkExamServices.getAllStudentsAnswers(params.examId)\r\n            .then(res => {\r\n                console.log(res.solvedExams)\r\n                setStudentAnswers(res.solvedExams)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getStudentExams()\r\n    }, [])\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                console.log(res.configuration)\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mt-5\">\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <Tabs\r\n                            value={selectedTab}\r\n                            onChange={handleChange}\r\n                            textColor=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                            aria-label=\"secondary tabs example\"\r\n                        >\r\n                            <Tab value=\"Overview\" label=\"Overview\" />\r\n                            <Tab value=\"StudentAnswers\" label=\"Student Answers\" />\r\n                            <Tab value=\"ExamReport\" label=\"Exam Report\" />\r\n                        </Tabs>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 mt-5\">\r\n                    {selectedTab === 'Overview' &&\r\n                        <ExamOverview questions={questions} examConfigs={examConfigs} />\r\n                    }\r\n                    {selectedTab === 'StudentAnswers' &&\r\n                        <StudentsList\r\n                            students={studentAnswers}\r\n                            getStudentExams={getStudentExams}\r\n                            examConfigs={examConfigs}\r\n                        />\r\n                    }\r\n                    {selectedTab === 'ExamReport' &&\r\n                        \r\n                       <ExamReport></ExamReport>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamView","import { Button, Chip, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport useImageResolver from '../../../../hooks/useImageResolver'\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport FormulaAnswer from '../../../../Components/AnsweredQuestion/FormulaAnswer'\r\nimport GroupAnswer from '../../../../Components/AnsweredQuestion/GroupAnswer'\r\n\r\nconst StudentCard = ({ name, isVerified, numberOfFaces, image, markAutoFun, examConfigs }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-6 col-12\">\r\n                <div className=\"d-flex\">\r\n                    <img\r\n                        className='shadow-sm'\r\n                        src={imageResolver(image)}\r\n                        style={{ height: 200, width: 200, objectFit: 'cover', borderRadius: 15 }}\r\n                        alt=\"student Photo\"\r\n                    />\r\n                    <div className='ms-3'>\r\n                        <Typography variant=\"h4\" fontWeight={'bold'} color={'primary'}>{name}</Typography>\r\n                        {examConfigs?.faceDetection ?\r\n                            <Chip icon={<PersonIcon />} color={(numberOfFaces === 1) ? 'success' : 'error'} label={`${numberOfFaces} face detected`} className=\"me-2\" />\r\n                            :\r\n                            null\r\n                        }\r\n                        {examConfigs?.faceRecognition ?\r\n                            <Chip icon={<VerifiedIcon />} color={isVerified ? 'success' : 'error'} label={isVerified ? \"Verified\" : \"Unverified\"} />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-md-6 col-12 mt-md-0 mt-5 text-md-end text-center'>\r\n                <Button onClick={markAutoFun} variant=\"contained\" color=\"success\">\r\n                    Mark Automatic\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StudentSolvedExam = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const examConfigs = location?.state?.examConfigs\r\n\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    const autoMarkThisStudentHandler = () => {\r\n        MarkExamServices.markSpecificStudentAutomatic(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                showSuccessMsg(`Mark ${studentExamResult.studentName}'s exam successfully!`)\r\n                history.goBack()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsRightHandler = (questionId, mark) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: mark\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsWrongHandler = (questionId) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: 0\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const getStudentAnswers = () => {\r\n        MarkExamServices.getSpecificStudentAnswers(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                setStudentExamResult(res)\r\n                console.log(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getStudentAnswers()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <StudentCard\r\n                name={studentExamResult?.studentName}\r\n                isVerified={studentExamResult?.isVerified}\r\n                numberOfFaces={studentExamResult?.numberOfFaces}\r\n                image={studentExamResult?.image}\r\n                markAutoFun={autoMarkThisStudentHandler}\r\n                examConfigs={examConfigs}\r\n            />\r\n            <hr />\r\n            <div className=\"row mt-5 justify-content-center\">\r\n                <div className=\"col-12\">\r\n                    <>\r\n                        {studentExamResult?.solution?.map(item =>\r\n                            <div key={item.id} className='my-2'>\r\n                                {(item?.type === QuestionTypes.MCQ) ?\r\n                                    <McqAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        choices={item?.options}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.ESSAY) ?\r\n                                    <EssayAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                        correctAnswer={item?.options[0]}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.FORMULA) ?\r\n                                    <FormulaAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        formula_questions={[item?.formula_questions]}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                        correctAnswer={item?.formula_questions?.value}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.GROUP) ?\r\n                                    <GroupAnswer\r\n                                        questions={item?.questions}\r\n                                        markAsRight={markAsRightHandler}\r\n                                        markAsWrong={markAsWrongHandler}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                        )}\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentSolvedExam","import AddExam from '../Views/Instructor/Exams/AddExam/AddExam'\nimport AddExamQuestions from '../Views/Instructor/Exams/AddExamQuestions/AddExamQuestions'\nimport Exams from '../Views/Instructor/Exams/Exams'\nimport Questions from '../Views/Instructor/Questions/Questions'\nimport SetExamOptions from '../Views/Instructor/Exams/SetExamOptions/SetExamOptions'\nimport AddQuestionScreen from '../Views/Instructor/Questions/AddQuestionScreen'\nimport QuestionViewScreen from '../Views/Instructor/Questions/QuestionViewScreen'\nimport ExamView from '../Views/Instructor/Exams/ExamView'\nimport StudentSolvedExam from '../Views/Instructor/Exams/ExamView/StudentSolvedExam'\nimport AddQuestionGroup from '../Views/Instructor/Exams/AddQuestionGroup/AddQuestionGroup'\n\nconst InstructorRoutes =\n    [\n        { path: '/exams', component: Exams, exact: true },\n        \n        { path: '/exams/add', component: AddExam, exact: true },\n        { path: '/exams/edit', component: AddExam, exact: true },\n        { path: '/exams/:examId/set-options', component: SetExamOptions, exact: true },\n        { path: '/exams/:examId/add-questions', component: AddExamQuestions, exact: true },\n        \n        { path: '/questions', component: Questions, exact: true },\n        { path: '/questions/add', component: AddQuestionScreen, exact: true },\n        { path: '/questions/add-group', component: AddQuestionGroup, exact: true },\n        { path: '/questions/edit', component: AddQuestionScreen, exact: true },\n        { path: '/questions/:questionId', component: QuestionViewScreen, exact: true },\n\n        { path: '/exams/:examId', component: ExamView, exact: true },\n        { path: '/exams/:examId/:studentId', component: StudentSolvedExam, exact: true },\n    ]\nexport default InstructorRoutes\n","import React, { useState } from 'react';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport { TextField } from '@mui/material';\r\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu';\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { addNewGroup } from '../../../../redux/actions/ExamAction';\r\nconst AddQuestionGroup = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const [groupName, setGroupName] = useState('');\r\n    const [groupNameCreated, setGroupNameCreated] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const AddQuestionHandler = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const submitGroupHandler = () => {\r\n        console.log(groupName);\r\n        return\r\n    }\r\n\r\n    const createGroupHandler = () => {\r\n\r\n        setGroupNameCreated(true)\r\n        let group = {\r\n            groupName: groupName,\r\n            // examId: location?.state?.examId,\r\n            questions: []\r\n        }\r\n        dispatch(addNewGroup(group))\r\n        return\r\n    }\r\n\r\n    const goCreateNewQuestion = () => \r\n    {\r\n        history.push('/questions/add', { fromExamCreation: false, isFromGroup: true, groupName: groupName })\r\n    }\r\n    const selectQuestionFromQBank = () => \r\n    {\r\n        history.push('/questions', { canSelectQuestionsForExam: true, isFromGroup: true, groupName: groupName })\r\n    }\r\n\r\n    const methods = [\r\n        {\r\n            displayName: 'Create a new question',\r\n            function: goCreateNewQuestion\r\n        }\r\n        ,\r\n        {\r\n            displayName: 'Select from question bank',\r\n            function: selectQuestionFromQBank\r\n        }\r\n    ]\r\n\r\n    let askForGroupName = () => {\r\n\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title=\"New Group\">\r\n\r\n                        <div className=' m-5 '>\r\n                            <TextField\r\n                                fullWidth id=\"outlined-basic\"\r\n                                onChange={(e) => setGroupName(e.target.value)}\r\n                                required\r\n                                label=\"Group Name\" variant=\"outlined\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className='m-5'>\r\n                            <button onClick={createGroupHandler} className=\"btn btn-primary mx-auto mt-4\">Create</button>\r\n                        </div>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let mainContent = () => {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={groupName}>\r\n\r\n                        <div className='d-flex justify-content-end m-5'>\r\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\r\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                            </button>\r\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\r\n                        </div>\r\n\r\n                        <div className='m-5'>\r\n                            <button onClick={submitGroupHandler} className=\"btn btn-primary mx-auto mt-4\">Submit Group</button>\r\n                        </div>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {groupNameCreated ? mainContent() : askForGroupName()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddQuestionGroup;\r\n","import Home from '../Views/Home/Home'\n\nconst MainRoutes =\n    [\n        { path: \"/\", component: Home, exact: true },\n    ]\n\nexport default MainRoutes\n","import React from 'react'\nimport './Home.css'\n\nconst Home = () => {\n    return (\n        \n        <div className='main' style={{minHeight:\"80vh\"}}>\n            <h1>Hiii</h1>\n            {/* <Signupinquiry></Signupinquiry> */}\n            {/* <Signup></Signup> */}\n            {/* <Login></Login> */}\n        </div>\n    )\n}\n\nexport default Home\n","import Webcam from \"react-webcam\";\nimport { useRef, useCallback } from \"react\";\nimport Button from '@mui/material/Button';\n\n// const videoConstraints = {\n//     width: 1280,\n//     height: 720,\n//     facingMode: \"user\"\n// };\n\nconst TakePhoto = (props) => {\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n\n\n            const imageSrc = webcamRef.current.getScreenshot();\n            props.captured(imageSrc)\n            props.clicked()\n\n        },\n\n\n\n\n\n        [webcamRef,props]\n    );\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-center\">\n                <Webcam\n                    audio={false}\n                    // height={720}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                // width={1280}\n                // videoConstraints={videoConstraints}\n                />\n\n            </div>\n            {/* {imgSrc && (\n                <img src={imgSrc} alt=\"555\" />\n\n            )} */}\n            <div className=\"d-flex justify-content-center\">\n                <Button\n                    className='btn m-2 p-2 text-white'\n                    size=\"small\"\n                    variant=\"contained\"\n                    color='success'\n                    onClick={capture}\n                >\n                    Capture\n                </Button>\n\n            </div>\n        </div>\n    );\n};\nexport default TakePhoto;\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport TakePhoto from '../TakePhoto/TakePhoto';\r\nimport { useState } from 'react';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport moment from 'moment';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../../Components/Loader/Loader';\r\n\r\n\r\nconst Examinstructions = (props) => {\r\n    const exam = props.location.state.exam\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState(false);\r\n    const [noOfFaces, setNoOfFaces] = useState(0);\r\n    const [photoVerified, setPhotoVerified] = useState(false);\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        console.log(examId)\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                console.log(res.configuration)\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const [startDate, setstartDate] = useState(null)\r\n    useEffect(() => {\r\n        console.log(examId)\r\n        ExamServices.getExamInfo(examId)\r\n            .then(res => {\r\n                setstartDate(res.exam.startAt)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToExamHandler = (event) => {\r\n        // this code pevents from going to another page\r\n        event.preventDefault()\r\n\r\n        let startExamData = {\r\n            \"startTime\": moment().format('yyyy-MM-DD HH:mm:ss'),\r\n            \"numberOfFaces\": noOfFaces,\r\n            \"isVerified\": photoVerified\r\n        }\r\n        ExamServices.startExam(exam.id, startExamData)\r\n            .then((response) => {\r\n                console.log(\"Starting Exam\")\r\n                console.log(response)\r\n\r\n                props.history.push({\r\n                    pathname: `/exams/${exam.id}/start`,\r\n                    state: { exam: exam }\r\n                })\r\n            }).catch((error) => {\r\n                if (error?.message?.includes(\"You must submit the previous attempt first before starting a new attempt\")) {\r\n                    props.history.push({\r\n                        pathname: `/exams/${exam.id}/start`,\r\n                        state: { exam: exam }\r\n                    })\r\n                    return\r\n                }\r\n                HandleErrors(error)\r\n            })\r\n    }\r\n\r\n    const photoTakenHandler = (img) => {\r\n        setIsLoading(true)\r\n        setIsPhotoTaken(true)\r\n        showSuccessMsg(\"Photo Taken Successfully\")\r\n\r\n        let faceDetectionData = {\r\n            \"image\": img,\r\n            \"examId\": exam.id\r\n        }\r\n        let faceVerificationData = {\r\n            \"image1\": img,\r\n            \"examId\": exam.id\r\n        }\r\n\r\n        ExamServices.applyFaceDetection(faceDetectionData)\r\n            .then((response) => {\r\n                setNoOfFaces(response.numberOfFaces)\r\n                if (response.numberOfFaces !== 1) {\r\n                    return { verified: false }\r\n                }\r\n                return ExamServices.applyFaceVerification(faceVerificationData)\r\n            })\r\n            .then((response) => {\r\n                setPhotoVerified(response.verified)\r\n            })\r\n            .finally(() => { setIsLoading(false) })\r\n        return\r\n    }\r\n\r\n    const mustVerifyFace = (examConfigs?.faceRecognition || examConfigs?.faceDetection)\r\n    const hasStarted = startDate && moment(startDate).isBefore(moment())\r\n    console.log(\"cons\", hasStarted, moment().format('yyyy-MM-DD HH:mm'))\r\n    return ((examConfigs && startDate) ?\r\n        <div>\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Before The Exam'}>\r\n                        <div className=\"m-5 text-start \">\r\n                            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Instructions Title */}\r\n                                    <Typography className='text-danger font-weight-bold' variant=\"h4\" component=\"div\">\r\n                                        Important Instructions\r\n                                        <hr />\r\n                                    </Typography>\r\n                                    <ul>\r\n                                        {mustVerifyFace ?\r\n                                            <li className='text-danger font-weight-bold'>\r\n                                                Verify your identity with a photo before entering the exam.\r\n                                            </li>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        <li>\r\n                                            Don't use internet for getting information.\r\n                                        </li>\r\n                                        <li>\r\n                                            No one else can be in the room with you.\r\n                                        </li>\r\n                                        <li>\r\n                                            Time is limited, so organize your time well with questions.\r\n                                        </li>\r\n                                        <li>\r\n                                            The room must be well-lit and you must be clearly visible.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className='text-center'>\r\n\r\n                                    </div>\r\n                                    <div className='text-center text-success' >\r\n                                        Good Luck with your exam!\r\n                                    </div>\r\n\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-end'>\r\n                                    {!isLoading ?\r\n                                        <>\r\n                                            {mustVerifyFace ?\r\n                                                <Popup\r\n                                                    trigger={\r\n                                                        <Button\r\n                                                            className='btn m-2 p-2 text-white'\r\n                                                            size=\"large\"\r\n                                                            variant=\"contained\"\r\n                                                            color='warning'\r\n                                                        >\r\n                                                            Take Photo\r\n                                                        </Button>\r\n                                                    }\r\n                                                    modal\r\n                                                    lockScroll\r\n                                                    position=\"top center\"\r\n                                                >\r\n                                                    {close => (\r\n                                                        <CardComponent title={'Take a nice photo'}>\r\n                                                            <h4 className=\"d-flex justify-content-center\">\r\n                                                                Make sure the place is well lit!\r\n                                                            </h4>\r\n                                                            <TakePhoto\r\n                                                                captured={photoTakenHandler}\r\n                                                                clicked={close}\r\n                                                            ></TakePhoto>\r\n                                                        </CardComponent>\r\n\r\n                                                    )}\r\n                                                </Popup>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <Button\r\n                                                className='btn m-2 p-2 text-white'\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                color='success'\r\n                                                onClick={goToExamHandler}\r\n                                                disabled={(mustVerifyFace && !isPhotoTaken) || (!hasStarted)}\r\n                                            >\r\n                                                {`Start Exam Now ${!hasStarted ? '(Not Started)' : ''}`}\r\n                                            </Button>\r\n                                        </>\r\n                                        :\r\n                                        <div className='me-4 d-flex flex-column align-items-center'>\r\n                                            <Typography color=\"primary\">Verifing...!</Typography>\r\n                                            <Loader />\r\n                                        </div>\r\n                                    }\r\n                                </CardActions>\r\n                            </Card>\r\n                        </div>\r\n                    </CardComponent>\r\n                </div>\r\n            </div >\r\n        </div>\r\n        :\r\n        <div className='d-flex justify-content-center align-items-center' style={{ height: '70vh' }}>\r\n            <Loader />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Examinstructions);\r\n","import { Card, CardActions, CardContent, Chip, Typography, Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ExamServices } from '../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nconst MyResults = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams({ isMarked: true })\r\n            .then(res => {\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToResultDetails = (examId) => {\r\n        history.push(`${location.pathname}/${examId}`)\r\n    }\r\n\r\n    const isFailed = (studentMark, totalMark) => {\r\n        return studentMark < (totalMark / 2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Marked Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card onClick={() => goToResultDetails(exam.id)} key={exam.id} className='shadow p-3 mb-5 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    <Grid display={'flex'} justifyContent={'space-between'} direction={'row'}>\r\n                                        <Grid>\r\n                                            {/* Exam Title */}\r\n                                            <Typography variant=\"h4\" component=\"div\">\r\n                                                {exam.name}\r\n                                            </Typography>\r\n                                            {exam.isSubmitted &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Submitted'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                            {exam.isMarked &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Marked'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid className={isFailed(exam.mark?.totalMark, exam.totalMark) ? 'text-danger' : 'text-success'} display={'flex'} direction={'row'}>\r\n                                            <Typography variant='h5'>\r\n                                                {exam.mark?.totalMark}\r\n                                            </Typography>\r\n                                            <Typography variant='h5'>\r\n                                                {`/${exam.totalMark}`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Duration:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {exam.duration}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardActions>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MyResults","import DomainUrl from \"../Domain\";\n\nexport const STUDENT_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/students/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/students/me`,\n        method:'GET'\n    }\n};\n\n","import { STUDENT_ENDPOINTS } from \"../Endpoints/StudentEndpoints\";\r\nimport { Network } from \"../Network\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class StudentServices {\r\n    // sign up\r\n    static register(values) {\r\n        return Network.fetch(STUDENT_ENDPOINTS.register.url, {\r\n            body: JSON.stringify(values),\r\n            method: STUDENT_ENDPOINTS.register.method,\r\n        });\r\n    }\r\n\r\n    // get my profile\r\n    static getMyProfile() {\r\n        return Network.fetch(STUDENT_ENDPOINTS.getMyProfile.url, {\r\n            method: STUDENT_ENDPOINTS.getMyProfile.method,\r\n        }, true);\r\n    }\r\n\r\n    static getSpecificExamResults(examId) {\r\n        return _axios.get(`/exams/${examId}/report`)\r\n    }\r\n}","import { Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { StudentServices } from '../../../apis/Services/StudentService'\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer'\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\n\r\nconst ResultDetails = () => {\r\n    const { examId } = useParams()\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        StudentServices.getSpecificExamResults(examId)\r\n            .then(res => {\r\n                console.log(res)\r\n                setStudentExamResult(res.solution)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    {studentExamResult?.map(item =>\r\n                        <div key={item.question_id} className='my-2'>\r\n                            {(item?.question?.type === QuestionTypes.MCQ) ?\r\n                                <McqAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    choices={item?.question?.answers}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                            {(item?.question?.type === QuestionTypes.ESSAY) ?\r\n                                <EssayAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    correctAnswer={item?.question?.answers[0]}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultDetails","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { Chip, colors, Grid } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\n\r\n\r\n\r\n\r\nconst ShowExams = (props) => {\r\n    // const [exam, setExam] = useState(null)\r\n\r\n    const goToInstructionsHandler = (event, exam) => {\r\n        // this code pevents from going to another page\r\n        //event.preventDefault()\r\n\r\n        props.history.push({\r\n            pathname: `/exams/${exam.id}`,\r\n            state: { exam: exam }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get exams\r\n     */\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams()\r\n            .then(res => {\r\n                console.log(\"Published Exams\")\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const getRemainingEndTime = (examEndDate) => {\r\n        let result = moment(examEndDate).diff(moment(), 'hours')\r\n        let remainingMins = moment(examEndDate).diff(moment().add(result, 'hours'), 'minutes')\r\n        if (result > 0 || remainingMins > 0)\r\n            return { hours: result, mins: remainingMins }\r\n        else\r\n            return null\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Your Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card style={{ border: exam.isSubmitted ? `1px solid ${Colors.success}` : '' }} key={exam.id} className='shadow p-2 pb-0 mb-3 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Exam Title */}\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {exam.name}\r\n                                    </Typography>\r\n                                    {exam.isSubmitted &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Submitted'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    {exam.isMarked &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Marked'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'}>Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Typography variant=\"body3\">\r\n                                        <b>Duration:</b> {exam.duration}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        className='btn m-2 p-2 btn-primary text-white'\r\n                                        size=\"small\"\r\n                                        onClick={(e) => goToInstructionsHandler(e, exam)}\r\n                                    >\r\n                                        Go to this Exam\r\n                                    </Button>\r\n                                </CardActions>\r\n                                {getRemainingEndTime(exam.endAt) ?\r\n                                    <CardActions className='d-flex justify-content-center'>\r\n                                        <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                            <Typography fontWeight={'bold'}>Close in:</Typography>\r\n                                            <Typography\r\n                                                className='mx-1'\r\n                                                fontStyle='italic'\r\n                                                color={getRemainingEndTime(exam.endAt).hours > 24 ? Colors.success : Colors.danger}>\r\n                                                {`[${getRemainingEndTime(exam.endAt).hours} h ${getRemainingEndTime(exam.endAt).mins} m]`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardActions>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </Card>\r\n                        ))}\r\n\r\n                        {!exams?.length ?\r\n                            <NoContentComponent text={\"No Exams Right Now\"} />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withRouter(ShowExams);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n\r\n\r\n\r\nconst MCQ = (props) => {\r\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\r\n\r\n    const [chosenOptionID, setChosenOptionID] = useState(null);\r\n    const [chosenAnswer, setChosenAnswer] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setChosenOptionID(props.savedStudentAnswer?.chosenOptionID)\r\n        setChosenAnswer(props.savedStudentAnswer?.chosenAnswer)\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n        setChosenOptionID(parseInt(e.target.id))\r\n        setChosenAnswer(e.target.value)\r\n    }\r\n\r\n    let isCheckedCondition = (ansIndex) => {\r\n        // return chosenOptionID && parseInt(chosenOptionID) === parseInt(props.savedStudentAnswer?.chosenOptionID)\r\n        return parseInt(chosenOptionID) === parseInt(props.answers[ansIndex]?.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isInGroupQuestion) return\r\n\r\n        props?.sentAnswerChanges(\r\n            { chosenOptionID: chosenOptionID, chosenAnswer: chosenAnswer, questionType: QuestionTypes.MCQ },\r\n            props?.questionIndex - 1,\r\n            props?.questionId\r\n        )\r\n    }, [chosenAnswer])\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.questionText}\r\n\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent className=''>\r\n                    <form>\r\n                        {props.answers?.map((item, index) => (\r\n                            <div className=\"form-check m-3\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    checked={isCheckedCondition(index)}\r\n                                    type=\"radio\"\r\n                                    value={item?.value}\r\n                                    id={item?.id}\r\n                                    onChange={onChangeHandler}\r\n                                    name=\"flexRadioDefault\" />\r\n\r\n                                <label className=\"form-check-label\" htmlFor={item?.id}>\r\n                                    {item?.value}\r\n                                </label>\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </form>\r\n                </CardContent>\r\n\r\n                {!isInGroupQuestion ?\r\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n                        <button\r\n                            className='btn m-2 p-auto btn-danger text-white'\r\n                            variant=\"contained\"\r\n                            onClick={props.clickedPrevious}\r\n                            disabled={props.previousButtonDisabled}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n\r\n                        <button\r\n                            className='btn m-2 p-auto btn-primary text-white'\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                props.clickedNext(chosenOptionID, chosenAnswer, QuestionTypes.MCQ)\r\n                                props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\r\n                                setChosenOptionID(null)\r\n                            }}\r\n                        >\r\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                        </button>\r\n\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default MCQ;\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { useState } from 'react';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n// import { connect } from 'react-redux';\r\n// import { saveAnswer } from '../../../../redux/actions/QuestionActions'\r\n\r\nconst Essay = (props) => {\r\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\r\n\r\n\r\n    const [essayAnswer, setEssayAnswer] = useState('');\r\n    const essayChangedHandler = (event) => {\r\n        setEssayAnswer(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setEssayAnswer(props.question?.studentAnswer?.chosenAnswer || '')\r\n        // console.log(props.question?.studentAnswer)\r\n    }, []);\r\n\r\n    const retrieveOldAnswer = () => {\r\n        return essayAnswer\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isInGroupQuestion) return\r\n\r\n        props?.sentAnswerChanges(\r\n            { chosenOptionID: null, chosenAnswer: essayAnswer, questionType: QuestionTypes.ESSAY },\r\n            props?.questionIndex - 1,\r\n            props?.questionId\r\n        )\r\n    }, [essayAnswer])\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* TODO, FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.question?.questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* Essay Text Field */}\r\n                <CardContent className=''>\r\n                    <TextField\r\n                        id=\"outlined-multiline\"\r\n                        label=\"Your Answer\"\r\n                        multiline\r\n                        rows={8}\r\n                        fullWidth\r\n                        value={essayAnswer}\r\n                        onChange={essayChangedHandler}\r\n                    />\r\n                </CardContent>\r\n\r\n                {!isInGroupQuestion ?\r\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n                        <button\r\n                            className='btn m-2 p-auto btn-danger text-white'\r\n                            variant=\"contained\"\r\n                            disabled={props.previousButtonDisabled}\r\n                            onClick={() => {\r\n                                props.clickedPrevious()\r\n                                retrieveOldAnswer()\r\n                            }}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n\r\n                        <button\r\n                            className='btn m-2 p-auto btn-primary text-white'\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                const answer = essayAnswer\r\n                                props.clickedNext(null, answer, QuestionTypes.ESSAY)\r\n                                const nextAnswer = props.question?.studentAnswer?.chosenAnswer || ''\r\n                                setTimeout(() => {\r\n                                    setEssayAnswer(nextAnswer)\r\n\r\n                                }, 1000);\r\n                            }}\r\n                        >\r\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                        </button>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Essay;\r\n","/**\n * random the order of a list\n * @param {Array} list \n * @returns shuffled list\n */\nconst shuffler = (list) => {\n    return list.sort(() => Math.random() - 0.5)\n}\n\nconst useListShuffler = () => {\n    return shuffler\n}\n\nexport default useListShuffler\n","import { useEffect, useState } from \"react\"\n\nconst useSwitchBrowserDetector = () => {\n    const [isBrowserHidden, setIsBrowserHidden] = useState(null)\n    useEffect(() => {\n        window.addEventListener('blur', () => {\n            setIsBrowserHidden(true)\n        })\n        window.addEventListener('focus', () => {\n            setIsBrowserHidden(false)\n        })\n        return () => {\n            console.log(\"hiiiiiiiiiiiiiiii\")\n            window.removeEventListener('blur', () => { })\n            window.removeEventListener('focus', () => { })\n        }\n    }, [])\n\n    return isBrowserHidden\n}\n\nexport default useSwitchBrowserDetector\n","export default __webpack_public_path__ + \"static/media/cheat-inspector.4efbf1c5.png\";","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InspectorCheaterImage from '../../assets/images/cheat-inspector.png'\n\nconst CheaterPopup = ({ isVisible, setVisibility, cheatReasons, cheaterImage }) => {\n\n    const handleClose = () => {\n        setVisibility(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isVisible}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle color='error' id=\"alert-dialog-title\">\n                    {\"CHEAT ATTEMPT !!\"}\n                </DialogTitle>\n                <DialogContent>\n                    <div className='d-flex'>\n                        {cheaterImage ?\n                            <img className='w-50' alt='cheater' src={cheaterImage} />\n                            :\n                            null\n                        }\n                        <img className={cheaterImage ? 'w-50' : 'w-100'} alt='detector' src={InspectorCheaterImage} />\n                    </div>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        You're trying to cheat by <b className='text-uppercase'>{cheatReasons?.join(' & ')}</b> and we have reported that attempt to your instructor.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button color='error' onClick={handleClose} autoFocus>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default CheaterPopup\n","import React, { useEffect, useState } from 'react'\nimport styles from './ExamCounter.module.css'\n\nconst _withLeadingZero = (number) => {\n    return number < 10 ? `0${number}` : number\n}\nconst ExamCounter = ({ numberOfSecs = 1, onFinish = () => { } }) => {\n    const [remainingSeconds, setremainingSeconds] = useState(numberOfSecs)\n    const hours = Math.floor(remainingSeconds / (60 * 60))\n    const mins = Math.floor(remainingSeconds / (60))\n\n    useEffect(() => {\n        if(!numberOfSecs) return\n        let numberOfSeconds = remainingSeconds\n        let timer = setInterval(() => {\n            if (numberOfSeconds <= 0) {\n                clearInterval(timer)\n                onFinish()\n                return\n            }\n            setremainingSeconds(prevState => prevState - 1)\n            numberOfSeconds--\n        }, 1000);\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [numberOfSecs])\n\n    return (\n        <div>\n            <h1 className={styles.primaryText}>{`${_withLeadingZero(hours)}:${_withLeadingZero(mins%60)}:${_withLeadingZero(remainingSeconds % 60)}`}</h1>\n        </div>\n    )\n}\n\nexport default ExamCounter","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\n\nconst Formula = (props) => {\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\n\n    const [formulaAnswer, setFormulaAnswer] = useState('');\n    const formulaChangedHandler = (event) => {\n        setFormulaAnswer(event.target.value);\n    };\n\n    useEffect(() => {\n        setFormulaAnswer(props.question?.studentAnswer?.chosenAnswer || '')\n    }, []);\n\n    const retrieveOldAnswer = () => {\n        return formulaAnswer\n    }\n\n    useEffect(() => {\n        if (!isInGroupQuestion) return\n\n        props?.sentAnswerChanges(\n            { chosenOptionID: null, chosenAnswer: formulaAnswer, questionType: QuestionTypes.FORMULA },\n            props?.questionIndex - 1,\n            props?.quesitonId\n        )\n    }, [formulaAnswer])\n\n    return (\n        <div className=\"m-5 text-start \">\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                <CardContent>\n                    {/* Question Label */}\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\n                        {/* TODO, FETCH QUESTION NUMBER */}\n                        Question {props.questionIndex}\n                        <hr />\n                    </Typography>\n\n                    {/* Question Text */}\n                    <Typography className='m-3' variant='h5'>\n                        {props.question?.questionText}\n                    </Typography>\n                </CardContent>\n\n                {/* Formula Text Field */}\n                <CardContent className=''>\n                    <TextField\n                        id=\"outlined-multiline\"\n                        label=\"Your Answer\"\n                        fullWidth\n                        value={formulaAnswer}\n                        onChange={formulaChangedHandler}\n                    />\n                </CardContent>\n                \n                {!isInGroupQuestion ?\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\n                        <button\n                            className='btn m-2 p-auto btn-danger text-white'\n                            variant=\"contained\"\n                            disabled={props.previousButtonDisabled}\n                            onClick={() => {\n                                props.clickedPrevious()\n                                retrieveOldAnswer()\n                            }}\n                        >\n                            Previous\n                        </button>\n\n                        <button\n                            className='btn m-2 p-auto btn-primary text-white'\n                            variant=\"contained\"\n                            onClick={() => {\n                                const answer = formulaAnswer\n                                props.clickedNext(null, answer, QuestionTypes.FORMULA)\n                                const nextAnswer = props.question?.studentAnswer?.chosenAnswer || ''\n                                setTimeout(() => {\n                                    setFormulaAnswer(nextAnswer)\n\n                                }, 1000);\n                            }}\n                        >\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\n                        </button>\n                    </CardActions>\n                    :\n                    null\n                }\n            </Card>\n        </div>\n\n    );\n}\n\nexport default Formula\n","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\nimport Essay from '../Essay/Essay';\nimport MCQ from '../MCQ/MCQ';\nimport Formula from '../Formula/Formula';\n\nconst Group = (props) => {\n    const [groupAnswers, setGroupAnswers] = useState(null);\n    const groupAnswersChangesHandler = (answer, index, questionId) => {\n        if (!groupAnswers) return\n        setGroupAnswers(prevState => {\n            let newGroup = [...prevState]\n            newGroup[index] = { answer, questionId }\n            return newGroup\n        }\n        );\n    };\n\n    useEffect(() => {\n        //setGroupAnswers(props.question?.studentAnswer?.chosenAnswer || '')\n        setGroupAnswers(props?.question?.questions?.map(item => ''))\n    }, []);\n\n    const retrieveOldAnswer = () => {\n        return groupAnswers\n    }\n\n    return (\n        <div className=\"m-5 text-start \">\n\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                <CardContent>\n                    {/* Question Label */}\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\n                        Question {props.questionIndex}\n                        <hr />\n                    </Typography>\n\n                    {/* Question Text */}\n                    <Typography className='m-3' variant='h5'>\n                        {props.question?.questionText}\n                    </Typography>\n                </CardContent>\n\n                {props?.question?.questions?.map((subQuestion, index) => {\n                    if (subQuestion?.type === QuestionTypes.ESSAY)\n                        return (\n                            <Essay\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                question={subQuestion}\n                                key={subQuestion?.id}\n                                questionId={subQuestion?.id}\n                            />\n                        )\n                    else if (subQuestion?.type === QuestionTypes.MCQ)\n                        return (\n                            <MCQ\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                key={subQuestion?.id}\n                                questionText={subQuestion.questionText}\n                                answers={subQuestion.options}\n                                questionId={subQuestion?.id}\n                                savedStudentAnswer={subQuestion?.studentAnswer}\n                            />\n                        )\n\n                    else if (subQuestion?.type === QuestionTypes.FORMULA)\n                        return (\n                            <Formula\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                question={subQuestion}\n                                key={subQuestion?.id}\n                                questionId={subQuestion?.id}\n                            />\n                        )\n                })\n                }\n\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\n                    <button\n                        className='btn m-2 p-auto btn-danger text-white'\n                        variant=\"contained\"\n                        disabled={props.previousButtonDisabled}\n                        onClick={() => {\n                            props.clickedPrevious()\n                            retrieveOldAnswer()\n                        }}\n                    >\n                        Previous\n                    </button>\n\n                    <button\n                        className='btn m-2 p-auto btn-primary text-white'\n                        variant=\"contained\"\n                        onClick={() => {\n                            props.clickedNext(null, groupAnswers, QuestionTypes.GROUP)\n                        }}\n                    >\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\n                    </button>\n                </CardActions>\n            </Card>\n\n        </div >\n    );\n}\n\n\nexport default Group;\n","import React, { useEffect, useRef } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport MCQ from '../Questions/MCQ/MCQ';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport { useState } from 'react';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useParams } from 'react-router-dom';\r\nimport Essay from '../Questions/Essay/Essay';\r\n\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport useListShuffler from '../../../hooks/useListShuffler';\r\nimport useSwitchBrowserDetector from '../../../hooks/useSwitchBrowserDetector';\r\nimport CheaterPopup from '../../../Components/CheaterPopup/CheaterPopup';\r\nimport Webcam from 'react-webcam';\r\nimport ExamCounter from '../../../Components/ExamCounter/ExamCounter';\r\nimport { CheatServices } from '../../../apis/Services/CheatService';\r\nimport moment from 'moment';\r\nimport Formula from '../Questions/Formula/Formula';\r\nimport Group from '../Questions/Group/Group';\r\n\r\nconst MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK = 10\r\nconst _getMinsFromDuration = (duration) => {\r\n    if (!duration) return null\r\n    let durationList = duration?.split(':')\r\n    let mins = Number(durationList[0]) * 60 + Number(durationList[1])\r\n    return mins\r\n}\r\nconst _getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nconst TakeExam = (props) => {\r\n    const params = useParams()\r\n    const exam = props.location.state?.exam || { id: params.examId, name: 'Continoue The Exam' }\r\n    const [questions, setQuestions] = useState(null);\r\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n\r\n    const shuffler = useListShuffler()\r\n    const randomChoices = (choices) => {\r\n        return shuffler(choices)\r\n    }\r\n    const randomQuestions = (questions) => {\r\n        return shuffler(questions)\r\n    }\r\n\r\n    const [examInfo, setExamInfo] = useState(null)\r\n    const [examOptions, setExamOptions] = useState(null)\r\n\r\n    const [endExamTime, setEndExamTime] = useState(null)\r\n    useEffect(() => {\r\n        console.log(questions?.[currentQuestionNumber])\r\n    }, [currentQuestionNumber])\r\n\r\n\r\n    /** getting exam config */\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(exam.id)\r\n            .then(res => {\r\n                setExamOptions(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting exam info*/\r\n    useEffect(() => {\r\n        ExamServices.getExamInfo(exam.id)\r\n            .then(res => {\r\n                setExamInfo(res.exam)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting questions */\r\n    useEffect(() => {\r\n        if (!examOptions) return\r\n\r\n        let responseQuestions;\r\n        ExamServices.getExamQuestions(exam.id)\r\n            .then((response) => {\r\n                responseQuestions = response.questions\r\n                return ExamServices.getStudentExamAnswers(exam.id)\r\n            })\r\n            .then(res => {\r\n                setEndExamTime(res?.endTime)\r\n\r\n                // Formatting answer array stage\r\n                let formatedAnswers = {}\r\n                res?.answers.forEach((answer) => {\r\n                    formatedAnswers[answer.question_id] = { chosenOptionID: answer.option_id, chosenAnswer: answer.studentAnswer }\r\n                })\r\n                console.log(formatedAnswers)\r\n                //formated question stage\r\n                let formatedQuestions = responseQuestions.map((question) => {\r\n                    if (question?.type === QuestionTypes.GROUP) {\r\n                        let newQuestionsForThisGroupQuestion = [];\r\n                        question?.questions?.forEach(element => {\r\n                            let thisQuestionAnswer = formatedAnswers?.[element.id]\r\n                            let formatedQuestion;\r\n\r\n                            if (!thisQuestionAnswer)\r\n                                formatedQuestion = element\r\n                            else\r\n                                formatedQuestion = { ...element, studentAnswer: thisQuestionAnswer }\r\n\r\n                            newQuestionsForThisGroupQuestion.push(formatedQuestion)\r\n                        });\r\n\r\n                        return { ...question, questions: newQuestionsForThisGroupQuestion }\r\n                    }\r\n\r\n                    let thisQuestionAnswer = formatedAnswers?.[question.id]\r\n                    if (!thisQuestionAnswer) return question\r\n\r\n                    let formatedQuestion = { ...question, studentAnswer: thisQuestionAnswer }\r\n                    return formatedQuestion\r\n                })\r\n                console.log(formatedQuestions)\r\n                /** Randomize choices */\r\n                formatedQuestions = formatedQuestions?.map(item => {\r\n                    if (item?.type === QuestionTypes.MCQ)\r\n                        return { ...item, answers: randomChoices(item?.options) }\r\n                    else\r\n                        return item\r\n                })\r\n\r\n                /** Randomize Question */\r\n                if (examOptions?.questionsRandomOrder)\r\n                    formatedQuestions = randomQuestions(formatedQuestions)\r\n\r\n                setQuestions([...formatedQuestions])\r\n            })\r\n            .catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n    }, [exam.id, examOptions]);\r\n\r\n    /** Timer to sent cheat reports */\r\n    let timer;\r\n    let examDurationInSecs = Number(moment(endExamTime).diff(moment(), 'seconds'))\r\n    let examDurationInMins = Math.ceil(examDurationInSecs / 60);\r\n    const [totalCountedMins, setTotalCountedMins] = useState(0)\r\n    const [lastRandomMin, setLastRandomMin] = useState(1)\r\n    const activateJobWithRandomTriggerTimer = (RandomMins, callback = () => { }) => {\r\n        timer = setTimeout(() => {\r\n            setTotalCountedMins(prevState => prevState + RandomMins)\r\n            setLastRandomMin(RandomMins)\r\n            callback()\r\n        }, RandomMins * 60 * 1000);\r\n    }\r\n    useEffect(() => {\r\n        if (!examDurationInMins) return\r\n        if (totalCountedMins >= examDurationInMins) return\r\n        let randomMins = _getRandomNumber(1, Math.min(MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK, (examDurationInMins - lastRandomMin + 1)))\r\n        activateJobWithRandomTriggerTimer(randomMins, () => {\r\n            examOptions?.faceDetection && reportFaceDetectionCheater()\r\n            examOptions?.faceRecognition && reportFaceRecognationCheater()\r\n        })\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [totalCountedMins, examDurationInMins])\r\n\r\n\r\n    const [cheatReasons, setCheatReasons] = useState([])\r\n    const [cheaterImage, setCheaterImage] = useState(null)\r\n    const [isCheaterPopVisible, setIsCheaterPopVisible] = useState(null)\r\n\r\n    /** Switch Browser detector */\r\n    const isBrowserSwitched = useSwitchBrowserDetector()\r\n    const reportSwitchBrowserCheater = () => {\r\n        CheatServices.sentSwitchBrowserCheatAttempt(exam.id)\r\n            .then(res => {\r\n                setIsCheaterPopVisible(true)\r\n                setCheatReasons(prevState => Array.from(new Set([...prevState, 'Switching the browser'])))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        if (!isBrowserSwitched) return\r\n        examOptions?.disableSwitchBrowser && reportSwitchBrowserCheater()\r\n    }, [isBrowserSwitched])\r\n\r\n    /** Face detection detector */\r\n    const reportFaceDetectionCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceDetectionData = {\r\n            \"image\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceDetection(faceDetectionData)\r\n            if (Number(response.numberOfFaces) === 1) return\r\n            await CheatServices.sentFaceDetectionCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, 'Multi face detection'])))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /** Face recognation detector */\r\n    const reportFaceRecognationCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceVerificationData = {\r\n            \"image1\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceVerification(faceVerificationData)\r\n            if (response.verified) return\r\n            await CheatServices.sentFaceRecognationCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, 'Face unvalidity'])))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /** Sending Answers and go to next question */\r\n    const _successSentAnswerResonse = () => {\r\n        // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \r\n        const newQuestionNumber = currentQuestionNumber + 1\r\n        // If we are in the last question, then we should refer to the Done Page\r\n        if (newQuestionNumber === questions.length) {\r\n            ExamServices.submitExam(exam.id)\r\n                .then(res => {\r\n                    showSuccessMsg(\"Exam has been submitted successfully\")\r\n                    props.history.push({\r\n                        pathname: '/done',\r\n                        state: { examName: exam.name }\r\n                    })\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n            return\r\n        }\r\n        showSuccessMsg(\"Answer Saved Successfully\")\r\n\r\n        // advance to the next question\r\n        setCurrentQuestionNumber(newQuestionNumber)\r\n    }\r\n    const clickedNextHandler = (chosenOptionID, chosenAnswer, questionType) => {\r\n        let answerData = {}\r\n        if (questionType === QuestionTypes.MCQ) {\r\n            answerData = {\r\n                \"option_id\": chosenOptionID,\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n            }\r\n        }\r\n        else if (questionType === QuestionTypes.ESSAY) {\r\n            answerData = {\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n\r\n            }\r\n        }\r\n        else if (questionType === QuestionTypes.FORMULA) {\r\n            answerData = {\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n            }\r\n        }\r\n        else if (questionType == QuestionTypes.GROUP) {\r\n            let questionPromises = chosenAnswer?.map(item => {\r\n                let answerData = {\r\n                    \"studentAnswer\": item?.answer?.chosenAnswer,\r\n                    \"question_id\": item?.questionId,\r\n                    \"exam_id\": exam.id\r\n                }\r\n                if (item?.answer?.chosenOptionID)\r\n                    answerData[\"option_id\"] = item?.answer?.chosenOptionID\r\n\r\n                return ExamServices.addAnswer(answerData)\r\n            })\r\n\r\n            Promise.all(questionPromises)\r\n                .then(res => {\r\n                    _successSentAnswerResonse()\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n\r\n            return\r\n        }\r\n\r\n        ExamServices.addAnswer(answerData)\r\n            .then(() => {\r\n                _successSentAnswerResonse()\r\n            }).catch((err) => HandleErrors(err))\r\n    }\r\n\r\n    const clickedPreviousHandler = () => {\r\n        // Go to previous question by decreasing currentQuestionNumber \r\n        setCurrentQuestionNumber(currentQuestionNumber - 1)\r\n    }\r\n\r\n    const getAnswer = (questionIndex, chosenOptionID, chosenAnswer) => {\r\n        setQuestions((prevState) => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[questionIndex - 1] = {\r\n                ...newQuestions[questionIndex - 1],\r\n                studentAnswer: {\r\n                    chosenOptionID,\r\n                    chosenAnswer\r\n                }\r\n            }\r\n            return newQuestions\r\n        })\r\n    }\r\n\r\n    const onTimerFinishHanlder = () => {\r\n        ExamServices.submitExam(exam.id)\r\n            .then(res => {\r\n                showSuccessMsg(\"Exam has been submitted successfully\")\r\n                props.history.push({\r\n                    pathname: '/done',\r\n                    state: { examName: exam.name }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const My_Questions_Markup = questions?.map((question, index) => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n            return (\r\n                <Essay\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={props.questionIndex}\r\n                />\r\n            );\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            return (\r\n                <MCQ\r\n                    questionIndex={index + 1}\r\n\r\n                    currentQuestionNumber={currentQuestionNumber}\r\n                    key={question?.id}\r\n\r\n                    questionText={question.questionText}\r\n                    answers={question.answers}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    studentAnswerFunction={getAnswer}\r\n\r\n                    savedStudentAnswer={question?.studentAnswer}\r\n                />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.FORMULA) {\r\n            return (\r\n                <Formula\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={question?.id}\r\n                />\r\n            )\r\n        }\r\n\r\n        else if (question?.type === QuestionTypes.GROUP) {\r\n            return (\r\n                <Group\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={question?.id}\r\n                />\r\n            )\r\n        }\r\n        return null\r\n    })\r\n\r\n    const videoRecorderIsShown = examOptions?.faceDetection || examOptions?.faceRecognition\r\n    const webcamRef = useRef(null)\r\n    return (\r\n        <div>\r\n            {examDurationInSecs ?\r\n                <div className='bg-light p-2 rounded shadow' style={{ position: 'fixed', top: 0, left: '50%', zIndex: 10, transform: 'translateX(-50%)' }}>\r\n                    <ExamCounter onFinish={onTimerFinishHanlder} numberOfSecs={examDurationInSecs} />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            <div className=\"d-flex justify-content-center\">\r\n                {videoRecorderIsShown ?\r\n                    <Webcam\r\n                        audio={false}\r\n                        height={360}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={exam.name}>\r\n                        {My_Questions_Markup?.[currentQuestionNumber]}\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n            <CheaterPopup\r\n                isVisible={isCheaterPopVisible}\r\n                setVisibility={(value) => {\r\n                    setIsCheaterPopVisible(value)\r\n                    setCheatReasons([])\r\n                    setCheaterImage(null)\r\n                }}\r\n                cheatReasons={cheatReasons}\r\n                cheaterImage={cheaterImage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TakeExam);\r\n","import ExamInstructions from \"../Views/Student/ExamInstructions/ExamInstructions\"\r\nimport MyResults from \"../Views/Student/MyResults\"\r\nimport ResultDetails from \"../Views/Student/ResultDetails\"\r\nimport ShowExams from \"../Views/Student/ShowExams/ShowExams\"\r\nimport TakeExam from \"../Views/Student/TakeExam/TakeExam\"\r\nimport WellDone from \"../Views/Student/WellDone/WellDone\"\r\n\r\nconst StudentRoutes =\r\n    [\r\n        { path: '/exams', component: ShowExams, exact: true },\r\n        { path: \"/exams/:examId\", component: ExamInstructions, exact: true },\r\n        { path: \"/exams/:examId/start\", component: TakeExam, exact: true },\r\n        { path: \"/done\", component: WellDone, exact: true },\r\n        { path: \"/my-results\", component: MyResults, exact: true },\r\n        { path: \"/my-results/:examId\", component: ResultDetails, exact: true }\r\n    ]\r\nexport default StudentRoutes\r\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport Typography from '@mui/material/Typography';\nconst WellDone = (props) => {\n    const examName = props.location.state.examName\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className='col-md-8 col-12'>\n\n                <CardComponent title={examName}>\n                    <div className=\"m-5 text-start text-center\">\n\n\n                        <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                            <CardContent>\n\n                                {/* Well Done Label */}\n                                <Typography className='font-weight-bold ' variant=\"h3\" component=\"div\">\n\n                                    Well Done\n                                </Typography>\n\n\n                                {/* Hope Text */}\n                                <Typography className='m-3 text-success' variant='h4'>\n                                    We hope you done well in this exam and best wishes for next....!\n                                </Typography>\n\n                            </CardContent>\n\n\n                            <button\n                                className='btn m-2 p-auto btn-primary text-white'\n                                onClick={() => {props.history.push('/')}}\n                            >\n                                Homepage\n\n\n                            </button>\n\n\n\n                        </Card>\n                    </div>\n                </CardComponent>\n            </div>\n        </div >\n    )\n}\nexport default WellDone;\n","import React, { useEffect } from 'react'\nimport useListShuffler from '../../../hooks/useListShuffler'\nimport useSwitchBrowserDetector from '../../../hooks/useSwitchBrowserDetector'\n\nconst Classes = () => {\n    const shuffler = useListShuffler()\n    useEffect(() => {\n        let list = [1, 2, 3, 4, 5, 6, 7]\n        let rr = shuffler(list)\n        console.log(rr)\n    }, [])\n\n    const isBrowserHidden = useSwitchBrowserDetector()\n    useEffect(() => {\n      isBrowserHidden && console.log(\"CHEATER!!!!\")\n    \n    }, [isBrowserHidden])\n    \n    return (\n        <div>\n            <h1>Homeeeeeeeeeeeeeeeeeeeeeeeeee</h1>\n        </div>\n    )\n}\n\nexport default Classes\n","import DomainUrl from \"../Domain\";\n\nexport const INSTRUCTOR_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/instructors/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/instructors/me`,\n        method:'GET'\n    }\n};\n\n","import { INSTRUCTOR_ENDPOINTS } from \"../Endpoints/InstructorEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class InstructorServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: INSTRUCTOR_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.getMyProfile.url, {\n            method: INSTRUCTOR_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './InstructorProfile.css'\nimport { InstructorServices } from '../../../apis/Services/InstructorService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst InstructorProfile = () => {\n\n    const [instructorData, setInstructorData] = useState(null)\n    useEffect(() => {\n        InstructorServices.getMyProfile()\n            .then(res => {\n                setInstructorData(res.instructor)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (instructorData &&\n        <div className=\"Profile_I mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img style={{objectFit:'contain'}} src={imageResolver(instructorData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row align-items-center mt-2\">\n                        <h2>{`${instructorData?.user?.firstName} ${instructorData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary\">{instructorData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.phone}</h4>\n                        </div>\n\n                        {/* DEGREE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Degree: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.degree}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.gender}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InstructorProfile\n","import Classes from \"../Views/Instructor/Classes/Classes\"\r\nimport InstructorProfile from \"../Views/Profiles/Instructor-Profile/InstructorProfile\"\r\nimport StudentProfile from \"../Views/Profiles/Student-Profile/StudentProfile\"\r\n\r\nconst UserRoutes =\r\n    [\r\n        { path: '/classes', component: Classes, exact: true },\r\n        { path: \"/profile/student\", component: StudentProfile, exact: true },\r\n        { path: \"/profile/instructor\", component: InstructorProfile, exact: true }\r\n    ]\r\nexport default UserRoutes\r\n","import React, { useEffect, useState } from 'react'\nimport './StudentProfile.css'\nimport { StudentServices } from '../../../apis/Services/StudentService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst StudentProfile = () => {\n\n    const [studentData, setStudentData] = useState(null)\n    useEffect(() => {\n        StudentServices.getMyProfile()\n            .then(res => {\n                setStudentData(res.student)\n            })\n            .catch(err => HandleErrors(err))\n\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (studentData &&\n        <div className=\"Profile_S mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img style={{objectFit:'contain'}} src={imageResolver(studentData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row mt-2\">\n                        <h2>{`${studentData?.user?.firstName} ${studentData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary text-capitalize\">{studentData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.phone}</h4>\n                        </div>\n\n                        {/* CODE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Code: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.studentCode}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.gender}</h4>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentProfile\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport AuthRoutes from './AuthRoutes'\r\nimport InstructorRoutes from './InstructorRoutes'\r\nimport MainRoutes from './MainRoutes'\r\nimport StudentRoutes from './StudentRoutes'\r\nimport UserRoutes from './UserRoutes'\r\n\r\nconst Routes = () => {\r\n    const userType = useSelector(state=>state.auth.userType) || localStorage.getItem('userType')\r\n    console.log(userType)\r\n    return (\r\n        <Switch>\r\n            {MainRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {AuthRoutes.map((props, index) => <Route key={index}{...props} />)}\r\n\r\n            {/* FOR ANY USER */}\r\n            {userType && UserRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR INSTRUCTOR */}\r\n            {userType === 'instructor' && InstructorRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR STUDENT */}\r\n            {userType === 'student' && StudentRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            <Redirect to={'/login'} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions/AppActions';\nimport { Button } from '@mui/material';\n\nconst Alert = () => {\n    const alertObject = useSelector(state => state.app.alertObject)\n    const dispatch = useDispatch()\n    const closeHandler = () => {\n        dispatch(hideAlert())\n    }\n    const confirmHandler = () => {\n        alertObject?.alertFunction()\n    }\n\n    return (\n        <Dialog\n            open={Boolean(alertObject?.header)}\n            onClose={closeHandler}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {alertObject?.header}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {alertObject?.details}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} autoFocus>Cancel</Button>\n                <Button color='error' onClick={confirmHandler}>\n                    Yes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Alert","import { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Header from './Components/Header/Header';\r\nimport { setUserType, signin } from \"./redux/actions/AuthActions\";\r\nimport Toast from './Components/Toast'\r\nimport Routes from \"./routes\";\r\nimport Alert from \"./Components/Dialogs/Alert\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const _bootstrapFunction = useCallback(() => {\r\n    let isAuth = localStorage.getItem('token');\r\n    let userType = localStorage.getItem('userType');\r\n\r\n    if (!isAuth) return\r\n    if (!userType) return\r\n    \r\n    // TODO: Check token with an endpoint\r\n    dispatch(signin(isAuth))\r\n    dispatch(setUserType(userType))\r\n  }, [dispatch])\r\n\r\n  // Bootstrap function\r\n  useEffect(() => {\r\n    _bootstrapFunction();\r\n  }, [_bootstrapFunction])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Routes />\r\n      </div>\r\n\r\n      <Toast />\r\n      <Alert />\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2F4F4F',\n        },\n        secondary: {\n            main: '#50303A',\n        },\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './Theme/MaterialUiTheme';\n\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryText\":\"ExamCounter_primaryText__1cTjU\"};"],"sourceRoot":""}