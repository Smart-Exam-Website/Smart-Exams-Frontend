{"version":3,"sources":["assets/images/logo.png","Components/Footer/Footer.js","redux/actions/AuthActions.js","Components/Header/Header.js","redux/actions/AppActions.js","Components/Toast/SuccessToast.js","Components/Toast/ErrorToast.js","Components/Toast/index.js","apis/Domain.js","apis/Endpoints/InstructorEndpoints.js","apis/Network.js","apis/Services/InstructorService.js","Views/Profiles/Instructor-Profile/InstructorProfile.js","apis/Endpoints/StudentEndpoints.js","apis/Services/StudentService.js","Views/Profiles/Student-Profile/StudentProfile.js","apis/axios-instance.js","redux/actions/actionTypes.js","Views/Registration/ForgotPassword/forgotPassword.jsx","apis/Endpoints/AuthEndpoints.js","apis/Services/AuthService.js","Components/CardComponent/CardComponent.js","redux/reducers/AppReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ResetReducer.js","redux/reducers/ExamReducer.js","redux/reducers/QuestionReducer.js","redux/store.js","hooks/handleErrors.js","Views/Registration/Login/Login.jsx","Views/Registration/Register/RegisterInquiry.jsx","Views/Registration/Register/RegisterInstructor/RegisterInstructor.jsx","Views/Registration/Register/RegisterStudent/RegisterStudent.jsx","hooks/showSuccessMsg.js","Views/Registration/ResetPassword/ResetPassword.jsx","hooks/useWindowWidth.js","Views/VerifyEmail/VerifyEmail.jsx","routes/AuthRoutes.js","apis/Services/ExamService.js","Views/Instructor/Exams/AddExam/AddExam.js","Components/QuestionComponents/AddationMethodsMenu.js","constants/Colors.js","constants/GlobalStyle.js","Components/QuestionComponents/BorderdQuestionController.js","Views/Instructor/Exams/AddExamQuestions/AddExamQuestions.js","redux/actions/ExamAction.js","Views/Instructor/Exams/Exams.js","apis/Services/QuestionService.js","Views/Instructor/Questions/Questions.js","Views/Instructor/Exams/SetExamOptions/SetExamOptions.js","Views/Instructor/Questions/QuestionTypes/MCQ.js","Views/Instructor/Questions/AddQuestionScreen.js","routes/InstructorRoutes.js","Views/Instructor/Questions/QuestionViewScreen.js","routes/MainRoutes.js","Views/Home/Home.js","Views/Student/ExamInstructions/ExamInstructions.jsx","Views/Student/ShowExams/ShowExams.jsx","Views/Student/Questions/MCQ/MCQ.jsx","routes/StudentRoutes.js","Views/Student/TakeExam/TakeExam.jsx","Views/Student/WellDone/WellDone.jsx","routes/UserRoutes.js","Views/Instructor/Classes/Classes.js","routes/index.js","Components/Dialogs/Alert.js","App.js","reportWebVitals.js","Theme/MaterialUiTheme.js","index.js"],"names":["iconStyle","fontSize","color","margin","cursor","isMobile","window","innerWidth","Footer","style","marginTop","className","height","src","Logo","alt","FacebookOutlined","InstagramOutlined","PhoneOutlined","Date","getFullYear","signin","setUserToken","type","payload","setUserType","Header","isAuth","useSelector","state","auth","userToken","userType","dispatch","useDispatch","to","id","activeclassname","exact","onClick","localStorage","clear","LogoutOutlined","UserOutlined","showError","msg","showSuccess","showAlert","alertObject","Alert","React","forwardRef","props","ref","elevation","variant","SuccessToast","successMsg","app","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","severity","ErrorToast","errorMsg","autoHideDuration","index","DomainUrl","INSTRUCTOR_ENDPOINTS","register","url","method","getMyProfile","Network","this","jwt","init","addAuth","getItem","fetch","mode","headers","getHeaders","response","promise","ok","status","Promise","resolve","json","handleErrorsBasedOnStatus","originalHeaders","Accept","Authorization","then","data","reject","catch","error","InstructorServices","values","body","JSON","stringify","InstructorProfile","useState","instructorData","setInstructorData","res","instructor","err","console","log","minHeight","user","image","firstName","lastName","width","email","phone","degree","gender","STUDENT_ENDPOINTS","StudentServices","StudentProfile","studentData","setStudentData","student","studentCode","_axios","axios","create","baseURL","interceptors","request","use","config","a","token","undefined","ADD_EMAIL","SAVE_ANSWER","connect","email_address","rst","saveEmail","actionTypes","setEmail","onChange","e","target","value","placeholder","event","preventDefault","setItem","post","AUTHENDPOINTS","login","verifyEmail","changePassword","logout","ResetPassword","AuthServices","CardComponent","children","title","initStates","initialState","ResetReducer","action","examQuestions","ExamReducer","newExamQuestions","newExamQuestion","filter","item","answers","QuestionReducer","newAnswers","rootReducer","combineReducers","exam","question","middleware","applyMiddleware","thunk","store","createStore","HandleErrors","showErrorToast","message","String","withRouter","password","setPassword","TextField","fullWidth","label","history","push","pathname","Registerinquiry","RegisterAsStudentHandler","RegisterAsInstructorHandler","MaxWidth","Component","RegisterInstructor","department","school","confirmPassword","firstNameFormHandler","setState","lastNameFormHandler","genderHandler","emailFormHandler","phoneFormHandler","departmentFormHandler","degreeFormHandler","schoolFormHandler","passwordFormHandler","confirmPasswordFormHandler","isValidEmail","Boolean","toLowerCase","match","isValidName","name","isValidPhone","number","isPasswordMatch","validateData","registerHandler","validationMessage","userInfo","checked","htmlFor","RegisterStudent","studentcode","studentCodeFormHandler","showSuccessMsg","setConfirmPassword","params","put","removeItem","getWindowWidth","AuthRoutes","path","component","Login","forgotPassword","RegisterInquiry","codeValue","location","code","screenWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","onComplete","autoFocus","fieldHeight","fieldWidth","fields","ExamServices","examMainInfo","examId","options","questions","get","answerData","delete","AddExam","useHistory","useLocation","isEditMode","examOldData","initialValues","numberOfTrials","description","totalMark","duration","examSubject","startAt","moment","format","endAt","add","onSubmit","actions","createNewExam","handleSubmit","handleChange","onBlur","handleBlur","errors","MobileDateTimePicker","inputFormat","onClose","setFieldTouched","date","selectedDate","setFieldValue","renderInput","AddationMethodsMenu","methods","anchorEl","setAnchorEl","handleClose","Menu","PaperProps","sx","overflow","mt","ml","mr","content","display","position","top","right","bgcolor","transform","zIndex","transformOrigin","map","MenuItem","function","displayName","length","Divider","Colors","ClickableView","styled","div","Wrapper","Text","span","BorderdQuestionController","questionTitle","deleteFunction","AddExamQuestions","fromExamCreation","canSelectQuestionsForExam","examOldQuestions","setExamId","matchPath","setQuestions","savedQuestions","currentTarget","PlusCircleOutlined","removeSavedQuestionFromExam","prevState","questionText","submittedQuestions","question_id","addQuestionsToExam","StyledTableCell","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","white","fontWeight","StyledTableRow","TableRow","hover","border","Exams","exams","setExams","getMyExams","GoToExamDetailsHandler","selectedExam","setSelectedExam","isNotCompleted","row","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","scope","stopPropagation","MenuListProps","find","header","details","alertFunction","deleteExam","newExams","finally","QuestionServices","Questions","getMyQuestions","GoToQuestionDetailsHandler","selectedQuestion","setSelectedQuestion","created_at","deleteQuestion","newQuestions","SetExamOptions","oldExamConfig","faceRecognition","faceDetection","questionsRandomOrder","plagiarismCheck","disableSwitchBrowser","gradingMethod","submittedValues","setExamOptions","Switch","Label","DangerLabel","SuccessLabel","MCQ","initValues","getQuestionCreationRequest","MCQSCHEMA","yup","shape","required","correctAnswer","choise1","choise2","choise3","mcqChoices","mcq","mcq_answers","isCorrect","mcqCorrectAnswer","option","enableReinitialize","validationSchema","editRequest","editQuestion","creationRequest","createMcqQuestion","multiline","rows","helperText","touched","AddQuestionScreen","oldQuestion","oldQuestionDetails","setOldQuestionDetails","getQuestionDetails","questionTypes","setQuestionTypes","questionType","setQuestionType","questionTypeSelectionMenuMarkup","select","disabled","size","marginInlineEnd","goBack","InstructorRoutes","questionId","useParams","MainRoutes","Card","CardContent","Typography","CardActions","Button","goToInstructionsHandler","chosenOptionID","setChosenOptionID","chosenAnswer","setChosenAnswer","currentQuestionNumber","questionIndex","savedStudentAnswer","onChangeHandler","parseInt","isCheckedCondition","ansIndex","clickedPrevious","previousButtonDisabled","clickedNext","studentAnswerFunction","changeNextNameIntoFinish","StudentRoutes","ShowExams","ExamInstructions","setCurrentQuestionNumber","getExamQuestions","clickedNextHandler","addAnswer","newQuestionNumber","examName","clickedPreviousHandler","getAnswer","studentAnswer","My_Questions_Markup","UserRoutes","Routes","closeHandler","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","App","_bootstrapFunction","useCallback","Toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","ReactDOM","render","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter","document","getElementById"],"mappings":"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","file":"static/js/main.f416ef77.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.18795106.png\";","import React from 'react'\nimport './Footer.css'\nimport Logo from '../../assets/images/logo.png'\nimport { InstagramOutlined, FacebookOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst iconStyle = {\n    fontSize: 36,\n    color: '#313131',\n    margin: '0px 12px',\n    cursor: 'pointer'\n}\n\nconst isMobile = window.innerWidth < 992;\nconst Footer = () => {\n    return (\n        <footer style={{marginTop:200}} className=\"Footer container\">\n            <div className=\"row justify-content-lg-center pl-3 p-lg-0\">\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                    <h5 className=\"text-grey my-3\">Test your student smartly.</h5>\n\n                    {!isMobile &&\n                        <div className=\"d-flex flex-row justify-content-center\">\n                            <FacebookOutlined style={iconStyle} />\n                            <InstagramOutlined style={iconStyle} />\n                            <PhoneOutlined style={iconStyle} />\n                        </div>\n                    }\n\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Menu</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">Home</li>\n                        <li className=\"mx-2\">Tours</li>\n                        <li className=\"mx-2\">Category</li>\n                        <li className=\"mx-2\">About Us</li>\n                    </ul>\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Support</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">FAQ</li>\n                        <li className=\"mx-2\">Terms & Conditions</li>\n                        <li className=\"mx-2\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {isMobile &&\n                    <div className=\"d-flex flex-row justify-content-center\">\n                        <FacebookOutlined style={iconStyle} />\n                        <InstagramOutlined style={iconStyle} />\n                        <PhoneOutlined style={iconStyle} />\n                    </div>\n                }\n                <small className=\"text-grey\">{new Date().getFullYear()} (c) — SmartExam. All Rights Reserved</small>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const SIGN_IN = 'SIGN_IN'\r\nconst SIGN_OUT = 'SIGN_OUT'\r\nconst SET_USER_TYPE = \"SET_USER_TYPE\"\r\nconst signin = (setUserToken) => {\r\n   return {\r\n      type: SIGN_IN,\r\n      payload: setUserToken\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return {\r\n      type: SIGN_OUT,\r\n      payload: null\r\n   }\r\n}\r\n\r\nconst setUserType = (type)=>{\r\n   return {\r\n      type: SET_USER_TYPE,\r\n      payload: type\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport { signin, logout, setUserType }","import React from 'react'\nimport './Header.css'\nimport Logo from '../../assets/images/logo.png'\nimport { Link, NavLink } from 'react-router-dom'\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/actions/AuthActions';\n\n\nconst Header = () => {\n    const isAuth = useSelector(state => state.auth.userToken)\n    const userType = useSelector(state => state.auth.userType)\n    const dispatch = useDispatch(null)\n    const logoutHandler = () => {\n        dispatch(logout())\n        localStorage.clear()\n    }\n\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mx-auto mainNav\">\n                        {!isAuth ?\n                            <>\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Home</span>\n                                    </li>\n                                </NavLink>\n\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Features</span>\n                                    </li>\n                                </NavLink>\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Pricing</span>\n                                    </li>\n                                </NavLink>\n                            </>\n                            :\n                            <>\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/classes\">\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Classes</span>\n                                    </li>\n                                </NavLink>\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/exams\">\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Exams</span>\n                                    </li>\n                                </NavLink>\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/questions\">\n                                    <li className=\"nav-item px-5 mx-2\">\n                                        <span>Questions</span>\n                                    </li>\n                                </NavLink>\n                            </>\n                        }\n\n                    </ul>\n\n                    <ul className=\"navbar-nav d-flex justify-content-lg-center justify-content-between flex-row\">\n                        {!isAuth ?\n                            <>\n                                <li className=\"nav-item mx-2 d-flex align-items-center\">\n                                    <Link className=\"loginText\" to={'/login'}>Login</Link>\n                                </li>\n\n                                <li className=\"nav-item mx-2\">\n                                    <Link className=\"btn btn-primary\" to=\"/register\">Register</Link>\n                                </li>\n                            </>\n                            :\n                            <>\n                                {/* Logout */}\n                                <li onClick={logoutHandler} className=\"nav-item mx-2\">\n                                    <LogoutOutlined className=\"primaryColoredIcon\" />\n                                </li>\n\n                                {/* Profile */}\n                                <li className=\"nav-item mx-2\">\n                                    <Link to={`/profile/${userType}`}>\n                                        <UserOutlined className=\"primaryColoredIcon\" />\n                                    </Link>\n                                </li>\n                            </>\n                        }\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header\n","const SHOW_ERROR = 'SHOW_ERROR'\nconst SHOW_SUCCESS = 'SHOW_SUCCESS'\nconst SHOW_ALERT = \"SHOW_ALERT\"\nconst HIDE_ALERT = \"HIDE_ALERT\"\n\nconst showError = (msg) => {\n    return {\n        type: SHOW_ERROR,\n        payload: msg\n    }\n}\n\nconst showSuccess = (msg) => {\n    return {\n        type: SHOW_SUCCESS,\n        payload: msg\n    }\n}\n/**\n * \n * @param {{header:string, details:string, alertFunction:Function}} alertObject \n * @returns \n */\nconst showAlert = (alertObject) => {\n    return {\n        type: SHOW_ALERT,\n        payload: alertObject\n    }\n}\n\nconst hideAlert = () => {\n    return {\n        type: HIDE_ALERT,\n    }\n}\n\n\nexport { showError, showSuccess, showAlert, hideAlert }","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showSuccess } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SuccessToast = () => {\n    const successMsg = useSelector(state => state.app.successMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        successMsg && setTimeout(() => {\n            dispatch(showSuccess(null))\n        }, 3000);\n\n    }, [successMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={successMsg}\n            key={'success1'}\n        >\n            <Alert severity={\"success\"}>{successMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default SuccessToast\n","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showError } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ErrorToast = () => {\n    const errorMsg = useSelector(state => state.app.errorMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        errorMsg && setTimeout(() => {\n            dispatch(showError(null))\n        }, 3000);\n\n    }, [errorMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={errorMsg}\n            key={'error1'}\n            autoHideDuration={3000}\n        >\n            <Alert severity={\"error\"}>{errorMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default ErrorToast\n","import React from 'react'\nimport SuccessToast from './SuccessToast'\nimport ErrorToast from './ErrorToast'\n\n\nconst index = () => {\n    return (\n        <div>\n            <SuccessToast />\n            <ErrorToast />\n        </div>\n    )\n}\n\nexport default index\n","const DomainUrl = 'http://18.223.162.98/api';\r\nexport default DomainUrl;","import DomainUrl from \"../Domain\";\n\nexport const INSTRUCTOR_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/instructors/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/instructors/me`,\n        method:'GET'\n    }\n};\n\n","export class Network {\r\n  constructor() {\r\n    this.jwt = \"\";\r\n  }\r\n\r\n  static async fetch(url, init, addAuth) {\r\n    this.jwt = localStorage.getItem(\"token\");\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      ...init,\r\n      headers: Network.getHeaders(init.headers, addAuth),\r\n    });\r\n    let promise;\r\n    if (!response.ok) {\r\n      promise = Network.handleErrorsBasedOnStatus(response);\r\n    } else if (response.status === 204) {\r\n      promise = Promise.resolve({});\r\n    } else {\r\n      promise = response.json();\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  static getHeaders(originalHeaders, addAuth) {\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (addAuth) {\r\n      headers.Authorization = `Bearer ${this.jwt}`;\r\n    }\r\n\r\n    headers = {\r\n      ...headers,\r\n      ...originalHeaders,\r\n    };\r\n\r\n    return headers;\r\n  }\r\n  static handleErrorsBasedOnStatus(response) {\r\n    let promise;\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 422:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 429:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 401:\r\n      case 403:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n    }\r\n    return promise.catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n","import { INSTRUCTOR_ENDPOINTS } from \"../Endpoints/InstructorEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class InstructorServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: INSTRUCTOR_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.getMyProfile.url, {\n            method: INSTRUCTOR_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './InstructorProfile.css'\nimport { InstructorServices } from '../../../apis/Services/InstructorService'\n\nconst InstructorProfile = () => {\n\n    const [instructorData, setInstructorData] = useState(null)\n    useEffect(() => {\n        InstructorServices.getMyProfile()\n            .then(res => {\n                setInstructorData(res.instructor)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    return ( instructorData &&\n        <div className=\"Profile_I mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={instructorData?.user?.image} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row align-items-center mt-2\">\n                        <h2>{`${instructorData?.user?.firstName} ${instructorData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary\">{instructorData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.phone}</h4>\n                        </div>\n\n                        {/* DEGREE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Degree: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.degree}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.gender}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InstructorProfile\n","import DomainUrl from \"../Domain\";\n\nexport const STUDENT_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/students/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/students/me`,\n        method:'GET'\n    }\n};\n\n","import { STUDENT_ENDPOINTS } from \"../Endpoints/StudentEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class StudentServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(STUDENT_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: STUDENT_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(STUDENT_ENDPOINTS.getMyProfile.url, {\n            method: STUDENT_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './StudentProfile.css'\nimport { StudentServices } from '../../../apis/Services/StudentService'\n\nconst StudentProfile = () => {\n\n    const [studentData, setStudentData] = useState(null)\n    useEffect(() => {\n        StudentServices.getMyProfile()\n            .then(res => {\n                setStudentData(res.student)\n            })\n            .catch(err => console.log(err))\n\n    }, [])\n    return ( studentData &&\n        <div className=\"Profile_S mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={studentData?.user?.image} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row mt-2\">\n                        <h2>{`${studentData?.user?.firstName} ${studentData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary text-capitalize\">{studentData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.phone}</h4>\n                        </div>\n\n                        {/* CODE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Code: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.studentCode}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.gender}</h4>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentProfile\n","import axios from 'axios';\nimport DomainUrl from './Domain';\n\nlet headers = {}\nconst _axios = axios.create({\n    baseURL: DomainUrl,\n    headers\n});\n\n_axios.interceptors.request.use(\n    async (config) => {\n        const token = localStorage.getItem('token');\n        config.headers = {\n            ...config.headers,\n            'Authorization': token ? `Bearer ${token}` : undefined,\n        }\n        return config\n    },\n    (err) => {\n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => response.data,\n    err => {\n        return Promise.reject(err?.response?.data);\n    }\n)\n\nexport default _axios;\n","export const ADD_EMAIL = \"ADD_EMAIL\"\nexport const SAVE_ANSWER = \"SAVE_ANSWER\"\n","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport * as actionTypes from \"../../../redux/actions/actionTypes\"\n\nconst Forgotpassword = (props) => {\n    const [email, setEmail] = useState(null)\n\n    const sendLinkHandler = (event) => {\n        event.preventDefault()\n        const data = {\n            email: email\n        }\n\n        props.saveEmail(email)\n        localStorage.setItem(\"email\",email)\n        console.log(data)\n        _axios.post(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            \n\n\n        }).catch((error) => {\n            console.log(error)\n\n        })\n    }\n    return (\n\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Forgot Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n                    <div>\n                        <div className='text-center'>\n                            <label >We'll send you a link via email to reset password</label>\n\n                        </div>\n                        <div className='text-center'>\n                            <label >Please type your email address</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email address\" />\n                    </div>\n                    <br />\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={sendLinkHandler} style={{ width: 200 }}>Send Link</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveEmail: (email) => { return dispatch({ type: actionTypes.ADD_EMAIL, email: email  }) }\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgotpassword);\n\n","import DomainUrl from \"../Domain\";\r\n\r\nexport const AUTHENDPOINTS = {\r\n   login: {\r\n      url: `${DomainUrl}/auth/login`,\r\n      method: 'POST',\r\n   },\r\n   verifyEmail:{\r\n      url:`${DomainUrl}/auth/verifyEmail`,\r\n      method : 'POST'\r\n   },\r\n   changePassword:{\r\n      url:`${DomainUrl}/auth/changePassword`,\r\n      method : 'PUT'\r\n   },\r\n   logout:{\r\n      url:`${DomainUrl}/auth/logout`,\r\n      method : 'POST'\r\n   },\r\n   ResetPassword:{  \r\n      url:`${DomainUrl}/auth/forgotPassword`,\r\n      method:'PUT'\r\n   }\r\n};\r\n\r\n","import { AUTHENDPOINTS } from \"../Endpoints/AuthEndpoints\";\r\nimport { Network } from \"../Network\";\r\n\r\nexport class AuthServices {\r\n  // sign in\r\n  static login(values) {\r\n    return Network.fetch(AUTHENDPOINTS.login.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.login.method,\r\n    });\r\n  }\r\n  \r\n  // verifying mobile phone by sending  code , phone\r\n  static emailVerifySms(values) {\r\n    return Network.fetch(AUTHENDPOINTS.verifyEmail.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.verifyEmail.method,\r\n    });\r\n  }\r\n\r\n  // change password\r\n  static changePassword(values) {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.changePassword.url,\r\n      {\r\n        body: JSON.stringify(values),\r\n        method: AUTHENDPOINTS.changePassword.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n  \r\n  // logout\r\n  static logout() {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.logout.url,\r\n      {\r\n        method: AUTHENDPOINTS.logout.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  // reset forgotten  Password\r\n  static resetForgottenPassword(values) {\r\n    return Network.fetch(AUTHENDPOINTS.ResetPassword.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.ResetPassword.method,\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\nimport './CardComponent.css'\nconst CardComponent = ({children, title}) => {\n    return (\n        <div className=\"greenCard\">\n            <h2 className=\"text-light mx-auto py-3\">{title}</h2>\n            {children}\n        </div>\n    )\n}\n\nexport default CardComponent\n","const initStates = {\n    errorMsg: null,\n    successMsg: null,\n    alertObject: null\n}\n\nconst AppReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case 'SHOW_ERROR':\n            console.log(action.payload)\n            return {\n                ...state,\n                errorMsg: action.payload,\n            };\n        case 'SHOW_SUCCESS':\n            return {\n                ...state,\n                successMsg: action.payload\n            };\n        case 'SHOW_ALERT':\n            return {\n                ...state,\n                alertObject: action.payload\n            };\n        case 'HIDE_ALERT':\n            return {\n                ...state,\n                alertObject: null\n            };\n        default:\n            return state\n    }\n}\n\nexport { AppReducer };","\r\nconst initStates = {\r\n   userToken: null,\r\n   userType: null\r\n}\r\n\r\nconst AuthReducer = (state = initStates, action) => {\r\n   switch (action.type) {\r\n      case 'SIGN_IN':\r\n         return {\r\n            ...state,\r\n            userToken: action.payload,\r\n         };\r\n      case 'SIGN_OUT':\r\n         return {\r\n            ...state,\r\n            userToken: null,\r\n            userType: null\r\n         };\r\n\r\n      case 'SET_USER_TYPE':\r\n         return {\r\n            ...state,\r\n            userType: action.payload,\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport { AuthReducer };","import * as actionTypes from \"../actions/actionTypes\"\n\nconst initialState = {\n    email: 'LOL'\n\n}\nconst ResetReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_EMAIL:\n            // console.log(\"this from reducer\")\n            // console.log(action.email)\n            return {\n                ...state,\n                email: action.email\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default ResetReducer;","const initStates = {\n    examQuestions: []\n}\n\nconst ExamReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case 'ADD_QUESTION':\n            return {\n                ...state,\n                examQuestions: [...state.examQuestions, action.payload],\n            };\n        case 'REMOVE_QUESTION': {\n            let newExamQuestions = state?.examQuestions\n            let newExamQuestion = newExamQuestions.filter(item => {\n                return item.id !== action.payload\n            })\n            return {\n                ...state,\n                examQuestions: [...newExamQuestion],\n            };\n        }\n        case 'REMOVE_ALL':\n            return {\n                ...state,\n                examQuestions: []\n            }\n        default:\n            return state\n    }\n}\nexport default ExamReducer;","import * as actionTypes from '../actions/actionTypes'\nconst initialState = {\n    answers: {}\n}\nconst QuestionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        \n        case actionTypes.SAVE_ANSWER:\n            let newAnswers = {...state.answers}\n            newAnswers[action.index] = action.payload\n            // console.log(\"newAnswers\")\n            // console.log(newAnswers)\n            return {\n                ...state,\n                answers: newAnswers\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default QuestionReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from './reducers/AppReducer';\r\nimport { AuthReducer } from './reducers/AuthReducer';\r\nimport ResetReducer from './reducers/ResetReducer';\r\nimport ExamReducer from './reducers/ExamReducer';\r\nimport QuestionReducer from './reducers/QuestionReducer';\r\n\r\nconst rootReducer = combineReducers(\r\n   {\r\n      auth: AuthReducer,\r\n      app: AppReducer,\r\n      rst: ResetReducer,\r\n      exam: ExamReducer,\r\n      question: QuestionReducer\r\n   }\r\n);\r\nconst middleware = applyMiddleware(thunk)\r\nconst configureStore = () => {\r\n   return createStore(rootReducer, middleware);\r\n}\r\n\r\nexport const store = configureStore();","import { showError } from '../redux/actions/AppActions'\nimport { store } from '../redux/store'\n\nexport default function HandleErrors(err) {\n    //Showing Toast Function\n    const showErrorToast = (msg) => {\n        store.dispatch(\n            showError(msg)\n        )\n    }\n\n\n    if (err?.message) {\n        showErrorToast(err?.message)\n    } else if (typeof err === 'string' || err instanceof String) {\n        showErrorToast(err)\n    } else {\n        showErrorToast(\"UNKNOWN_ERROR\")\n    }\n}","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AuthServices } from '../../../apis/Services/AuthService';\nimport { setUserType, signin } from '../../../redux/actions/AuthActions';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const forgotPasswordHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: '/forgot-password',\n            state: { email: email }\n        })\n\n        // props.history.push('/forgot-password')\n        // props.history.push('/reset-password')\n\n    }\n\n    const SignUpHandler = () => {\n        props.history.push('/register')\n    }\n\n    const dispatch = useDispatch(null)\n    const LoginHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        AuthServices.login({ email, password })\n            .then(res => {\n                console.log(\"result =>\", res)\n                localStorage.setItem('token', res?.token)\n                localStorage.setItem('userType', res?.user?.type)\n                dispatch(signin(res?.token))\n                dispatch(setUserType(res?.user?.type))\n                props.history.push(`/profile/${res?.user?.type}`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Login'}>\n                    <form className=\"m-3 text-start\">\n                        <div className='mt-4'>\n                            <TextField fullWidth id=\"outlined-basic\" onChange={(e) => setEmail(e.target.value)} label=\"Email Address\" variant=\"outlined\" />\n                        </div>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                id=\"outlined-adornment-password\"\n                                type={'password'}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"mx-auto mt-4 text-center\">\n                            <button className=\"btn btn-primary mx-auto\" onClick={LoginHandler}>Login</button>\n                            <div>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={forgotPasswordHandler}>Forgot password?</button>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={SignUpHandler}>Signup</button>\n                            </div>\n                        </div>\n                    </form>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\nclass Registerinquiry extends Component {\n\n    RegisterAsStudentHandler = () => {\n        // this.props.history.push('/signup')\n        this.props.history.push('/register-student')\n\n    }\n    RegisterAsInstructorHandler = () => {\n        \n        this.props.history.push('/register-instructor')\n\n     }\n\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center mt-5\">\n                <div className=\"card border-success mb-3\" style={{ MaxWidth: 18 }}>\n                    <div className=\"card-header\">Sign up</div>\n                    <div className=\"card-body text-success\">\n                        <h5 className=\"card-title text-center\">Register As...?</h5>\n                        <div className=\"form-inline\">\n                            <button type=\"button\" onClick={this.RegisterAsStudentHandler} className=\"btn btn-primary m-3\">Student</button>\n                            <button type=\"button\" onClick={this.RegisterAsInstructorHandler} className=\"btn btn-danger m-3\">Instructor</button>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Registerinquiry);\n","import React, { Component } from 'react';\nimport { TextField } from '@mui/material';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport _axios from '../../../../apis/axios-instance';\n\nclass RegisterInstructor extends Component {\n\n\n    state = {\n        firstName: null,\n        lastName: null,\n        gender: 'male',\n        email: null,\n        phone: null,\n        department: null,\n        degree: null,\n        school: null,\n        password: null,\n        confirmPassword: null\n    }\n\n    firstNameFormHandler = (event) => {\n        this.setState({ firstName: event.target.value })\n    }\n    lastNameFormHandler = (event) => {\n\n        this.setState({ lastName: event.target.value })\n    }\n    genderHandler = (event) => {\n        console.log(event.target.value)\n        this.setState({ gender: event.target.value })\n    }\n    emailFormHandler = (event) => {\n        this.setState({ email: event.target.value })\n    }\n    phoneFormHandler = (event) => {\n        this.setState({ phone: event.target.value })\n    }\n    departmentFormHandler = (event) => {\n        this.setState({ department: event.target.value })\n    }\n    degreeFormHandler = (event) => {\n        this.setState({ degree: event.target.value })\n    }\n    schoolFormHandler = (event) => {\n        this.setState({ school: event.target.value })\n    }\n    passwordFormHandler = (event) => {\n        this.setState({ password: event.target.value })\n    }\n    confirmPasswordFormHandler = (event) => {\n        this.setState({ confirmPassword: event.target.value })\n    }\n\n\n    isValidEmail = (email) => {\n        return Boolean(String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            ));\n    }\n\n    isValidName = (name) => {\n        if (name === '' | name == null) {\n            return false\n        }\n        return true\n    }\n    isValidPhone = (number) => {\n        var phoneno = /^\\d{11}$/;\n        if (number === '' | number == null) {\n            return false\n        }\n        if ((number.match(phoneno))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n    isPasswordMatch = (password, confirmPassword) => {\n        if (password === '' | password === null) {\n            return false\n        }\n        return (password === confirmPassword)\n    }\n\n\n    validateData = () => {\n        if (!this.isValidName(this.state.firstName)) {\n            return \"Invalid First Name\"\n            // return false\n        }\n        if (!this.isValidName(this.state.lastName)) {\n            return \"Invalid Last Name\"\n\n        }\n        if (!this.isValidPhone(this.state.phone)) {\n            return \"Invalid Phone Number\"\n\n        }\n        if (!this.isValidEmail(this.state.email)) {\n            return \"Invalid Email\"\n\n        }\n        if (!this.isValidName(this.state.department)) {\n            return \"Invalid Department\"\n\n        }\n        if (!this.isValidName(this.state.school)) {\n            return \"Invalid School\"\n\n        }\n        if (!this.isValidName(this.state.degree)) {\n            return \"Invalid Degree\"\n\n        }\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\n            return \"Password Mismatch\"\n\n        }\n        return \"success\"\n    }\n\n\n    registerHandler = (event) => {\n        // send data into server \n        event.preventDefault()\n\n\n        // Check data is valid\n        const validationMessage = this.validateData()\n        if (validationMessage !== 'success') {\n            // alert(validationMessage)\n            HandleErrors(validationMessage)\n\n            return\n        }\n\n        // console.log(this.state)\n        // generating a code\n        // var code = Math.floor(100000 + Math.random() * 900000);\n\n        var data = {\n            \"firstName\": this.state.firstName,\n            \"lastName\": this.state.lastName,\n            \"description\": \"This is new instructor's description\",\n            \"email\": this.state.email,\n            \"password\": this.state.password,\n            \"gender\": this.state.gender,\n            \"image\": \"https://google.com/pepepepaaa\",\n            \"phone\": this.state.phone,\n            \"type\": \"instructor\",\n            \"degree\": this.state.degree,\n            \"departments\": [\n                {\n                    \"department_id\": 1\n                }\n            ]\n        }\n        _axios.post('/instructors/register', data).then((response) => {\n            this.props.history.push({\n                pathname: '/verifyEmail',\n                state: { email: this.state.email, userInfo: data }\n            })\n\n        }).catch(err => HandleErrors(err))\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"row justify-content-center text-center my-5\">\n                <div className=\"col-md-8 col-12\">\n                    <CardComponent title={'Signup'}>\n                        <form className=\"m-3\">\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\n                                </div>\n                            </div>\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <label >Gender</label>\n                                    <div className=\"form-group m-2\">\n                                        <div className=\"form-check form-check-inline \">\n                                            <input\n                                                className=\"form-check-input\"\n                                                type=\"radio\"\n                                                name=\"flexRadioDefault\"\n                                                id=\"flexRadioDefault1\"\n                                                value=\"male\"\n                                                checked={this.state.gender === 'male'}\n                                                onChange={this.genderHandler}\n                                            />\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\n                                        </div>\n\n                                        <div className=\"form-check form-check-inline\">\n                                            <input\n                                                className=\"form-check-input\"\n                                                type=\"radio\"\n                                                name=\"flexRadioDefault\"\n                                                id=\"flexRadioDefault2\"\n                                                value=\"female\"\n                                                checked={this.state.gender === 'female'}\n                                                onChange={this.genderHandler}\n                                            />\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group  col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group  col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1\">\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.degreeFormHandler} label=\"Degree\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"mx-auto mt-4\" >\n                                <button type=\"submit\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler} style={{ width: 200 }}>Submit</button>\n                            </div>\n\n                        </form>\n                    </CardComponent>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default RegisterInstructor;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { TextField } from '@mui/material';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport _axios from '../../../../apis/axios-instance';\n\nclass RegisterStudent extends Component {\n\n\n    state = {\n        firstName: null,\n        lastName: null,\n        gender: 'male',\n        email: null,\n        phone: null,\n        department: null,\n        studentcode: null,\n        school: null,\n        password: null,\n        confirmPassword: null\n    }\n\n    firstNameFormHandler = (event) => {\n        this.setState({ firstName: event.target.value })\n    }\n    lastNameFormHandler = (event) => {\n\n        this.setState({ lastName: event.target.value })\n    }\n    genderHandler = (event) => {\n        console.log(event.target.value)\n        this.setState({ gender: event.target.value })\n    }\n    emailFormHandler = (event) => {\n        this.setState({ email: event.target.value })\n    }\n    phoneFormHandler = (event) => {\n        this.setState({ phone: event.target.value })\n    }\n    departmentFormHandler = (event) => {\n        this.setState({ department: event.target.value })\n    }\n    studentCodeFormHandler = (event) => {\n        this.setState({ studentcode: event.target.value })\n    }\n    schoolFormHandler = (event) => {\n        this.setState({ school: event.target.value })\n    }\n    passwordFormHandler = (event) => {\n        this.setState({ password: event.target.value })\n    }\n    confirmPasswordFormHandler = (event) => {\n        this.setState({ confirmPassword: event.target.value })\n    }\n\n\n\n    isValidEmail = (email) => {\n        return Boolean(String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            ));\n    }\n\n    isValidName = (name) => {\n        if (name === '' | name == null) {\n            return false\n        }\n        return true\n    }\n    isValidPhone = (number) => {\n        var phoneno = /^\\d{11}$/;\n        if (number === '' | number == null) {\n            return false\n        }\n        if ((number.match(phoneno))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n\n    }\n\n    isPasswordMatch = (password, confirmPassword) => {\n        if (password === '' | password === null) {\n            return false\n        }\n        return (password === confirmPassword)\n    }\n\n\n    validateData = () => {\n        if (!this.isValidName(this.state.firstName)) {\n            return \"Invalid First Name\"\n            // return false\n        }\n        if (!this.isValidName(this.state.lastName)) {\n            return \"Invalid Last Name\"\n\n        }\n        if (!this.isValidPhone(this.state.phone)) {\n            return \"Invalid Phone Number\"\n\n        }\n        if (!this.isValidEmail(this.state.email)) {\n            return \"Invalid Email\"\n\n        }\n        if (!this.isValidName(this.state.department)) {\n            return \"Invalid Department\"\n\n        }\n        if (!this.isValidName(this.state.school)) {\n            return \"Invalid School\"\n\n        }\n        if (!this.isValidName(this.state.studentcode)) {\n            return \"Invalid Student Code\"\n\n        }\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\n            return \"Password Mismatch\"\n\n        }\n        return \"success\"\n    }\n\n    registerHandler = (event) => {\n        // send data into server \n        event.preventDefault()\n\n        const validationMessage = this.validateData()\n        if (validationMessage !== 'success') {\n            // alert(validationMessage)\n            HandleErrors(validationMessage)\n            return\n        }\n\n        var data = {\n\n            \"firstName\": this.state.firstName,\n            \"lastName\": this.state.lastName,\n            \"description\": \"This is new instructor's description\",\n            \"email\": this.state.email,\n            \"password\": this.state.password,\n            \"gender\": this.state.gender,\n            \"image\": \"https://google.com/pepepepaaa\",\n            \"phone\": this.state.phone,\n            \"studentCode\": this.state.studentcode,\n            \"type\": \"student\",\n            \"departments\": [\n                {\n                    \"department_id\": 1\n                }\n            ]\n        }\n        _axios.post('/students/register', data)\n            .then((response) => {\n                this.props.history.push({\n                    pathname: '/verifyEmail',\n                    state: { email: this.state.email }\n                })\n\n            }).catch(err => HandleErrors(err))\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"row justify-content-center text-center my-5\">\n                <div className=\"col-md-8 col-12\">\n                    <CardComponent title={'Signup'}>\n                        <form className=\"m-3\">\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\n                                </div>\n                            </div>\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <label >Gender</label>\n                                    <div className=\"form-group m-2\">\n                                        <div className=\"form-check form-check-inline \">\n                                            <input\n                                                className=\"form-check-input\"\n                                                type=\"radio\"\n                                                name=\"flexRadioDefault\"\n                                                id=\"flexRadioDefault1\"\n                                                value=\"male\"\n                                                checked={this.state.gender === 'male'}\n                                                onChange={this.genderHandler}\n                                            />\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\n                                        </div>\n\n                                        <div className=\"form-check form-check-inline\">\n                                            <input\n                                                className=\"form-check-input\"\n                                                type=\"radio\"\n                                                name=\"flexRadioDefault\"\n                                                id=\"flexRadioDefault2\"\n                                                value=\"female\"\n                                                checked={this.state.gender === 'female'}\n                                                onChange={this.genderHandler}\n                                            />\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group  col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group  col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.studentCodeFormHandler} label=\"Student Code\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"row m-1 my-4\">\n                                <div className=\"form-group col\">\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\n                                </div>\n                                <div className=\"form-group col\">\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Passwor\" variant=\"outlined\" />\n                                </div>\n                            </div>\n\n                            <div className=\"mx-auto mt-4\">\n                                <button type=\"submit\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler}>Submit</button>\n                            </div>\n                        </form>\n                    </CardComponent>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterStudent;\n","import { showSuccess } from '../redux/actions/AppActions'\nimport { store } from \"../redux/store\"\n\nexport default function showSuccessMsg(msg) {\n\n    store.dispatch(\n        showSuccess(msg)\n    )\n\n    return null\n}","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../hooks/handleErrors';\n\nconst Resetpassword = (props) => {\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n\n\n    const ResetHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            HandleErrors(\"Password Mismatch\")\n            return\n        }\n\n        var data = {\n            password: password,\n            email: localStorage.getItem(\"email\"),\n            token: props.match.params.token\n\n        }\n        _axios.put(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            localStorage.removeItem(\"email\")\n            showSuccessMsg(\"Password Reset Successfully\")\n            props.history.push('/login')\n        }).catch((error) => {\n            console.log(error)\n\n        })\n\n\n    }\n    return (\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Reset Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n\n                    <div className=\"form-group\">\n                        <label >New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setPassword(e.target.value)} placeholder=\"New Password\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Confirm New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm New Password\" />\n                    </div>\n\n                    <hr />\n\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={ResetHandler} style={{ width: 200 }}>Reset Password</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return 0\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Resetpassword);\n\n","import { useState, useEffect } from 'react';\n\nfunction getWindowWidth() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nexport default function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}","import React from 'react'\nimport CardComponent from '../../Components/CardComponent/CardComponent'\nimport ReactCodeInput from 'react-verification-code-input';\nimport './VerifyEmail.css'\nimport useWindowWidth from '../../hooks/useWindowWidth';\nimport HandleErrors from '../../hooks/handleErrors';\nimport _axios from '../../apis/axios-instance';\nimport showSuccessMsg from '../../hooks/showSuccessMsg';\n\nconst VerifyEmail = (props) => {\n    const onsubmit = (e) => {\n        verifyEmail(e);\n    }\n    // const resend = () => {\n    //     const data = props.location.state.userInfo\n    //     const type = data['type'];\n    //     if (type === 'instructor') {\n    //         _axios.post('/instructors/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n    //     } else if (type === 'student') {\n    //         _axios.post('/students/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n\n    //     }\n    // }\n\n    const verifyEmail = (codeValue) => {\n        //sent to server\n        // console.log(codeValue)\n        // console.log(props.location.state.email)\n        var data = {\n            email: props.location.state.email,\n            code: codeValue\n        }\n        _axios.post(\"/verifyEmail\", data).then((response) => {\n            // console.log(response)\n            // console.log(\"Success ya wlaaa\")\n            showSuccessMsg(\"Verified Successfully!\")\n            props.history.push({\n                pathname: '/login',\n            })\n\n        }).catch((err) => HandleErrors(err))\n\n    }\n\n    const screenWidth = useWindowWidth();\n    const isMobile = screenWidth < 768\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Verify Email'}>\n                    <div className=\"d-flex flex-column justify-content-center align-items-center py-2\">\n                        <small className='text-green'>We have sent for you a verify code.</small>\n                        <small className='text-green'>Please enter the code here</small>\n                        <ReactCodeInput\n                            onComplete={onsubmit}\n                            className=\"my-4 text-primary\"\n                            type='text'\n                            autoFocus={true}\n                            fieldHeight={85}\n                            fieldWidth={isMobile ? screenWidth / 7 : 66}\n                            fields={6} />\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyEmail\n","import InstructorProfile from '../Views/Profiles/Instructor-Profile/InstructorProfile'\nimport StudentProfile from '../Views/Profiles/Student-Profile/StudentProfile'\nimport forgotPassword from '../Views/Registration/ForgotPassword/forgotPassword'\nimport Login from '../Views/Registration/Login/Login'\nimport RegisterInquiry from '../Views/Registration/Register/RegisterInquiry'\nimport RegisterInstructor from '../Views/Registration/Register/RegisterInstructor/RegisterInstructor'\nimport RegisterStudent from '../Views/Registration/Register/RegisterStudent/RegisterStudent'\nimport ResetPassword from '../Views/Registration/ResetPassword/ResetPassword'\nimport VerifyEmail from '../Views/VerifyEmail/VerifyEmail'\n\nconst AuthRoutes =\n    [\n        { path: \"/login\", component: Login, exact: true },\n        { path: \"/forgot-password\", component: forgotPassword, exact: true },\n        { path: \"/reset-password/:token\", component: ResetPassword, exact: true },\n        { path: \"/register\", component: RegisterInquiry, exact: true },\n        { path: \"/verifyEmail\", component: VerifyEmail, exact: true },\n        { path: \"/register-student\", component: RegisterStudent, exact: true },\n        { path: \"/register-instructor\", component: RegisterInstructor, exact: true },\n        { path: \"/profile/student\", component: StudentProfile, exact: true },\n        { path: \"/profile/instructor\", component: InstructorProfile, exact: true }\n    ]\n\nexport default AuthRoutes\n","import _axios from \"../axios-instance\";\n\nexport class ExamServices {\n    /**\n     * Create new exam with main info\n     * @param {Object} examMainInfo Information about the exam.\n     * @param {string} examMainInfo.name Name of the exam\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\n     * @param {string} examMainInfo.description\n     * @param {number} examMainInfo.totalMark\n     * @param {string} examMainInfo.duration hh:mm:ss\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\n     * @param {string} examMainInfo.examSubject\n     * @returns {Promise<{message, examId}>}\n     */\n    static createNewExam(examMainInfo) {\n        return _axios.post('/exams/step1', examMainInfo);\n    }\n\n\n    /**\n     * Set exam Options by exam id\n     * @param {number} examId\n     * @param {Object} options Exam options.\n     * @param {boolean} options.faceRecognition\n     * @param {boolean} options.questionsRandomOrder\n     * @param {boolean} options.plagiarismCheck\n     * @param {boolean} options.disableSwitchBrowser\n     * @param {('manual'|'auto')} options.gradingMethod \n     * @returns {Promise<{message}>}\n     */\n    static setExamOptions(examId, options) {\n        return _axios.post('/exams/step2', { examId, ...options });\n\n    }\n\n    /**\n     * Add questions to the exam by id\n     * @param {number} examId \n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\n     * @returns {Promise<{message}>}\n     */\n    static addQuestionsToExam(examId, questions) {\n        return _axios.post('/exams/step3', { examId, questions });\n    }\n\n    /**\n     * Add questions to the exam by id\n     * @param {number} examId \n     * @param {Array.<{id:number, mark:number, duration:string}>} questions Array of objects contain question ids\n     * @returns {Promise<{message}>}\n     */\n    static setQuestionsMarksAndDuration(examId, questions) {\n        return _axios.post('/exams/step4', { examId, questions });\n    }\n\n\n    /**\n     * Get All My Exams\n     * @returns {Promise<{exams:Array}>}\n     */\n    static getMyExams() {\n        return _axios.get('/exams');\n    }\n\n\n    /**\n     * Get a specific Exam\n     * @param {number} examId \n     * @returns Promise<{Exam:Object}>\n     */\n    static getExamQuestions(examId) {\n        return _axios.get(`/exams/${examId}/questions`);\n    }\n\n\n    \n    /**\n     * Post a question answer to \n     * @param {object} answerData \n     * Example Object\n     * {\n     \" studentAnswer\": \"seven\"\n     \" option_id\": 1,\n     \" question_id\": 1,\n     \" exam_id\": 1,\n     * } \n     * @returns Promise<{message}>\n     */\n    static addAnswer(answerData) {\n        return _axios.post(`/answers`, answerData);\n    }\n\n     /**\n     * Delete specific exam\n     * @param {number} examId \n     * @returns \n     */\n      static deleteExam(examId) {\n        return _axios.delete(`/exams/${examId}`);\n    }\n\n}\n","import { TextField } from '@mui/material'\nimport React from 'react'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport { Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport moment from 'moment';\n\nconst AddExam = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n\n    const onAddExamHandler = (values, actions) => {\n        if (isEditMode) {\n            history.push(`/exams/${examOldData.id}/set-options`, { exam:examOldData })\n            return\n        }\n\n        ExamServices.createNewExam(values)\n            .then(res => {\n                showSuccessMsg('Exam information has been saved!')\n                history.push(`/exams/${res.examId}/set-options`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            name: examOldData?.name || '',\n                            numberOfTrials: examOldData?.numberOfTrials || '',\n                            description: examOldData?.description || '',\n                            totalMark: examOldData?.totalMark || '',\n                            duration: examOldData?.duration || '',\n                            examSubject: examOldData?.examSubject || '',\n                            startAt: examOldData?.startAt || moment().format('yyyy-MM-DD hh:mm'),\n                            endAt: examOldData?.endAt || moment().add(7, 'days').format('yyyy-MM-DD hh:mm'),\n                        }}\n                        onSubmit={onAddExamHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"name\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.name}\n                                        type=\"text\"\n                                        label=\"Exam Name\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.name && <div id=\"feedback\">{props.errors.name}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"numberOfTrials\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.numberOfTrials}\n                                        type=\"number\"\n                                        label=\"Number Of Trials\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.numberOfTrials && <div id=\"feedback\">{props.errors.numberOfTrials}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"description\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.description}\n                                        type=\"text\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.description && <div id=\"feedback\">{props.errors.description}</div>}\n                                </div>\n\n                                {/* Exam Subject */}\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"examSubject\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.examSubject}\n                                        type=\"text\"\n                                        label=\"Exam Subject\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.examSubject && <div id=\"feedback\">{props.errors.examSubject}</div>}\n                                </div>\n\n                                {/* Start Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"Start Date\"\n                                        inputFormat={'yyyy-MM-DD hh:mm'}\n                                        value={props.values.startAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('startAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('startAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.startAt && <div id=\"feedback\">{props.errors.startAt}</div>}\n                                </div>\n\n                                {/* End Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"End Date\"\n                                        inputFormat={'yyyy-MM-DD hh:mm'}\n                                        value={props.values.endAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('endAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('endAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.endAt && <div id=\"feedback\">{props.errors.endAt}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"totalMark\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.totalMark}\n                                        type=\"text\"\n                                        label=\"Total Mark\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.totalMark && <div id=\"feedback\">{props.errors.totalMark}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"duration\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.duration}\n                                        type=\"text\"\n                                        label=\"Duration\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.duration && <div id=\"feedback\">{props.errors.duration}</div>}\n                                </div>\n\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExam\n","import React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Divider } from '@mui/material';\n\nconst AddationMethodsMenu = ({ methods = [], anchorEl, setAnchorEl }) => {\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    return <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                mt: 1.5,\n                '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                },\n                '&:before': {\n                    content: '\"\"',\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: 'background.paper',\n                    transform: 'translateY(-50%) rotate(45deg)',\n                    zIndex: 0,\n                },\n            },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n        {\n            methods?.map((method, index) => <div key={index} >\n                <MenuItem onClick={method.function}>\n                    {method.displayName}\n                </MenuItem>\n                {(index !== methods.length - 1) && <Divider />}\n            </div>\n            )\n        }\n        \n    </Menu>;\n};\n\nexport default AddationMethodsMenu;\n","export const Colors = {\n    primary: '#2F4F4F',\n    primaryHover: '#3c6464',\n    secondary: '#50303A',\n    black: '#313131',\n    grey: '#AEAEAE',\n    white: '#fff',\n    danger: '#DC3545',\n    success: '#28A745'\n}","import styled from 'styled-components';\n\n\nconst ClickableView = styled.div`\n    cursor: pointer;\n`\n\n\nexport {\n    ClickableView\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdQuestionController = ({ questionTitle, id, deleteFunction = () => { } }) => {\n  const history = useHistory();\n\n  const goToQuestion = () => {\n    /** TODO */\n    history.push('/questions/' + id)\n  }\n\n  return <Wrapper className='mb-4'>\n    <ClickableView onClick={goToQuestion}>\n      <Text>{questionTitle}</Text>\n    </ClickableView>\n\n    <ClickableView onClick={deleteFunction}>\n      <CloseIcon color={'error'} fontSize={'large'} />\n    </ClickableView>\n  </Wrapper>;\n};\n\nexport default BorderdQuestionController;\n","import { PlusCircleOutlined } from '@ant-design/icons'\nimport React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { matchPath, useHistory } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\nimport { ExamServices } from '../../../../apis/Services/ExamService'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu'\nimport BorderdQuestionController from '../../../../Components/QuestionComponents/BorderdQuestionController'\nimport HandleErrors from '../../../../hooks/handleErrors'\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\nimport { removeAllSavedQuestions, removeSavedQuestionFromExam } from '../../../../redux/actions/ExamAction'\n\nconst AddExamQuestions = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const dispatch = useDispatch()\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const AddQuestionHandler = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n\n    const goCreateNewQuestion = () => {\n        history.push('/questions/add', { fromExamCreation: true })\n    }\n    const selectQuestionFromQBank = () => {\n        history.push('/questions', { canSelectQuestionsForExam: true })\n    }\n    const methods = [\n        {\n            displayName: 'Create new question',\n            function: goCreateNewQuestion\n        },\n        {\n            displayName: 'Select from quesiton bank',\n            function: selectQuestionFromQBank\n        }\n    ]\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const examOldQuestions = examOldData?.questions || []\n\n    const [examId, setExamId] = useState(null)\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/add-questions'\n        })\n        console.log(match.params.examId)\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    /** Get Questions of this exam */\n    const [questions, setQuestions] = useState(null);\n    const savedQuestions = useSelector(state => state.exam.examQuestions)\n    const getQuestions = () => {\n        setQuestions([...examOldQuestions, ...savedQuestions])\n    }\n    useEffect(() => {\n        getQuestions();\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submitExamHandler = () => {\n        let submittedQuestions = [...questions]\n        submittedQuestions = submittedQuestions.map(item => { return { question_id: item.id } })\n        ExamServices.addQuestionsToExam(examId, submittedQuestions)\n            .then(res => {\n                history.push('/exams')\n                dispatch(removeAllSavedQuestions())\n                showSuccessMsg('Exam has been created successfully!')\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    const removeQuestionFromListHandler = (id) => {\n        dispatch(removeSavedQuestionFromExam(id))\n        setQuestions(prevState => {\n            console.log(prevState, id)\n            return prevState.filter(item => item.id !== id)\n        })\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Add Questions' : 'View Questions'}>\n                    <div className='p-4'>\n                        <div className='d-flex justify-content-end mb-4'>\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\n                            </button>\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\n                        </div>\n\n                        <div>\n                            {\n                                questions?.map(question =>\n                                    <BorderdQuestionController\n                                        deleteFunction={() => removeQuestionFromListHandler(question.id)}\n                                        id={question.id} key={question.id}\n                                        questionTitle={question.questionText}\n                                    />\n                                )\n                            }\n                        </div>\n\n                        <div>\n                            <button onClick={submitExamHandler} className=\"btn btn-primary mx-auto mt-4\">Submit</button>\n                        </div>\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExamQuestions\n","const ADD_QUESTION = 'ADD_QUESTION'\nconst REMOVE_QUESTION = 'REMOVE_QUESTION'\nconst REMOVE_ALL = 'REMOVE_ALL'\n\n/**\n * \n * @param {{questionText:string, id:string}} questionData \n * @returns \n */\nconst saveAQuestion = (questionData) => {\n    return {\n        type: ADD_QUESTION,\n        payload: questionData\n    }\n}\n/**\n * \n * @param {{id:string}} param0 \n * @returns \n */\nconst removeSavedQuestionFromExam = (id) => {\n    return {\n        type: REMOVE_QUESTION,\n        payload: id\n    }\n}\n\nconst removeAllSavedQuestions = () => {\n    return {\n        type: REMOVE_ALL,\n        payload: null\n    }\n}\n\n\n\n\n\n\nexport { saveAQuestion, removeSavedQuestionFromExam, removeAllSavedQuestions }","import React from 'react'\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../apis/Services/ExamService';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Colors } from '../../../constants/Colors';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { Menu, MenuItem } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: Colors.primary,\n        color: theme.palette.common.white,\n        fontWeight: 700\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 16,\n    },\n    [`&.${tableCellClasses.body}:first-of-type`]: {\n        fontWeight: 700\n    },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&': {\n        cursor: 'pointer'\n    },\n    '&:hover': {\n        backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0,\n    },\n}));\n\nconst Exams = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const addNewExamHandler = (e) => {\n        console.log(e)\n        history.push('/exams/add')\n    }\n\n    const [exams, setExams] = useState(null)\n    useEffect(() => {\n        ExamServices.getMyExams()\n            .then(res => {\n                console.log(res)\n                setExams(res)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const GoToExamDetailsHandler = () => {\n        console.log('hiiiiiiiiiiiii')\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectedExam, setSelectedExam] = React.useState(null);\n\n    const open = Boolean(anchorEl);\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        setSelectedExam(id)\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectedExam(null)\n    };\n\n    const editExamHandler = () => {\n        console.log(selectedExam)\n        let exam = exams.find(item => item.id === selectedExam)\n        console.log(exam)\n        history.push('/exams/edit', { exam })\n        handleClose()\n    }\n\n    const deleteExamHandler = () => {\n        let deleteFun = () => {\n            ExamServices.deleteExam(selectedExam)\n                .then(res => {\n                    showSuccessMsg('Exam deleted successfully!')\n                    let newExams = [...exams]\n                    newExams = newExams.filter(item => item.id !== selectedExam)\n                    setExams(newExams)\n                })\n                .catch(err => HandleErrors(err))\n                .finally(() => {\n                    handleClose() //for menu\n                    dispatch(hideAlert()) //for alert\n                })\n        }\n        dispatch(showAlert({\n            header: 'Delete this exam?',\n            details: 'You are going to delete this exam permanently',\n            alertFunction: deleteFun\n        }))\n    }\n\n    const isNotCompleted = (row) => (!row.config || !row.questions?.length)\n    return (\n        <div className='container'>\n            <div style={{}} className='d-flex mt-4 justify-content-end'>\n                <button onClick={addNewExamHandler} className='btn btn-success'>\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\n                </button>\n            </div>\n\n            <TableContainer className='mt-5' component={Paper}>\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Exam Name</StyledTableCell>\n                            <StyledTableCell align=\"right\">Start Date</StyledTableCell>\n                            <StyledTableCell align=\"right\">End Date</StyledTableCell>\n                            <StyledTableCell align=\"right\">Total Marks</StyledTableCell>\n                            <StyledTableCell align=\"right\">Duration</StyledTableCell>\n                            <StyledTableCell align=\"right\"> </StyledTableCell>\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {exams?.map((row) => (\n                            <StyledTableRow className={isNotCompleted(row) ? 'bg-danger' : ''} onClick={GoToExamDetailsHandler} key={row.id}>\n                                {/* NAME */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </StyledTableCell>\n                                {/* STARE DATE */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} align=\"right\">\n                                    {row.startAt}\n                                </StyledTableCell>\n                                {/* END DATE */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} align=\"right\">\n                                    {row.endAt}\n                                </StyledTableCell>\n                                {/* TOTAL MARK */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} align=\"right\">\n                                    {row.totalMark}\n                                </StyledTableCell>\n                                {/* DURATION */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} align=\"right\">\n                                    {row.duration}\n                                </StyledTableCell>\n                                {/* OPTIONS */}\n                                <StyledTableCell className={isNotCompleted(row) ? 'text-light' : ''} onClick={(e) => handleClick(e, row.id)} align=\"right\">\n                                    <SettingsIcon fontSize='medium' color='secondary' />\n                                </StyledTableCell>\n\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                autoFocus={false}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'basic-button',\n                }}\n            >\n                <MenuItem onClick={editExamHandler}>\n                    <EditIcon />\n                    Edit\n                </MenuItem>\n                <MenuItem color='error' onClick={deleteExamHandler}>\n                    <DeleteForeverIcon color='error' />\n                    Delete\n                </MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default Exams\n","import _axios from \"../axios-instance\";\n\nexport class QuestionServices {\n    /**\n     * Create new question\n     * @param {Object} question Information about the question.\n     * @param {string} question.questionText Question header\n     * @param {string} question.mark\n     * @param {Array<string>} question.answers All the possible answers\n     * @param {string} question.correctAnswer Correct answer\n     * @returns {Promise<any>}\n     */\n    static createMcqQuestion(question) {\n        return _axios.post('/questions/create', { type: 'mcq', ...question });\n    }\n\n    /**\n     * \n     * @param {*} id Question id\n     * @returns \n     */\n    static getQuestionDetails(id) {\n        return _axios.get(`/questions/${id}`);\n    }\n\n    /**\n     * Edit any type of question\n     * @param {*} id question id\n     * @param {*} question Question as it returned from server\n     * @returns \n     */\n    static editQuestion(id, question) {\n        return _axios.put(`/questions/${id}`, { ...question });\n    }\n\n    /**\n     * Delete any type of question\n     * @param {*} id question id\n     * @returns \n     */\n    static deleteQuestion(id) {\n        return _axios.delete(`/questions/${id}`);\n    }\n\n    /**\n     * Get All My Exams\n     * @returns {Promise<Array>}\n     */\n    static getMyQuestions() {\n        return _axios.get('/questions');\n    }\n\n}\n","import { PlusCircleOutlined } from '@ant-design/icons'\nimport React from 'react'\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Colors } from '../../../constants/Colors';\nimport { useState } from 'react';\nimport { Menu, MenuItem } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n        backgroundColor: Colors.primary,\n        color: theme.palette.common.white,\n        fontWeight: 700\n    },\n    [`&.${tableCellClasses.body}`]: {\n        fontSize: 16,\n    },\n    [`&.${tableCellClasses.body}:first-of-type`]: {\n        fontWeight: 700\n    },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&': {\n        cursor: 'pointer'\n    },\n    '&:hover': {\n        backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n        border: 0,\n    },\n}));\n\nconst Questions = () => {\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    const goToAddQuestionPageHandler = () => {\n        history.push(`${history.location.pathname}/add`)\n    }\n\n    /**\n     * Getting Questions\n     */\n    const [questions, setQuestions] = useState(null)\n    const getAllQuestions = () => {\n        QuestionServices.getMyQuestions()\n            .then(res => {\n                console.log(\"Questions =>\", res)\n                setQuestions(res)\n            })\n            .catch(err => HandleErrors(err))\n    }\n    useEffect(() => {\n        getAllQuestions();\n    }, [])\n\n    const GoToQuestionDetailsHandler = () => {\n\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        setSelectedQuestion(id)\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n        setSelectedQuestion(null)\n    };\n\n    const editQuestionHandler = () => {\n        console.log(selectedQuestion)\n        let question = questions.find(item => item.id === selectedQuestion)\n        history.push('/questions/edit', { question })\n        handleClose()\n    }\n\n    const deleteQuestionHandler = () => {\n        let deleteFun = () => {\n            QuestionServices.deleteQuestion(selectedQuestion)\n                .then(res => {\n                    showSuccessMsg('Question deleted successfully!')\n                    let newQuestions = [...questions]\n                    newQuestions = newQuestions.filter(item => item.id !== selectedQuestion)\n                    setQuestions(newQuestions)\n                })\n                .catch(err => HandleErrors(err))\n                .finally(() => {\n                    handleClose() //for menu\n                    dispatch(hideAlert()) //for alert\n                })\n        }\n        // show alert\n        dispatch(showAlert({\n            header: 'Delete this question?',\n            details: 'You are going to delete this question permanently',\n            alertFunction: deleteFun\n        }))\n    }\n\n    return (\n        <div className='container'>\n            <div className='d-flex mt-4 justify-content-end'>\n                <button onClick={goToAddQuestionPageHandler} className='btn btn-success'>\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\n                </button>\n            </div>\n\n            <TableContainer className='mt-5' component={Paper}>\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Question Header</StyledTableCell>\n                            <StyledTableCell align=\"right\">Type</StyledTableCell>\n                            <StyledTableCell align=\"right\">Created Date</StyledTableCell>\n                            <StyledTableCell align=\"right\"> </StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {questions?.map((row) => (\n                            <StyledTableRow onClick={GoToQuestionDetailsHandler} key={row.id}>\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                    {row.questionText}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\n                                <StyledTableCell align=\"right\">{row.created_at}</StyledTableCell>\n                                <StyledTableCell onClick={(e) => handleClick(e, row.id)} align=\"right\">\n                                    <SettingsIcon fontSize='medium' color='secondary' />\n                                </StyledTableCell>\n\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                autoFocus={false}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': 'basic-button',\n                }}\n            >\n                <MenuItem onClick={editQuestionHandler}>\n                    <EditIcon />\n                    Edit\n                </MenuItem>\n                <MenuItem color='error' onClick={deleteQuestionHandler}>\n                    <DeleteForeverIcon color='error' />\n                    Delete\n                </MenuItem>\n            </Menu>\n        </div>\n    )\n}\n\nexport default Questions\n","import { Switch } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Formik } from 'formik';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport { matchPath } from 'react-router-dom';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\n\nconst SetExamOptions = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [examId, setExamId] = useState(null)\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const oldExamConfig = examOldData?.config\n    console.log(oldExamConfig)\n\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/set-options'\n        })\n        console.log(match.params.examId)\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    const setOptionsHandler = (values, actions) => {\n        if (isEditMode && oldExamConfig) {\n            history.push(`/exams/${examOldData?.id}/add-questions`, { exam: examOldData })\n            return\n        }\n\n        let submittedValues = { ...values }\n        submittedValues['gradingMethod'] = submittedValues['gradingMethod'] ? 'auto' : 'manual'\n        console.log(submittedValues)\n        ExamServices.setExamOptions(examId, submittedValues)\n            .then(res => {\n                showSuccessMsg('Exam options has been saved!')\n                history.push(`/exams/${examId}/add-questions`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            faceRecognition: oldExamConfig ? Boolean(oldExamConfig?.faceRecognition) : false,\n                            faceDetection: oldExamConfig ? Boolean(oldExamConfig?.faceDetection) : false,\n                            questionsRandomOrder: oldExamConfig ? Boolean(oldExamConfig?.questionsRandomOrder) : false,\n                            plagiarismCheck: oldExamConfig ? Boolean(oldExamConfig?.plagiarismCheck) : false,\n                            disableSwitchBrowser: oldExamConfig ? Boolean(oldExamConfig?.disableSwitchBrowser) : false,\n                            gradingMethod: oldExamConfig ? Boolean(oldExamConfig?.gradingMethod === 'auto') : true,\n                        }}\n                        onSubmit={setOptionsHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('questionsRandomOrder', !props.values.questionsRandomOrder)}>Questions Random Order</label>\n                                    <Switch\n                                        name='questionsRandomOrder'\n                                        checked={props.values.questionsRandomOrder}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('disableSwitchBrowser', !props.values.disableSwitchBrowser)}>Disable Switch Browser</label>\n                                    <Switch\n                                        name='disableSwitchBrowser'\n                                        checked={props.values.disableSwitchBrowser}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('plagiarismCheck', !props.values.plagiarismCheck)}>Plagiarism Check</label>\n                                    <Switch\n                                        name='plagiarismCheck'\n                                        checked={props.values.plagiarismCheck}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceDetection', !props.values.faceDetection)}>Face Detection</label>\n                                    <Switch\n                                        name='faceDetection'\n                                        checked={props.values.faceDetection}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('gradingMethod', !props.values.gradingMethod)}>Automatic Grading</label>\n                                    <Switch\n                                        name='gradingMethod'\n                                        checked={props.values.gradingMethod}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceRecognition', !props.values.faceRecognition)}>Face Recognition</label>\n                                    <Switch\n                                        name='faceRecognition'\n                                        checked={props.values.faceRecognition}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default SetExamOptions\n","import { TextField } from '@mui/material';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../../../constants/Colors';\nimport * as yup from 'yup';\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\n\nconst Label = styled.label`\n    display: block;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000;\n`\nconst DangerLabel = styled(Label)`\n    color: ${Colors.danger};\n`\nconst SuccessLabel = styled(Label)`\n    color: ${Colors.success};\n`\n\nconst MCQ = ({ initValues, getQuestionCreationRequest = () => { } }) => {\n    const MCQSCHEMA = yup.object().shape({\n        questionText: yup.string().required('This is a required field'),\n        correctAnswer: yup.string().required('This is a required field'),\n        choise1: yup.string().required('This is a required field'),\n        choise2: yup.string().required('This is a required field'),\n        choise3: yup.string().required('This is a required field'),\n    });\n    const submitQuestionHandler = (values) => {\n        if (!initValues) {\n            let creationRequest = QuestionServices.createMcqQuestion({\n                questionText: values.questionText,\n                correctAnswer: values.correctAnswer,\n                answers: [values.correctAnswer, values.choise1, values.choise2, values.choise3]\n            })\n            // pass the request outside the component\n            getQuestionCreationRequest(creationRequest)\n        }\n        //EDIT MODE\n        else {\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\n                questionText: values.questionText,\n                correctAnswer: values.correctAnswer,\n                answers: [values.correctAnswer, values.choise1, values.choise2, values.choise3]\n            })\n\n            // pass the request outside the component\n            getQuestionCreationRequest(editRequest)\n        }\n\n    }\n\n    const mcqChoices = initValues?.mcq?.mcq_answers?.filter(item=>!item.isCorrect)\n    const mcqCorrectAnswer = initValues?.mcq?.mcq_answers?.find(item=>item.isCorrect)\n    return <Formik\n        initialValues={{\n            questionText: initValues?.questionText || '',\n            correctAnswer: mcqCorrectAnswer?.option.value || '',\n            choise1: mcqChoices?.[0].option.value || '',\n            choise2: mcqChoices?.[1].option.value || '',\n            choise3: mcqChoices?.[2].option.value || ''\n        }}\n        enableReinitialize={true}\n        validationSchema={MCQSCHEMA}\n        onSubmit={submitQuestionHandler}\n    >\n        {props => (\n            <form className='m-5' onSubmit={props.handleSubmit}>\n                {/* Question Header */}\n                <div className='mt-4 text-start'>\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\n                    <TextField\n                        name=\"questionText\"\n                        id=\"questionText\"\n                        placeholder='Question on your mind....'\n                        multiline\n                        rows={4}\n                        fullWidth\n                        value={props.values.questionText}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        helperText={props.touched.questionText && props.errors.questionText}\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\n                        variant=\"filled\"\n                    />\n                </div>\n\n                {/* Correct Answer */}\n                <div className='mt-4 text-start'>\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Correct Option</SuccessLabel>\n                    <TextField\n                        name=\"correctAnswer\"\n                        id=\"correctAnswer\"\n                        placeholder='Correct Answer....'\n                        fullWidth\n                        value={props.values.correctAnswer}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\n                    />\n                </div>\n\n                {/* Options #1 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise1' className='mb-2'>Wrong Option 1</DangerLabel>\n                    <TextField\n                        name=\"choise1\"\n                        id=\"choise1\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise1}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise1 && props.errors.choise1}\n                        error={props.touched.choise1 && Boolean(props.errors.choise1)}\n                    />\n                </div>\n\n                {/* Options #2 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise2' className='mb-2'>Wrong Option 2</DangerLabel>\n                    <TextField\n                        name=\"choise2\"\n                        id=\"choise2\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise2}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise2 && props.errors.choise2}\n                        error={props.touched.choise2 && Boolean(props.errors.choise2)}\n                    />\n                </div>\n\n                {/* Options #3 */}\n                <div className='mt-4 text-start'>\n                    <DangerLabel htmlFor='choise3' className='mb-2'>Wrong Option 3</DangerLabel>\n                    <TextField\n                        name=\"choise3\"\n                        id=\"choise3\"\n                        placeholder='Wrong Answer....'\n                        fullWidth\n                        value={props.values.choise3}\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        variant=\"filled\"\n                        helperText={props.touched.choise3 && props.errors.choise3}\n                        error={props.touched.choise3 && Boolean(props.errors.choise3)}\n                    />\n                </div>\n\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\n            </form>\n        )}\n    </Formik>\n};\n\nexport default MCQ;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport MCQ from './QuestionTypes/MCQ';\nimport { ExclamationCircleOutlined } from '@ant-design/icons/lib/icons';\nimport { Colors } from '../../../constants/Colors';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\n\n\nconst AddQuestionScreen = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const dispatch = useDispatch()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.question)\n    const oldQuestion = location.state?.question\n\n    /** get question details */\n    const [oldQuestionDetails, setOldQuestionDetails] = useState(null)\n    useEffect(() => {\n        if (!oldQuestion?.id) return\n        QuestionServices.getQuestionDetails(oldQuestion?.id)\n            .then(res => {\n                setOldQuestionDetails(res?.question)\n            })\n            .catch(err => HandleErrors(err))\n    }, [oldQuestion?.id])\n\n    const [questionTypes, setQuestionTypes] = useState(null);\n    const getQuestionTypes = () => {\n        setQuestionTypes([\n            { id: '123', value: 'mcq' }\n        ])\n    }\n    useEffect(() => {\n        getQuestionTypes();\n    }, []);\n\n\n    const [questionType, setQuestionType] = useState(oldQuestion?.type || '');\n    const questionTypeSelectionMenuMarkup = (\n        <div className='w-50 mx-auto'>\n            <TextField\n                id=\"outlined-select-currency\"\n                select\n                fullWidth\n                label=\"Question Type\"\n                value={questionType}\n                onChange={(event) => setQuestionType(event.target.value)}\n                disabled={isEditMode}\n            >\n                {questionTypes?.map((type) => (\n                    <MenuItem key={type.id} value={type.value}>\n                        {type.value}\n                    </MenuItem>\n                ))}\n            </TextField>\n        </div>\n    )\n\n    const createQuestionHandler = (request) => {\n        request\n            .then(res => {\n                console.log(\"Question request\", res)\n\n                let isFromExamCreation = location.state?.fromExamCreation\n                if (isFromExamCreation) {\n                    dispatch(saveAQuestion({ questionText: res.questionText, id: res.id }))\n                }\n                showSuccessMsg(\"Request done successfully\")\n                history.goBack()\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return <div className=\"row justify-content-center text-center my-5\">\n        <div className=\"col-md-8 col-12\">\n            <CardComponent title={!isEditMode ? 'Add Question' : 'Edit Question'}>\n                <div className='p-4'>\n                    {questionTypes && questionTypeSelectionMenuMarkup}\n\n                    {!questionType &&\n                        <div className='d-flex flex-row justify-content-center align-items-center mt-5'>\n                            <ExclamationCircleOutlined size={36} style={{ color: Colors.danger, marginInlineEnd: '.5rem' }} />\n                            <h6 className='text-danger m-0'>Please Choose Question Type</h6>\n                        </div>\n                    }\n\n                    {questionType === 'mcq' &&\n                        <div>\n                            <MCQ\n                                initValues={oldQuestionDetails?.type === 'mcq' ? oldQuestionDetails : null}\n                                getQuestionCreationRequest={createQuestionHandler}\n                            />\n                        </div>\n                    }\n                </div>\n            </CardComponent>\n        </div>\n    </div>\n};\n\nexport default AddQuestionScreen;\n","import AddExam from '../Views/Instructor/Exams/AddExam/AddExam'\nimport AddExamQuestions from '../Views/Instructor/Exams/AddExamQuestions/AddExamQuestions'\nimport Exams from '../Views/Instructor/Exams/Exams'\nimport Questions from '../Views/Instructor/Questions/Questions'\nimport SetExamOptions from '../Views/Instructor/Exams/SetExamOptions/SetExamOptions'\nimport AddQuestionScreen from '../Views/Instructor/Questions/AddQuestionScreen'\nimport QuestionViewScreen from '../Views/Instructor/Questions/QuestionViewScreen'\n\nconst InstructorRoutes =\n    [\n        { path: '/exams', component: Exams, exact: true },\n        { path: '/exams/add', component: AddExam, exact: true },\n        { path: '/exams/edit', component: AddExam, exact: true },\n        { path: '/exams/:examId/set-options', component: SetExamOptions, exact: true },\n        { path: '/exams/:examId/add-questions', component: AddExamQuestions, exact: true },\n\n        { path: '/questions', component: Questions, exact: true },\n        { path: '/questions/add', component: AddQuestionScreen, exact: true },\n        { path: '/questions/edit', component: AddQuestionScreen, exact: true },\n        { path: '/questions/:questionId', component: QuestionViewScreen, exact: true }\n    ]\nexport default InstructorRoutes\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst QuestionViewScreen = () => {\n    const { questionId } = useParams()\n    return <div>\n        <h1>question # {questionId}</h1>\n    </div>;\n};\n\nexport default QuestionViewScreen;\n","import Home from '../Views/Home/Home'\n\nconst MainRoutes =\n    [\n        { path: \"/\", component: Home, exact: true },\n    ]\n\nexport default MainRoutes\n","import React from 'react'\nimport './Home.css'\n\nconst Home = () => {\n    return (\n        \n        <div className='main' style={{minHeight:\"80vh\"}}>\n            {/* <h1>Hiii</h1> */}\n            {/* <Signupinquiry></Signupinquiry> */}\n            {/* <Signup></Signup> */}\n            {/* <Login></Login> */}\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\n\nconst Examinstructions = (props) => {\n    const exam = props.location.state.exam\n    const goToExamHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: `/exams/${exam.id}/start`,\n            state: { exam: exam }\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"row justify-content-center text-center my-5\">\n                <div className=\"col-md-8 col-12\">\n                    <CardComponent title={'Before The Exam'}>\n                        <div className=\"m-5 text-start \">\n                            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                                <CardContent>\n                                    {/* Instructions Title */}\n                                    <Typography className='text-danger font-weight-bold' variant=\"h4\" component=\"div\">\n                                        Important Instructions\n                                        <hr />\n                                    </Typography>\n                                    <Typography variant=\"body3\">\n                                        <ul>\n                                            <li>\n                                                Don't use internet for getting information.\n\n                                            </li>\n                                            <li>\n                                                No one else can be in the room with you.\n\n                                            </li>\n                                            <li>\n                                                Time is limited, so organize your time well with questions.\n\n                                            </li>\n                                            <li>\n                                                The room must be well-lit and you must be clearly visible.\n                                            </li>\n\n                                        </ul>\n                                        <div className='text-center text-success' >\n                                            Good Luck with your exam..!!\n                                        </div>\n\n                                    </Typography>\n                                </CardContent>\n                                <CardActions className='d-flex m-2 justify-content-end'>\n\n                                    <Button\n                                        className='btn m-2 p-2 text-white'\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color='success'\n                                        onClick={goToExamHandler}\n                                    >\n                                        Start Exam Now\n                                    </Button>\n\n                                </CardActions>\n                            </Card>\n\n\n\n                        </div>\n                    </CardComponent>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Examinstructions);\n","import React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { ExamServices } from '../../../apis/Services/ExamService';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { useEffect } from 'react';\nimport moment from 'moment';\n\n\n\n\n\nconst ShowExams = (props) => {\n    // const [exam, setExam] = useState(null)\n\n    const goToInstructionsHandler = (event, exam) => {\n        // this code pevents from going to another page\n        //event.preventDefault()\n\n        props.history.push({\n            pathname: `/exams/${exam.id}`,\n            state: { exam: exam }\n        })\n    }\n\n    /**\n     * Get exams\n     */\n    const [exams, setExams] = useState(null)\n    useEffect(() => {\n        ExamServices.getMyExams()\n            .then(res => {\n                // console.log(res)\n                setExams(res)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Your Exams'}>\n                    <div className=\"m-5 text-start \">\n                        {exams?.map(exam => (\n                            <Card key={exam.id} className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                                <CardContent>\n                                    {/* Exam Title */}\n                                    <Typography variant=\"h4\" component=\"div\">\n                                        {exam.name}\n                                        <hr />\n                                    </Typography>\n                                    <Typography variant=\"body3\">\n                                        {exam.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions className='d-flex m-2 justify-content-between'>\n                                    <Typography variant=\"body3\">\n                                        Due: {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\n                                    </Typography>\n                                    <Typography variant=\"body3\">\n                                        Time: {exam.duration}\n                                    </Typography>\n                                    <Button\n                                        className='btn m-2 p-2 btn-primary text-white'\n                                        size=\"small\"\n                                        onClick={(e) => goToInstructionsHandler(e, exam)}\n                                    >\n                                        Go to this Exam\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        ))}\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(ShowExams);\n","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\n// import { connect } from 'react-redux';\n// import { saveAnswer } from '../../../../redux/actions/QuestionActions'\n\nconst MCQ = (props) => {\n\n    const [chosenOptionID, setChosenOptionID] = useState(null);\n    const [chosenAnswer, setChosenAnswer] = useState(null);\n\n\n\n    useEffect(() => {\n        if (props.currentQuestionNumber !== props.questionIndex - 1) return\n\n        setChosenOptionID(props.savedStudentAnswer?.chosenOptionID)\n        setChosenAnswer(props.savedStudentAnswer?.chosenAnswer)\n    // eslint-disable-next-line\n    }, [props.currentQuestionNumber]);\n\n\n\n    const onChangeHandler = (e) => {\n\n        setChosenOptionID(parseInt(e.target.id))\n        setChosenAnswer(e.target.value)\n\n        // const answer = {\n        //     chosenOptionID: chosenOptionID,\n        //     chosenAnswer: chosenAnswer\n\n        // }\n        // console.log(props)\n        // props.saveAns(props.questionIndex, answer)\n\n        // suppose that you send data to redux here\n    }\n\n    let isCheckedCondition = (ansIndex) => {\n        // return chosenOptionID && parseInt(chosenOptionID) === parseInt(props.savedStudentAnswer?.chosenOptionID)\n        return parseInt(chosenOptionID) === parseInt(props.answers[ansIndex].id)\n    }\n    return (\n        <div className=\"m-5 text-start \">\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                <CardContent>\n\n                    {/* Question Label */}\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\n                        {/* TODO, FETCH QUESTION NUMBER */}\n                        Question {props.questionIndex}\n                        <hr />\n                    </Typography>\n\n\n                    {/* Question Text */}\n                    <Typography className='m-3' variant='h5'>\n                        {props.questionText}\n\n                    </Typography>\n\n                </CardContent>\n\n\n                {/* MCQ Content */}\n                <CardContent className=''>\n                    <form >\n                        {/* Option 1 */}\n                        <div className=\"form-check m-3\">\n                            <input\n                                className=\"form-check-input\"\n                                checked={isCheckedCondition(0)}\n                                type=\"radio\"\n                                value={props.answers[0].value}\n                                id={props.answers[0].id}\n                                onChange={onChangeHandler}\n                                name=\"flexRadioDefault\" />\n\n                            <label className=\"form-check-label\" htmlFor={props.answers[0].id}>\n                                {props.answers[0].value}\n                            </label>\n                        </div>\n\n\n\n                        {/* Option 2 */}\n                        <div className=\"form-check m-3\">\n                            <input\n                                className=\"form-check-input\"\n                                checked={isCheckedCondition(1)}\n                                type=\"radio\"\n                                value={props.answers[1].value}\n                                id={props.answers[1].id}\n                                onChange={onChangeHandler}\n                                name=\"flexRadioDefault\" />\n\n                            <label className=\"form-check-label\" htmlFor={props.answers[1].id}>\n\n                                {props.answers[1].value}\n                            </label>\n                        </div>\n\n\n\n\n                        {/* Option 3 */}\n                        <div className=\"form-check m-3\">\n                            <input\n                                className=\"form-check-input\"\n                                checked={isCheckedCondition(2)}\n                                type=\"radio\"\n                                value={props.answers[2].value}\n                                id={props.answers[2].id}\n                                onChange={onChangeHandler}\n                                name=\"flexRadioDefault\" />\n\n                            <label className=\"form-check-label\" htmlFor={props.answers[2].id} >\n\n                                {props.answers[2].value}\n                            </label>\n                        </div>\n\n\n\n                        {/* Option 4 */}\n                        <div className=\"form-check m-3\">\n                            <input\n                                className=\"form-check-input\"\n                                checked={isCheckedCondition(3)}\n                                type=\"radio\"\n                                value={props.answers[3].value}\n                                id={props.answers[3].id}\n                                onChange={onChangeHandler}\n                                name=\"flexRadioDefault\" />\n\n                            <label className=\"form-check-label\" htmlFor={props.answers[3].id}>\n                                {props.answers[3].value}\n                            </label>\n                        </div>\n\n\n\n                    </form>\n\n\n\n\n                </CardContent>\n\n\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\n\n                    <button\n                        className='btn m-2 p-auto btn-danger text-white'\n                        variant=\"contained\"\n                        onClick={props.clickedPrevious}\n                        disabled={props.previousButtonDisabled}\n                    >\n                        Previous\n                    </button>\n\n                    <button\n                        className='btn m-2 p-auto btn-primary text-white'\n                        variant=\"contained\"\n                        onClick={() => {\n                            props.clickedNext(chosenOptionID, chosenAnswer)\n                            props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\n                            setChosenOptionID(null)\n                        }}\n                    >\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\n                    </button>\n\n                </CardActions>\n            </Card>\n        </div>\n\n    );\n}\n\n\nexport default MCQ;\n","import ExamInstructions from \"../Views/Student/ExamInstructions/ExamInstructions\"\nimport ShowExams from \"../Views/Student/ShowExams/ShowExams\"\nimport TakeExam from \"../Views/Student/TakeExam/TakeExam\"\nimport WellDone from \"../Views/Student/WellDone/WellDone\"\n\nconst StudentRoutes =\n    [\n        { path: '/exams', component: ShowExams, exact: true },\n        { path: \"/exams/:examId\", component: ExamInstructions, exact: true },\n        { path: \"/exams/:examId/start\", component: TakeExam, exact: true },\n        { path: \"/done\", component: WellDone, exact: true },\n\n    ]\nexport default StudentRoutes\n","import React, { useEffect } from 'react';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport MCQ from '../Questions/MCQ/MCQ';\nimport { ExamServices } from '../../../apis/Services/ExamService';\nimport { useState } from 'react';\nimport HandleErrors from '../../../hooks/handleErrors';\nconst TakeExam = (props) => {\n    const exam = props.location.state.exam\n    // console.log(\"Exam\")\n    // console.log(exam.name)\n    const [questions, setQuestions] = useState(null);\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\n\n\n    useEffect(() => {\n        ExamServices.getExamQuestions(exam.id)\n            .then((response) => {\n                setQuestions(response.questions.map((question) => { return question }))\n\n            }).catch((error) => {\n                HandleErrors(error)\n            })\n    }, [exam.id]);\n\n\n\n    const clickedNextHandler = (chosenOptionID, chosenAnswer) => {\n        // // this code pevents from going to another page\n        // event.preventDefault()\n\n\n        // Add this answer to backend\n        const answerData = {\n            \"option_id\": chosenOptionID,\n            \"studentAnswer\": chosenAnswer,\n            \"question_id\": questions[currentQuestionNumber].id,\n            \"exam_id\": exam.id\n\n        }\n\n        // adding choice to localstorage for backward saving\n        localStorage.setItem(currentQuestionNumber, chosenOptionID)\n\n        ExamServices.addAnswer(answerData)\n            .then(() => {\n                // Answer Added to backend\n\n            }).catch((error) => {\n                HandleErrors(error)\n            })\n\n\n\n        // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \n        const newQuestionNumber = currentQuestionNumber + 1\n\n\n        // If we are in the last question, then we should refer to the Done Page\n        if (newQuestionNumber === questions.length) {\n            props.history.push({\n                pathname: '/done',\n                state: { examName: exam.name }\n            })\n\n            return\n        }\n\n        // advance to the next question\n        setCurrentQuestionNumber(newQuestionNumber)\n\n        // console.log(currentQuestionNumber)\n\n\n\n\n    }\n    const clickedPreviousHandler = () => {\n\n        // Add this answer to backend\n\n\n        // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \n\n        setCurrentQuestionNumber(currentQuestionNumber - 1)\n\n        // retrieving old choice from localstorage\n\n        // console.log(currentQuestionNumber)\n\n\n\n\n    }\n\n\n    const getAnswer = (questionIndex, chosenOptionID, chosenAnswer) => {\n\n        setQuestions((prevState) => {\n            let newQuestions = [...prevState]\n            newQuestions[questionIndex - 1] = {\n                ...newQuestions[questionIndex - 1],\n                studentAnswer: {\n                    chosenOptionID,\n                    chosenAnswer\n                }\n            }\n    \n            return newQuestions\n        })\n        \n    \n    }\n    let My_Questions_Markup = questions?.map((question, index) => {\n        return (\n            <MCQ\n                questionIndex={index + 1}\n\n                currentQuestionNumber={currentQuestionNumber}\n                key={props.questionIndex}\n\n                questionText={question.questionText}\n                answers={question.answers}\n\n                clickedNext={clickedNextHandler}\n                clickedPrevious={clickedPreviousHandler}\n\n                previousButtonDisabled={currentQuestionNumber === 0}\n                changeNextNameIntoFinish={index === questions.length - 1}\n\n                studentAnswerFunction={getAnswer}\n\n                savedStudentAnswer={question?.studentAnswer}\n\n            >\n\n            </MCQ>\n        )\n\n    })\n\n\n\n\n    return (\n        <div>\n            <div className=\"row justify-content-center text-center my-5\">\n                <div className=\"col-md-8 col-12\">\n                    <CardComponent title={exam.name}>\n\n                        {My_Questions_Markup?.[currentQuestionNumber]}\n\n\n\n                    </CardComponent>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(TakeExam);\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport Typography from '@mui/material/Typography';\nconst WellDone = (props) => {\n    const examName = props.location.state.examName\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className='col-md-8 col-12'>\n\n                <CardComponent title={examName}>\n                    <div className=\"m-5 text-start text-center\">\n\n\n                        <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                            <CardContent>\n\n                                {/* Well Done Label */}\n                                <Typography className='font-weight-bold ' variant=\"h3\" component=\"div\">\n\n                                    Well Done\n                                </Typography>\n\n\n                                {/* Hope Text */}\n                                <Typography className='m-3 text-success' variant='h4'>\n                                    We hope you done well in this exam and best wishes for next....!\n                                </Typography>\n\n                            </CardContent>\n\n\n                            <button\n                                className='btn m-2 p-auto btn-primary text-white'\n                                onClick={() => {props.history.push('/')}}\n                            >\n                                Homepage\n\n\n                            </button>\n\n\n\n                        </Card>\n                    </div>\n                </CardComponent>\n            </div>\n        </div >\n    )\n}\nexport default WellDone;\n","import Classes from \"../Views/Instructor/Classes/Classes\"\n\nconst UserRoutes =\n    [\n        { path: '/classes', component: Classes, exact: true },\n    ]\nexport default UserRoutes\n","import React from 'react'\n\nconst Classes = () => {\n    return (\n        <div>\n            <h1>Classes</h1>\n        </div>\n    )\n}\n\nexport default Classes\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport AuthRoutes from './AuthRoutes'\nimport InstructorRoutes from './InstructorRoutes'\nimport MainRoutes from './MainRoutes'\nimport StudentRoutes from './StudentRoutes'\nimport UserRoutes from './UserRoutes'\n\nconst Routes = () => {\n    const userType = useSelector(state=>state.auth.userType)\n    console.log(userType)\n    return (\n        <Switch>\n            {MainRoutes.map((props, index) => <Route key={index} {...props} />)}\n\n            {AuthRoutes.map((props, index) => <Route key={index}{...props} />)}\n            \n            {/* FOR ANY USER */}\n            {userType && UserRoutes.map((props, index) => <Route key={index} {...props} />)}\n\n            {/* ONLY FOR INSTRUCTOR */}\n            {userType==='instructor' && InstructorRoutes.map((props, index) => <Route key={index} {...props} />)}\n\n            {/* ONLY FOR STUDENT */}\n            {userType==='student' && StudentRoutes.map((props, index) => <Route key={index} {...props} />)}\n            \n        </Switch>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions/AppActions';\nimport { Button } from '@mui/material';\n\nconst Alert = () => {\n    const alertObject = useSelector(state => state.app.alertObject)\n    const dispatch = useDispatch()\n    const closeHandler = () => {\n        dispatch(hideAlert())\n    }\n    const confirmHandler = () => {\n        alertObject?.alertFunction()\n    }\n\n    return (\n        <Dialog\n            open={Boolean(alertObject?.header)}\n            onClose={closeHandler}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {alertObject?.header}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {alertObject?.details}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} autoFocus>Cancel</Button>\n                <Button color='error' onClick={confirmHandler}>\n                    Yes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Alert","import { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport Footer from './Components/Footer/Footer';\nimport Header from './Components/Header/Header';\nimport { setUserType, signin } from \"./redux/actions/AuthActions\";\nimport Toast from './Components/Toast'\nimport Routes from \"./routes\";\nimport Alert from \"./Components/Dialogs/Alert\";\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  const _bootstrapFunction = useCallback(() => {\n    let isAuth = localStorage.getItem('token');\n    let userType = localStorage.getItem('userType');\n\n    if (!isAuth) return\n    if (!userType) return\n\n    dispatch(signin(isAuth))\n    dispatch(setUserType(userType))\n  }, [dispatch])\n\n  // Bootstrap function\n  useEffect(() => {\n    _bootstrapFunction();\n  }, [_bootstrapFunction])\n\n  return (\n    <BrowserRouter>\n      <Header />\n\n      <div style={{ minHeight: '100vh' }}>\n        <Routes />\n      </div>\n\n      <Toast />\n      <Alert />\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2F4F4F',\n        },\n        secondary: {\n            main: '#50303A',\n        },\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './Theme/MaterialUiTheme';\n\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}