{"version":3,"sources":["assets/images/logo.png","Components/Footer/Footer.js","redux/actions/AuthActions.js","Components/Header/Header.js","redux/actions/AppActions.js","Components/Toast/SuccessToast.js","Components/Toast/ErrorToast.js","Components/Toast/index.js","apis/Domain.js","apis/axios-instance.js","redux/actions/actionTypes.js","Views/Registration/ForgotPassword/forgotPassword.jsx","apis/Endpoints/AuthEndpoints.js","apis/Network.js","apis/Services/AuthService.js","Components/CardComponent/CardComponent.js","redux/reducers/AppReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ResetReducer.js","redux/reducers/ExamReducer.js","redux/store.js","hooks/handleErrors.js","Views/Registration/Login/Login.jsx","Views/Registration/Register/RegisterInquiry.jsx","apis/Services/UploadService.js","Views/Registration/Register/RegisterInstructor/RegisterInstructor.jsx","Views/Registration/Register/RegisterStudent/RegisterStudent.jsx","hooks/showSuccessMsg.js","Views/Registration/ResetPassword/ResetPassword.jsx","hooks/useWindowWidth.js","Views/VerifyEmail/VerifyEmail.jsx","routes/AuthRoutes.js","apis/Services/ExamService.js","Views/Instructor/Exams/AddExam/AddExam.js","Components/QuestionComponents/AddationMethodsMenu.js","constants/Colors.js","constants/GlobalStyle.js","Components/QuestionComponents/BorderdQuestionController.js","redux/actions/ExamAction.js","Views/Instructor/Exams/AddExamQuestions/AddExamQuestions.js","Views/Instructor/Exams/Exams.js","constants/QuestionTypes.js","apis/Services/QuestionService.js","Views/Instructor/Questions/Questions.js","Views/Instructor/Exams/SetExamOptions/SetExamOptions.js","Views/Instructor/Questions/QuestionTypes/MCQ.js","Views/Instructor/Questions/QuestionTypes/Essay.js","hooks/useRandomValue.js","Views/Instructor/Questions/QuestionTypes/Formula.js","Views/Instructor/Questions/AddQuestionScreen.js","Components/AnsweredQuestion/McqAnswer.js","Components/AnsweredQuestion/EssayAnswer.js","Views/Instructor/Questions/QuestionViewScreen.js","apis/Services/MarkExamService.js","Views/Instructor/Exams/ExamView/ExamOverview.js","Components/NoContentComponent/NoContentComponent.js","hooks/useImageResolver.js","Views/Instructor/Exams/ExamView/StudentsList.js","constants/CheatTypes.js","apis/Services/CheatService.js","constants/CheatActions.js","assets/images/mofty.jpg","assets/images/mofty2.jpg","Views/Instructor/Exams/ExamView/ExamReport.jsx","Views/Instructor/Exams/ExamView/index.jsx","Views/Instructor/Exams/ExamView/StudentSolvedExam.js","routes/InstructorRoutes.js","routes/MainRoutes.js","Views/Home/Home.js","Views/Student/TakePhoto/TakePhoto.jsx","Components/Loader/Loader.js","Views/Student/ExamInstructions/ExamInstructions.jsx","Views/Student/MyResults/index.js","apis/Endpoints/StudentEndpoints.js","apis/Services/StudentService.js","Views/Student/ResultDetails/index.js","Views/Student/ShowExams/ShowExams.jsx","Views/Student/Questions/MCQ/MCQ.jsx","Views/Student/Questions/Essay/Essay.jsx","hooks/useListShuffler.js","hooks/useSwitchBrowserDetector.js","assets/images/cheat-inspector.png","Components/CheaterPopup/CheaterPopup.js","Components/ExamCounter/ExamCounter.js","Views/Student/TakeExam/TakeExam.jsx","routes/StudentRoutes.js","Views/Student/WellDone/WellDone.jsx","Views/Instructor/Classes/Classes.js","apis/Endpoints/InstructorEndpoints.js","apis/Services/InstructorService.js","Views/Profiles/Instructor-Profile/InstructorProfile.js","routes/UserRoutes.js","Views/Profiles/Student-Profile/StudentProfile.js","routes/index.js","Components/Dialogs/Alert.js","App.js","reportWebVitals.js","Theme/MaterialUiTheme.js","index.js","Components/ExamCounter/ExamCounter.module.css"],"names":["iconStyle","fontSize","color","margin","cursor","isMobile","window","innerWidth","Footer","style","marginTop","className","height","src","Logo","alt","FacebookOutlined","InstagramOutlined","PhoneOutlined","Date","getFullYear","signin","setUserToken","type","payload","setUserType","Header","isAuth","useSelector","state","auth","userToken","userType","history","useHistory","dispatch","useDispatch","isInstructor","to","id","activeclassname","exact","onClick","localStorage","clear","push","LogoutOutlined","UserOutlined","showError","msg","showSuccess","showAlert","alertObject","Alert","React","forwardRef","props","ref","elevation","variant","SuccessToast","successMsg","app","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","severity","ErrorToast","errorMsg","autoHideDuration","index","DomainUrl","_axios","axios","create","baseURL","headers","interceptors","request","use","config","a","token","getItem","undefined","err","Promise","reject","response","data","ADD_EMAIL","connect","email_address","rst","email","saveEmail","actionTypes","useState","setEmail","onChange","e","target","value","placeholder","width","event","preventDefault","setItem","console","log","post","then","catch","error","AUTHENDPOINTS","login","url","method","verifyEmail","changePassword","logout","ResetPassword","Network","this","jwt","init","addAuth","fetch","mode","getHeaders","promise","ok","status","resolve","json","handleErrorsBasedOnStatus","originalHeaders","Accept","Authorization","AuthServices","values","body","JSON","stringify","CardComponent","children","title","initStates","initialState","ResetReducer","action","examQuestions","ExamReducer","newExamQuestions","newExamQuestion","filter","item","rootReducer","combineReducers","exam","question","QuestionReducer","middleware","applyMiddleware","thunk","store","createStore","HandleErrors","showErrorToast","message","String","includes","withRouter","password","setPassword","TextField","fullWidth","label","res","user","pathname","Registerinquiry","RegisterAsStudentHandler","RegisterAsInstructorHandler","MaxWidth","Component","UploadServices","file","formDate","FormData","append","Input","styled","display","RegisterInstructor","firstName","lastName","gender","phone","department","degree","school","confirmPassword","firstNameFormHandler","setState","lastNameFormHandler","genderHandler","emailFormHandler","phoneFormHandler","departmentFormHandler","degreeFormHandler","schoolFormHandler","passwordFormHandler","confirmPasswordFormHandler","isValidEmail","Boolean","toLowerCase","match","isValidName","name","isValidPhone","number","isPasswordMatch","validateData","selectedFile","registerHandler","validationMessage","uploadImage","image","userInfo","handleUploadClick","files","reader","FileReader","readAsDataURL","onloadend","photoName","personalImageUrl","result","bind","checked","htmlFor","Typography","accept","IconButton","component","loading","RegisterStudent","studentcode","studentCodeFormHandler","showSuccessMsg","setConfirmPassword","params","put","removeItem","getWindowWidth","VerifyEmail","codeValue","location","code","screenWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","onComplete","autoFocus","fieldHeight","fieldWidth","fields","AuthRoutes","path","Login","forgotPassword","RegisterInquiry","ExamServices","examMainInfo","examId","options","questions","get","isMarked","answerData","delete","AddExam","useLocation","isEditMode","examOldData","initialValues","numberOfTrials","description","totalMark","duration","examSubject","startAt","moment","setMinutes","format","endAt","add","onSubmit","actions","editExamMainInfo","createNewExam","handleSubmit","handleChange","onBlur","handleBlur","errors","MobileDateTimePicker","minutesStep","inputFormat","onClose","setFieldTouched","date","selectedDate","setFieldValue","renderInput","AddationMethodsMenu","methods","anchorEl","setAnchorEl","handleClose","Menu","PaperProps","sx","overflow","mt","ml","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","map","MenuItem","function","displayName","length","Divider","Colors","ClickableView","div","Wrapper","Text","span","BorderdQuestionController","questionTitle","deleteFunction","saveAQuestion","questionData","AddExamQuestions","fromExamCreation","canSelectQuestionsForExam","examOldQuestions","setExamId","matchPath","setQuestions","savedQuestions","currentTarget","PlusCircleOutlined","removeSavedQuestionFromExam","prevState","questionText","submittedQuestions","question_id","addQuestionsToExam","StyledTableCell","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","white","fontWeight","StyledTableRow","TableRow","hover","border","Exams","exams","setExams","getExamsHandler","getMyExams","selectedExam","setSelectedExam","isExamNotCompleted","row","isSelectedExamPublished","selectedExamObject","find","isPublished","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","scope","Chip","size","icon","stopPropagation","MenuListProps","isWantToBePublish","examName","makeExamPublished","makeExamUnPublished","finally","makePublishHandler","header","details","alertFunction","deleteExam","newExams","QuestionTypes","QuestionServices","Questions","isSelectionMode","getMyQuestions","selectedQuestion","setSelectedQuestion","isAllSelected","every","isSelected","selectedQuestions","goBack","Checkbox","questionId","newQuestions","onCheckHandler","created_at","deleteQuestion","SetExamOptions","oldExamConfig","faceRecognition","faceDetection","questionsRandomOrder","plagiarismCheck","disableSwitchBrowser","gradingMethod","submittedValues","editExamOptions","setExamOptions","Switch","Label","DangerLabel","SuccessLabel","MCQ","initValues","getQuestionCreationRequest","MCQSCHEMA","yup","shape","required","correctAnswer","choice1","choice2","choice3","mcqChoices","mcq","mcq_answers","isCorrect","mcqCorrectAnswer","option","enableReinitialize","validationSchema","editRequest","editQuestion","answers","creationRequest","createMcqQuestion","multiline","rows","helperText","touched","Essay","EssaySchema","createEssayQuestion","getRandomValue","first","second","max","Math","min","floor","random","useRandomValue","VAR_REGEX","BRACKETS_REGEX","Formula","formula","numberOfQuestions","vars","setVars","uniqueTokensList","setUniqueTokensList","setQuestionText","tokenList","matchAll","editedToken","replace","uniqueTokens","Array","from","Set","editedList","setGeneratedQuestions","generatedQuestions","numberOfGeneratedQuestion","finalQuestionValue","variablesAttr","forEach","element","generatedAttempt","Number","variables","var","finalValue","mexp","eval","variable","newVars","onChangeMin","onChangeMax","textDecorationLine","AddQuestionScreen","oldQuestion","oldQuestionDetails","setOldQuestionDetails","getQuestionDetails","questionTypes","setQuestionTypes","questionType","setQuestionType","questionTypeSelectionMenuMarkup","select","disabled","createQuestionHandler","marginInlineEnd","McqAnswer","choices","studentAnswer","markAsRight","markAsWrong","questionMark","studentMark","formatedAnswer","answer","displayText","isCorrectStudentAnswer","Card","CardHeader","CardContent","FormControl","RadioGroup","defaultValue","choice","FormControlLabel","control","Radio","bottom","EssayAnswer","textDecoration","QuestionViewScreen","useParams","setQuestion","question_option","MarkExamServices","studentId","student_id","AntiCheatingTimeline","examConfig","isRandom","isDisableSwitch","isplagiarism","isFaceDetection","isFaceVerify","Timeline","TimelineItem","TimelineOppositeContent","m","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","ExamOverview","examConfigs","NoContentComponent","text","useImageResolver","imageName","StudentsList","students","getStudentExams","imageResolver","Button","markAllAutomatic","List","ListItem","ListItemButton","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","primary","secondary","mark","attempt","CheatTypes","CheatServices","ActionData","CheatActions","ExamReport","cheaters","setCheaters","decrementDegree","setDecrementDegree","getCheaters","actionHandler","cheaterDetails","performStudentDecrement","cheater_details","profileImage","studentName","ExamView","selectedTab","setSelectedTab","URLSearchParams","search","getExamQuestions","studentAnswers","setStudentAnswers","getAllStudentsAnswers","solvedExams","setExamConfigs","getExamConfig","configuration","Box","Tabs","newValue","textColor","indicatorColor","Tab","StudentCard","isVerified","numberOfFaces","markAutoFun","objectFit","borderRadius","InstructorRoutes","studentExamResult","setStudentExamResult","markAsRightHandler","manualMark","getStudentAnswers","markAsWrongHandler","getSpecificStudentAnswers","markSpecificStudentAutomatic","solution","pivot","option_id","MainRoutes","minHeight","TakePhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","captured","clicked","audio","screenshotFormat","Loader","class","isLoading","setIsLoading","isPhotoTaken","setIsPhotoTaken","noOfFaces","setNoOfFaces","photoVerified","setPhotoVerified","photoTakenHandler","img","faceDetectionData","faceVerificationData","applyFaceDetection","verified","applyFaceVerification","mustVerifyFace","CardActions","trigger","modal","lockScroll","close","startExamData","startExam","MyResults","getAllPublishedExams","Grid","justifyContent","direction","isSubmitted","alignItems","STUDENT_ENDPOINTS","register","getMyProfile","StudentServices","ResultDetails","getSpecificExamResults","totalQuestionMark","getRemainingEndTime","examEndDate","diff","remainingMins","hours","mins","goToInstructionsHandler","fontStyle","chosenOptionID","setChosenOptionID","chosenAnswer","setChosenAnswer","currentQuestionNumber","questionIndex","savedStudentAnswer","onChangeHandler","parseInt","isCheckedCondition","ansIndex","clickedPrevious","previousButtonDisabled","clickedNext","studentAnswerFunction","changeNextNameIntoFinish","essayAnswer","setEssayAnswer","nextAnswer","shuffler","list","sort","useListShuffler","useSwitchBrowserDetector","isBrowserHidden","setIsBrowserHidden","CheaterPopup","isVisible","setVisibility","cheatReasons","cheaterImage","Dialog","DialogTitle","DialogContent","InspectorCheaterImage","DialogContentText","join","DialogActions","_withLeadingZero","ExamCounter","numberOfMins","onFinish","remainingSeconds","setremainingSeconds","numberOfSeconds","timer","setInterval","clearInterval","styles","primaryText","setCurrentQuestionNumber","setExamInfo","examOptions","endExamTime","setEndExamTime","getExamInfo","responseQuestions","getStudentExamAnswers","endTime","formatedAnswers","formatedQuestions","thisQuestionAnswer","randomQuestions","examDurationInMins","ceil","totalCountedMins","setTotalCountedMins","lastRandomMin","setLastRandomMin","RandomMins","callback","activateJobWithRandomTriggerTimer","reportFaceDetectionCheater","reportFaceRecognationCheater","clearTimeout","setCheatReasons","setCheaterImage","isCheaterPopVisible","setIsCheaterPopVisible","isBrowserSwitched","sentSwitchBrowserCheatAttempt","capturePhotoFromWebcam","sentFaceDetectionCheatAttempt","sentFaceRecognationCheatAttempt","clickedNextHandler","addAnswer","newQuestionNumber","submitExam","clickedPreviousHandler","getAnswer","My_Questions_Markup","videoRecorderIsShown","StudentRoutes","ShowExams","ExamInstructions","TakeExam","Classes","rr","INSTRUCTOR_ENDPOINTS","InstructorServices","InstructorProfile","instructorData","setInstructorData","instructor","UserRoutes","studentData","setStudentData","student","studentCode","Routes","closeHandler","App","_bootstrapFunction","Toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","main","ReactDOM","render","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.78275ce7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.18795106.png\";","import React from 'react'\nimport './Footer.css'\nimport Logo from '../../assets/images/logo.png'\nimport { InstagramOutlined, FacebookOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst iconStyle = {\n    fontSize: 36,\n    color: '#313131',\n    margin: '0px 12px',\n    cursor: 'pointer'\n}\n\nconst isMobile = window.innerWidth < 992;\nconst Footer = () => {\n    return (\n        <footer style={{marginTop:200}} className=\"Footer container\">\n            <div className=\"row justify-content-lg-center pl-3 p-lg-0\">\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                    <h5 className=\"text-grey my-3\">Test your student smartly.</h5>\n\n                    {!isMobile &&\n                        <div className=\"d-flex flex-row justify-content-center\">\n                            <FacebookOutlined style={iconStyle} />\n                            <InstagramOutlined style={iconStyle} />\n                            <PhoneOutlined style={iconStyle} />\n                        </div>\n                    }\n\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Menu</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">Home</li>\n                        <li className=\"mx-2\">Tours</li>\n                        <li className=\"mx-2\">Category</li>\n                        <li className=\"mx-2\">About Us</li>\n                    </ul>\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Support</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">FAQ</li>\n                        <li className=\"mx-2\">Terms & Conditions</li>\n                        <li className=\"mx-2\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {isMobile &&\n                    <div className=\"d-flex flex-row justify-content-center\">\n                        <FacebookOutlined style={iconStyle} />\n                        <InstagramOutlined style={iconStyle} />\n                        <PhoneOutlined style={iconStyle} />\n                    </div>\n                }\n                <small className=\"text-grey\">{new Date().getFullYear()} (c) — SmartExam. All Rights Reserved</small>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const SIGN_IN = 'SIGN_IN'\r\nconst SIGN_OUT = 'SIGN_OUT'\r\nconst SET_USER_TYPE = \"SET_USER_TYPE\"\r\nconst signin = (setUserToken) => {\r\n   return {\r\n      type: SIGN_IN,\r\n      payload: setUserToken\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return {\r\n      type: SIGN_OUT,\r\n      payload: null\r\n   }\r\n}\r\n\r\nconst setUserType = (type)=>{\r\n   return {\r\n      type: SET_USER_TYPE,\r\n      payload: type\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport { signin, logout, setUserType }","import React from 'react'\r\nimport './Header.css'\r\nimport Logo from '../../assets/images/logo.png'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/AuthActions';\r\n\r\n\r\nconst Header = () => {\r\n    const isAuth = useSelector(state => state.auth.userToken)\r\n    const userType = useSelector(state => state.auth.userType)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch(null)\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n\r\n    const isInstructor = userType === 'instructor'\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav mx-auto mainNav\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Features</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Pricing</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/classes\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Classes</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/exams\">\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Exams</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to={isInstructor ? \"/questions\" : \"/my-results\"}>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>{isInstructor ? 'Questions' : 'My Results'}</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav d-flex justify-content-lg-center justify-content-between flex-row\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <li className=\"nav-item mx-2 d-flex align-items-center\">\r\n                                    <Link className=\"loginText\" to={'/login'}>Login</Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link className=\"btn btn-primary\" to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {/* Logout */}\r\n                                <li onClick={logoutHandler} className=\"nav-item mx-2\">\r\n                                    <LogoutOutlined className=\"primaryColoredIcon\" />\r\n                                </li>\r\n\r\n                                {/* Profile */}\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link to={`/profile/${userType}`}>\r\n                                        <UserOutlined className=\"primaryColoredIcon\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const SHOW_ERROR = 'SHOW_ERROR'\nconst SHOW_SUCCESS = 'SHOW_SUCCESS'\nconst SHOW_ALERT = \"SHOW_ALERT\"\nconst HIDE_ALERT = \"HIDE_ALERT\"\n\nconst showError = (msg) => {\n    return {\n        type: SHOW_ERROR,\n        payload: msg\n    }\n}\n\nconst showSuccess = (msg) => {\n    return {\n        type: SHOW_SUCCESS,\n        payload: msg\n    }\n}\n/**\n * \n * @param {{header:string, details:string, alertFunction:Function}} alertObject \n * @returns \n */\nconst showAlert = (alertObject) => {\n    return {\n        type: SHOW_ALERT,\n        payload: alertObject\n    }\n}\n\nconst hideAlert = () => {\n    return {\n        type: HIDE_ALERT,\n    }\n}\n\n\nexport { showError, showSuccess, showAlert, hideAlert }","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showSuccess } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SuccessToast = () => {\n    const successMsg = useSelector(state => state.app.successMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        successMsg && setTimeout(() => {\n            dispatch(showSuccess(null))\n        }, 3000);\n\n    }, [successMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={successMsg}\n            key={'success1'}\n        >\n            <Alert severity={\"success\"}>{successMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default SuccessToast\n","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showError } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ErrorToast = () => {\n    const errorMsg = useSelector(state => state.app.errorMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        errorMsg && setTimeout(() => {\n            dispatch(showError(null))\n        }, 3000);\n\n    }, [errorMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={errorMsg}\n            key={'error1'}\n            autoHideDuration={3000}\n        >\n            <Alert severity={\"error\"}>{errorMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default ErrorToast\n","import React from 'react'\nimport SuccessToast from './SuccessToast'\nimport ErrorToast from './ErrorToast'\n\n\nconst index = () => {\n    return (\n        <div>\n            <SuccessToast />\n            <ErrorToast />\n        </div>\n    )\n}\n\nexport default index\n","const DomainUrl = 'http://44.201.124.239/api';\r\nexport default DomainUrl;","import axios from 'axios';\nimport DomainUrl from './Domain';\n\nlet headers = {}\nconst _axios = axios.create({\n    baseURL: DomainUrl,\n    headers\n});\n\n_axios.interceptors.request.use(\n    async (config) => {\n        const token = localStorage.getItem('token');\n        config.headers = {\n            ...config.headers,\n            'Authorization': token ? `Bearer ${token}` : undefined,\n        }\n        return config\n    },\n    (err) => {\n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => response.data,\n    err => {\n        return Promise.reject(err?.response?.data);\n    }\n)\n\nexport default _axios;\n","export const ADD_EMAIL = \"ADD_EMAIL\"\nexport const SAVE_ANSWER = \"SAVE_ANSWER\"\n","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport * as actionTypes from \"../../../redux/actions/actionTypes\"\n\nconst Forgotpassword = (props) => {\n    const [email, setEmail] = useState(null)\n\n    const sendLinkHandler = (event) => {\n        event.preventDefault()\n        const data = {\n            email: email\n        }\n\n        props.saveEmail(email)\n        localStorage.setItem(\"email\",email)\n        console.log(data)\n        _axios.post(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            \n\n\n        }).catch((error) => {\n            console.log(error)\n\n        })\n    }\n    return (\n\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Forgot Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n                    <div>\n                        <div className='text-center'>\n                            <label >We'll send you a link via email to reset password</label>\n\n                        </div>\n                        <div className='text-center'>\n                            <label >Please type your email address</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email address\" />\n                    </div>\n                    <br />\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={sendLinkHandler} style={{ width: 200 }}>Send Link</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveEmail: (email) => { return dispatch({ type: actionTypes.ADD_EMAIL, email: email  }) }\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgotpassword);\n\n","import DomainUrl from \"../Domain\";\r\n\r\nexport const AUTHENDPOINTS = {\r\n   login: {\r\n      url: `${DomainUrl}/auth/login`,\r\n      method: 'POST',\r\n   },\r\n   verifyEmail:{\r\n      url:`${DomainUrl}/auth/verifyEmail`,\r\n      method : 'POST'\r\n   },\r\n   changePassword:{\r\n      url:`${DomainUrl}/auth/changePassword`,\r\n      method : 'PUT'\r\n   },\r\n   logout:{\r\n      url:`${DomainUrl}/auth/logout`,\r\n      method : 'POST'\r\n   },\r\n   ResetPassword:{  \r\n      url:`${DomainUrl}/auth/forgotPassword`,\r\n      method:'PUT'\r\n   }\r\n};\r\n\r\n","export class Network {\r\n  constructor() {\r\n    this.jwt = \"\";\r\n  }\r\n\r\n  static async fetch(url, init, addAuth) {\r\n    this.jwt = localStorage.getItem(\"token\");\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      ...init,\r\n      headers: Network.getHeaders(init.headers, addAuth),\r\n    });\r\n    let promise;\r\n    if (!response.ok) {\r\n      promise = Network.handleErrorsBasedOnStatus(response);\r\n    } else if (response.status === 204) {\r\n      promise = Promise.resolve({});\r\n    } else {\r\n      promise = response.json();\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  static getHeaders(originalHeaders, addAuth) {\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (addAuth) {\r\n      headers.Authorization = `Bearer ${this.jwt}`;\r\n    }\r\n\r\n    headers = {\r\n      ...headers,\r\n      ...originalHeaders,\r\n    };\r\n\r\n    return headers;\r\n  }\r\n  static handleErrorsBasedOnStatus(response) {\r\n    let promise;\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 422:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 429:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 401:\r\n      case 403:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n    }\r\n    return promise.catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n","import { AUTHENDPOINTS } from \"../Endpoints/AuthEndpoints\";\r\nimport { Network } from \"../Network\";\r\n\r\nexport class AuthServices {\r\n  // sign in\r\n  static login(values) {\r\n    return Network.fetch(AUTHENDPOINTS.login.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.login.method,\r\n    });\r\n  }\r\n  \r\n  // verifying mobile phone by sending  code , phone\r\n  static emailVerifySms(values) {\r\n    return Network.fetch(AUTHENDPOINTS.verifyEmail.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.verifyEmail.method,\r\n    });\r\n  }\r\n\r\n  // change password\r\n  static changePassword(values) {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.changePassword.url,\r\n      {\r\n        body: JSON.stringify(values),\r\n        method: AUTHENDPOINTS.changePassword.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n  \r\n  // logout\r\n  static logout() {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.logout.url,\r\n      {\r\n        method: AUTHENDPOINTS.logout.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  // reset forgotten  Password\r\n  static resetForgottenPassword(values) {\r\n    return Network.fetch(AUTHENDPOINTS.ResetPassword.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.ResetPassword.method,\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './CardComponent.css'\r\nconst CardComponent = ({children, title}) => {\r\n    return (\r\n        <div className=\"greenCard\">\r\n            <h2 className=\"text-light text-center mx-auto py-3\">{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","const initStates = {\n    errorMsg: null,\n    successMsg: null,\n    alertObject: null\n}\n\nconst AppReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case 'SHOW_ERROR':\n            console.log(action.payload)\n            return {\n                ...state,\n                errorMsg: action.payload,\n            };\n        case 'SHOW_SUCCESS':\n            return {\n                ...state,\n                successMsg: action.payload\n            };\n        case 'SHOW_ALERT':\n            return {\n                ...state,\n                alertObject: action.payload\n            };\n        case 'HIDE_ALERT':\n            return {\n                ...state,\n                alertObject: null\n            };\n        default:\n            return state\n    }\n}\n\nexport { AppReducer };","\r\nconst initStates = {\r\n   userToken: null,\r\n   userType: null\r\n}\r\n\r\nconst AuthReducer = (state = initStates, action) => {\r\n   switch (action.type) {\r\n      case 'SIGN_IN':\r\n         return {\r\n            ...state,\r\n            userToken: action.payload,\r\n         };\r\n      case 'SIGN_OUT':\r\n         return {\r\n            ...state,\r\n            userToken: null,\r\n            userType: null\r\n         };\r\n\r\n      case 'SET_USER_TYPE':\r\n         return {\r\n            ...state,\r\n            userType: action.payload,\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport { AuthReducer };","import * as actionTypes from \"../actions/actionTypes\"\n\nconst initialState = {\n    email: 'LOL'\n\n}\nconst ResetReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_EMAIL:\n            // console.log(\"this from reducer\")\n            // console.log(action.email)\n            return {\n                ...state,\n                email: action.email\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default ResetReducer;","const initStates = {\r\n    examQuestions: []\r\n}\r\n\r\nconst ExamReducer = (state = initStates, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_QUESTION':\r\n            return {\r\n                ...state,\r\n                examQuestions: [...state.examQuestions, ...action.payload],\r\n            };\r\n        case 'REMOVE_QUESTION': {\r\n            let newExamQuestions = state?.examQuestions\r\n            let newExamQuestion = newExamQuestions.filter(item => {\r\n                return item.id !== action.payload\r\n            })\r\n            return {\r\n                ...state,\r\n                examQuestions: [...newExamQuestion],\r\n            };\r\n        }\r\n        case 'REMOVE_ALL':\r\n            return {\r\n                ...state,\r\n                examQuestions: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default ExamReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from './reducers/AppReducer';\r\nimport { AuthReducer } from './reducers/AuthReducer';\r\nimport ResetReducer from './reducers/ResetReducer';\r\nimport ExamReducer from './reducers/ExamReducer';\r\nimport QuestionReducer from './reducers/QuestionReducer';\r\n\r\nconst rootReducer = combineReducers(\r\n   {\r\n      auth: AuthReducer,\r\n      app: AppReducer,\r\n      rst: ResetReducer,\r\n      exam: ExamReducer,\r\n      question: QuestionReducer\r\n   }\r\n);\r\nconst middleware = applyMiddleware(thunk)\r\nconst configureStore = () => {\r\n   return createStore(rootReducer, middleware);\r\n}\r\n\r\nexport const store = configureStore();","import { showError } from '../redux/actions/AppActions'\r\nimport { logout } from '../redux/actions/AuthActions'\r\nimport { store } from '../redux/store'\r\n\r\nexport default function HandleErrors(err) {\r\n    //Showing Toast Function\r\n    const showErrorToast = (msg) => {\r\n        store.dispatch(\r\n            showError(msg)\r\n        )\r\n    }\r\n\r\n\r\n    if (err?.message) {\r\n        showErrorToast(err?.message)\r\n    } else if (typeof err === 'string' || err instanceof String) {\r\n        showErrorToast(err)\r\n    } else {\r\n        showErrorToast(\"UNKNOWN_ERROR\")\r\n    }\r\n\r\n    if (err?.message?.includes(\"Unauthenticated\")) {\r\n        store.dispatch(logout())\r\n        localStorage.clear()\r\n    }\r\n}","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AuthServices } from '../../../apis/Services/AuthService';\nimport { setUserType, signin } from '../../../redux/actions/AuthActions';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const forgotPasswordHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: '/forgot-password',\n            state: { email: email }\n        })\n\n        // props.history.push('/forgot-password')\n        // props.history.push('/reset-password')\n\n    }\n\n    const SignUpHandler = () => {\n        props.history.push('/register')\n    }\n\n    const dispatch = useDispatch(null)\n    const LoginHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        AuthServices.login({ email, password })\n            .then(res => {\n                console.log(\"result =>\", res)\n                localStorage.setItem('token', res?.token)\n                localStorage.setItem('userType', res?.user?.type)\n                dispatch(signin(res?.token))\n                dispatch(setUserType(res?.user?.type))\n                props.history.push(`/profile/${res?.user?.type}`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Login'}>\n                    <form className=\"m-3 text-start\">\n                        <div className='mt-4'>\n                            <TextField fullWidth id=\"outlined-basic\" onChange={(e) => setEmail(e.target.value)} label=\"Email Address\" variant=\"outlined\" />\n                        </div>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                id=\"outlined-adornment-password\"\n                                type={'password'}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"mx-auto mt-4 text-center\">\n                            <button className=\"btn btn-primary mx-auto\" onClick={LoginHandler}>Login</button>\n                            <div>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={forgotPasswordHandler}>Forgot password?</button>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={SignUpHandler}>Signup</button>\n                            </div>\n                        </div>\n                    </form>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\nclass Registerinquiry extends Component {\n\n    RegisterAsStudentHandler = () => {\n        // this.props.history.push('/signup')\n        this.props.history.push('/register-student')\n\n    }\n    RegisterAsInstructorHandler = () => {\n        \n        this.props.history.push('/register-instructor')\n\n     }\n\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center mt-5\">\n                <div className=\"card border-success mb-3\" style={{ MaxWidth: 18 }}>\n                    <div className=\"card-header\">Sign up</div>\n                    <div className=\"card-body text-success\">\n                        <h5 className=\"card-title text-center\">Register As...?</h5>\n                        <div className=\"form-inline\">\n                            <button type=\"button\" onClick={this.RegisterAsStudentHandler} className=\"btn btn-primary m-3\">Student</button>\n                            <button type=\"button\" onClick={this.RegisterAsInstructorHandler} className=\"btn btn-danger m-3\">Instructor</button>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Registerinquiry);\n","import _axios from \"../axios-instance\";\n\nexport class UploadServices {\n    static uploadImage(file) {\n        const formDate = new FormData()\n        formDate.append('image', file)\n        return _axios.post('/image-upload', formDate, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    }\n}\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterInstructor extends Component {\r\n\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        degree: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    degreeFormHandler = (event) => {\r\n        this.setState({ degree: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.degree)) {\r\n            return \"Invalid Degree\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n        var data;\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"type\": \"instructor\",\r\n                    \"degree\": this.state.degree,\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/instructors/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email, userInfo: data }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.degreeFormHandler} label=\"Degree\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className=\"mx-auto mt-4\" >\r\n                                <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler} style={{ width: 200 }}>Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterInstructor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterStudent extends Component {\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        studentcode: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    studentCodeFormHandler = (event) => {\r\n        this.setState({ studentcode: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.studentcode)) {\r\n            return \"Invalid Student Code\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                var data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"studentCode\": this.state.studentcode,\r\n                    \"type\": \"student\",\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/students/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        console.log(\"hiiiii\")\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.studentCodeFormHandler} label=\"Student Code\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"mx-auto mt-4\">\r\n                                <button type='button' className=\"btn btn-primary mx-auto\" onClick={this.registerHandler}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterStudent;\r\n","import { showSuccess } from '../redux/actions/AppActions'\nimport { store } from \"../redux/store\"\n\nexport default function showSuccessMsg(msg) {\n\n    store.dispatch(\n        showSuccess(msg)\n    )\n\n    return null\n}","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../hooks/handleErrors';\n\nconst Resetpassword = (props) => {\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n\n\n    const ResetHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            HandleErrors(\"Password Mismatch\")\n            return\n        }\n\n        var data = {\n            password: password,\n            email: localStorage.getItem(\"email\"),\n            token: props.match.params.token\n\n        }\n        _axios.put(\"/auth/forgotPassword\", data).then((response) => {\n            console.log(response)\n            localStorage.removeItem(\"email\")\n            showSuccessMsg(\"Password Reset Successfully\")\n            props.history.push('/login')\n        }).catch((error) => {\n            console.log(error)\n\n        })\n\n\n    }\n    return (\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Reset Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n\n                    <div className=\"form-group\">\n                        <label >New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setPassword(e.target.value)} placeholder=\"New Password\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Confirm New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm New Password\" />\n                    </div>\n\n                    <hr />\n\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={ResetHandler} style={{ width: 200 }}>Reset Password</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return 0\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Resetpassword);\n\n","import { useState, useEffect } from 'react';\n\nfunction getWindowWidth() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nexport default function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}","import React from 'react'\nimport CardComponent from '../../Components/CardComponent/CardComponent'\nimport ReactCodeInput from 'react-verification-code-input';\nimport './VerifyEmail.css'\nimport useWindowWidth from '../../hooks/useWindowWidth';\nimport HandleErrors from '../../hooks/handleErrors';\nimport _axios from '../../apis/axios-instance';\nimport showSuccessMsg from '../../hooks/showSuccessMsg';\n\nconst VerifyEmail = (props) => {\n    const onsubmit = (e) => {\n        verifyEmail(e);\n    }\n    // const resend = () => {\n    //     const data = props.location.state.userInfo\n    //     const type = data['type'];\n    //     if (type === 'instructor') {\n    //         _axios.post('/instructors/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n    //     } else if (type === 'student') {\n    //         _axios.post('/students/register', data).then((response) => {\n    //             console.log(response)\n    //             console.log(\"lol\")\n\n    //         }).catch((error) => {\n    //             console.log(error);\n\n    //         })\n\n    //     }\n    // }\n\n    const verifyEmail = (codeValue) => {\n        //sent to server\n        // console.log(codeValue)\n        // console.log(props.location.state.email)\n        var data = {\n            email: props.location.state.email,\n            code: codeValue\n        }\n        _axios.post(\"/verifyEmail\", data).then((response) => {\n            // console.log(response)\n            // console.log(\"Success ya wlaaa\")\n            showSuccessMsg(\"Verified Successfully!\")\n            props.history.push({\n                pathname: '/login',\n            })\n\n        }).catch((err) => HandleErrors(err))\n\n    }\n\n    const screenWidth = useWindowWidth();\n    const isMobile = screenWidth < 768\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Verify Email'}>\n                    <div className=\"d-flex flex-column justify-content-center align-items-center py-2\">\n                        <small className='text-green'>We have sent for you a verify code.</small>\n                        <small className='text-green'>Please enter the code here</small>\n                        <ReactCodeInput\n                            onComplete={onsubmit}\n                            className=\"my-4 text-primary\"\n                            type='text'\n                            autoFocus={true}\n                            fieldHeight={85}\n                            fieldWidth={isMobile ? screenWidth / 7 : 66}\n                            fields={6} />\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyEmail\n","import forgotPassword from '../Views/Registration/ForgotPassword/forgotPassword'\r\nimport Login from '../Views/Registration/Login/Login'\r\nimport RegisterInquiry from '../Views/Registration/Register/RegisterInquiry'\r\nimport RegisterInstructor from '../Views/Registration/Register/RegisterInstructor/RegisterInstructor'\r\nimport RegisterStudent from '../Views/Registration/Register/RegisterStudent/RegisterStudent'\r\nimport ResetPassword from '../Views/Registration/ResetPassword/ResetPassword'\r\nimport VerifyEmail from '../Views/VerifyEmail/VerifyEmail'\r\n\r\nconst AuthRoutes =\r\n    [\r\n        { path: \"/login\", component: Login, exact: true },\r\n        { path: \"/forgot-password\", component: forgotPassword, exact: true },\r\n        { path: \"/reset-password/:token\", component: ResetPassword, exact: true },\r\n        { path: \"/register\", component: RegisterInquiry, exact: true },\r\n        { path: \"/verifyEmail\", component: VerifyEmail, exact: true },\r\n        { path: \"/register-student\", component: RegisterStudent, exact: true },\r\n        { path: \"/register-instructor\", component: RegisterInstructor, exact: true },\r\n       \r\n    ]\r\n\r\nexport default AuthRoutes\r\n","import _axios from \"../axios-instance\";\r\n\r\nexport class ExamServices {\r\n    /**\r\n     * Create new exam with main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static createNewExam(examMainInfo) {\r\n        return _axios.post('/exams/step1', examMainInfo);\r\n    }\r\n\r\n    /**\r\n     * edit exam main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static editExamMainInfo(examMainInfo, examId) {\r\n        return _axios.put(`/exams/${examId}}/step1`, examMainInfo);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setExamOptions(examId, options) {\r\n        return _axios.post('/exams/step2', { examId, ...options });\r\n    }\r\n\r\n    /**\r\n     * Edit exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static editExamOptions(examId, options) {\r\n        return _axios.put(`/exams/${examId}/step2`, { ...options });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static addQuestionsToExam(examId, questions) {\r\n        return _axios.post('/exams/step3', { examId, questions });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{id:number, mark:number, duration:string}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setQuestionsMarksAndDuration(examId, questions) {\r\n        return _axios.post('/exams/step4', { examId, questions });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Instrunctor Own Exams\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyExams() {\r\n        return _axios.get('/instructors/my-exams');\r\n    }\r\n\r\n    /**\r\n     * Get All published exam\r\n     * @param {{isMarked: boolean}} data\r\n     * @returns {Promise<Array>}\r\n     */\r\n    // static getAllPublishedExams({ isMarked = false } = {}) {\r\n    //     return _axios.get('/exams');\r\n    // }\r\n    static getAllPublishedExams({ isMarked = false } = {}) {\r\n        return _axios.get('/exams', {\r\n            params: {\r\n                isMarked\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a specific Exam\r\n     * @param {number} examId \r\n     * @returns Promise<{Exam:Object}>\r\n     */\r\n    static getExamQuestions(examId) {\r\n        return _axios.get(`/exams/${examId}/questions`);\r\n    }\r\n\r\n    static getExamConfig(examId) {\r\n        return _axios.get(`/exams/${examId}/configs`);\r\n    }\r\n\r\n    static getExamInfo(examId) {\r\n        return _axios.get(`/exams/${examId}`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Post a question answer to \r\n     * @param {object} answerData \r\n     * Example Object\r\n     * {\r\n     \" studentAnswer\": \"seven\"\r\n     \" option_id\": 1,\r\n     \" question_id\": 1,\r\n     \" exam_id\": 1,\r\n     * } \r\n     * @returns Promise<{message}>\r\n     */\r\n    static addAnswer(answerData) {\r\n        return _axios.post(`/answers`, answerData);\r\n    }\r\n\r\n    /**\r\n    * Delete specific exam\r\n    * @param {number} examId \r\n    * @returns \r\n    */\r\n    static deleteExam(examId) {\r\n        return _axios.delete(`/exams/${examId}`);\r\n    }\r\n\r\n    /**\r\n     * Make an exam publish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": true })\r\n    }\r\n\r\n    /**\r\n     * Make an exam unpublish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamUnPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": false })\r\n    }\r\n\r\n    static getStudentExamAnswers(examId) {\r\n        return _axios.get(`exams/${examId}/my-answers`)\r\n    }\r\n\r\n    static submitExam(examId) {\r\n        return _axios.post(`exams/${examId}/submit`)\r\n    }\r\n\r\n    static applyFaceDetection(data) {\r\n        return _axios.post(`/face-detection`, data)\r\n    }\r\n    static applyFaceVerification(data) {\r\n        return _axios.post(`/face-verification`, data)\r\n    }\r\n    static startExam(examId, data) {\r\n        return _axios.post(`exams/${examId}/start`, data)\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TextField } from '@mui/material'\nimport React from 'react'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport { Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport moment from 'moment';\n\nconst AddExam = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    console.log(examOldData)\n    const onAddExamHandler = (values, actions) => {\n        if (isEditMode) {\n            ExamServices.editExamMainInfo(values, examOldData.id)\n                .then(res => {\n                    showSuccessMsg('Edited exam information successfully!')\n                    history.push(`/exams/${examOldData.id}/set-options`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.createNewExam(values)\n            .then(res => {\n                showSuccessMsg('Exam information has been saved!')\n                history.push(`/exams/${res.examId}/set-options`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            name: examOldData?.name || '',\n                            numberOfTrials: examOldData?.numberOfTrials || '',\n                            description: examOldData?.description || '',\n                            totalMark: examOldData?.totalMark || '',\n                            duration: examOldData?.duration || '',\n                            examSubject: examOldData?.examSubject || '',\n                            startAt: examOldData?.startAt || moment(new Date().setMinutes(0)).format('yyyy-MM-DD HH:mm'),\n                            endAt: examOldData?.endAt || moment(new Date().setMinutes(0)).add(7, 'days').format('yyyy-MM-DD HH:mm'),\n                        }}\n                        onSubmit={onAddExamHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"name\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.name}\n                                        type=\"text\"\n                                        label=\"Exam Name\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.name && <div id=\"feedback\">{props.errors.name}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"numberOfTrials\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.numberOfTrials}\n                                        type=\"number\"\n                                        label=\"Number Of Trials\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.numberOfTrials && <div id=\"feedback\">{props.errors.numberOfTrials}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"description\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.description}\n                                        type=\"text\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.description && <div id=\"feedback\">{props.errors.description}</div>}\n                                </div>\n\n                                {/* Exam Subject */}\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"examSubject\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.examSubject}\n                                        type=\"text\"\n                                        label=\"Exam Subject\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.examSubject && <div id=\"feedback\">{props.errors.examSubject}</div>}\n                                </div>\n\n                                {/* Start Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"Start Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.startAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('startAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('startAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.startAt && <div id=\"feedback\">{props.errors.startAt}</div>}\n                                </div>\n\n                                {/* End Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"End Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.endAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('endAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            console.log(selectedDate)\n                                            props.setFieldValue('endAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\n                                    />\n                                    {props.errors.endAt && <div id=\"feedback\">{props.errors.endAt}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"totalMark\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.totalMark}\n                                        type=\"text\"\n                                        label=\"Total Mark\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.totalMark && <div id=\"feedback\">{props.errors.totalMark}</div>}\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"duration\"\n                                        placeholder='Ex: 01:30:00'\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.duration}\n                                        type=\"text\"\n                                        label=\"Duration\"\n                                        variant=\"outlined\"\n                                    />\n                                    {props.errors.duration && <div id=\"feedback\">{props.errors.duration}</div>}\n                                </div>\n\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExam\n","import React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Divider } from '@mui/material';\n\nconst AddationMethodsMenu = ({ methods = [], anchorEl, setAnchorEl }) => {\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    return <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                mt: 1.5,\n                '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                },\n                '&:before': {\n                    content: '\"\"',\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: 'background.paper',\n                    transform: 'translateY(-50%) rotate(45deg)',\n                    zIndex: 0,\n                },\n            },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n        {\n            methods?.map((method, index) => <div key={index} >\n                <MenuItem onClick={method.function}>\n                    {method.displayName}\n                </MenuItem>\n                {(index !== methods.length - 1) && <Divider />}\n            </div>\n            )\n        }\n        \n    </Menu>;\n};\n\nexport default AddationMethodsMenu;\n","export const Colors = {\n    primary: '#2F4F4F',\n    primaryHover: '#3c6464',\n    secondary: '#50303A',\n    black: '#313131',\n    grey: '#AEAEAE',\n    white: '#fff',\n    danger: '#DC3545',\n    success: '#28A745'\n}","import styled from 'styled-components';\n\n\nconst ClickableView = styled.div`\n    cursor: pointer;\n`\n\n\nexport {\n    ClickableView\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdQuestionController = ({ questionTitle, id, deleteFunction = () => { } }) => {\n  const history = useHistory();\n\n  const goToQuestion = () => {\n    /** TODO */\n    history.push('/questions/' + id)\n  }\n\n  return <Wrapper className='mb-4'>\n    <ClickableView onClick={goToQuestion}>\n      <Text>{questionTitle}</Text>\n    </ClickableView>\n\n    <ClickableView onClick={deleteFunction}>\n      <CloseIcon color={'error'} fontSize={'large'} />\n    </ClickableView>\n  </Wrapper>;\n};\n\nexport default BorderdQuestionController;\n","const ADD_QUESTION = 'ADD_QUESTION'\r\nconst REMOVE_QUESTION = 'REMOVE_QUESTION'\r\nconst REMOVE_ALL = 'REMOVE_ALL'\r\n\r\n/**\r\n * \r\n * @param {Array.<{questionText:string, id:string}>} questionData \r\n * @returns \r\n */\r\nconst saveAQuestion = (questionData) => {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        payload: questionData\r\n    }\r\n}\r\n/**\r\n * \r\n * @param {{id:string}} param0 \r\n * @returns \r\n */\r\nconst removeSavedQuestionFromExam = (id) => {\r\n    return {\r\n        type: REMOVE_QUESTION,\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst removeAllSavedQuestions = () => {\r\n    return {\r\n        type: REMOVE_ALL,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { saveAQuestion, removeSavedQuestionFromExam, removeAllSavedQuestions }","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { matchPath, useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu'\r\nimport BorderdQuestionController from '../../../../Components/QuestionComponents/BorderdQuestionController'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { removeAllSavedQuestions, removeSavedQuestionFromExam } from '../../../../redux/actions/ExamAction'\r\n\r\nconst AddExamQuestions = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const AddQuestionHandler = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const goCreateNewQuestion = () => {\r\n        history.push('/questions/add', { fromExamCreation: true })\r\n    }\r\n    const selectQuestionFromQBank = () => {\r\n        history.push('/questions', { canSelectQuestionsForExam: true })\r\n    }\r\n    const methods = [\r\n        {\r\n            displayName: 'Create new question',\r\n            function: goCreateNewQuestion\r\n        },\r\n        {\r\n            displayName: 'Select from quesiton bank',\r\n            function: selectQuestionFromQBank\r\n        }\r\n    ]\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.exam)\r\n    const examOldData = location.state?.exam\r\n    const examOldQuestions = examOldData?.questions || []\r\n\r\n    const [examId, setExamId] = useState(null)\r\n    useEffect(() => {\r\n        const match = matchPath(history.location.pathname, {\r\n            path: '/exams/:examId/add-questions'\r\n        })\r\n        console.log(match.params.examId)\r\n        setExamId(match.params.examId)\r\n    }, [history.location.pathname])\r\n\r\n    /** Get Questions of this exam */\r\n    const [questions, setQuestions] = useState(null);\r\n    const savedQuestions = useSelector(state => state?.exam?.examQuestions)\r\n    const getQuestions = () => {\r\n        setQuestions([...examOldQuestions, ...savedQuestions])\r\n    }\r\n    useEffect(() => {\r\n        getQuestions();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const submitExamHandler = () => {\r\n        let submittedQuestions = [...questions]\r\n        submittedQuestions = submittedQuestions.map(item => { return { question_id: item.id } })\r\n        ExamServices.addQuestionsToExam(examId, submittedQuestions)\r\n            .then(res => {\r\n                history.push('/exams')\r\n                dispatch(removeAllSavedQuestions())\r\n                showSuccessMsg('Exam has been created successfully!')\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const removeQuestionFromListHandler = (id) => {\r\n        dispatch(removeSavedQuestionFromExam(id))\r\n        setQuestions(prevState => {\r\n            console.log(prevState, id)\r\n            return prevState.filter(item => item.id !== id)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={!isEditMode ? 'Add Questions' : 'View Questions'}>\r\n                    <div className='p-4'>\r\n                        <div className='d-flex justify-content-end mb-4'>\r\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\r\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                            </button>\r\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                                questions?.map(question =>\r\n                                    <BorderdQuestionController\r\n                                        deleteFunction={() => removeQuestionFromListHandler(question?.id)}\r\n                                        id={question?.id} key={question?.id}\r\n                                        questionTitle={question?.questionText}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button onClick={submitExamHandler} className=\"btn btn-primary mx-auto mt-4\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </CardComponent>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExamQuestions\r\n","import React from 'react'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Chip, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport PublishIcon from '@mui/icons-material/Publish';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Exams = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const addNewExamHandler = (e) => {\r\n        console.log(e)\r\n        history.push('/exams/add')\r\n    }\r\n\r\n    const [exams, setExams] = useState(null)\r\n    const getExamsHandler = () => {\r\n        ExamServices.getMyExams()\r\n            .then(res => {\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getExamsHandler()\r\n    }, [])\r\n\r\n    const GoToExamDetailsHandler = (examId) => {\r\n        history.push(`/exams/${examId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedExam, setSelectedExam] = React.useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedExam(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedExam(null)\r\n    };\r\n\r\n    const editExamHandler = () => {\r\n        console.log(selectedExam)\r\n        let exam = exams.find(item => item.id === selectedExam)\r\n        console.log(exam)\r\n        history.push('/exams/edit', { exam })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteExamHandler = () => {\r\n        let deleteFun = () => {\r\n            ExamServices.deleteExam(selectedExam)\r\n                .then(res => {\r\n                    showSuccessMsg('Exam deleted successfully!')\r\n                    let newExams = [...exams]\r\n                    newExams = newExams.filter(item => item.id !== selectedExam)\r\n                    setExams(newExams)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        dispatch(showAlert({\r\n            header: 'Delete this exam?',\r\n            details: 'You are going to delete this exam permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    const makePublishHandler = (isWantToBePublish) => {\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        let examName = selectedExamObject?.name\r\n        let request = isWantToBePublish ? ExamServices.makeExamPublished(selectedExam) : ExamServices.makeExamUnPublished(selectedExam)\r\n        request\r\n            .then(res => {\r\n                showSuccessMsg(`Your Exam (${examName}) has been ${isWantToBePublish ? 'published' : 'unpublished'} successfully!`)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n            .finally(() => {\r\n                handleClose() //for menu\r\n                getExamsHandler()\r\n            })\r\n    }\r\n\r\n    const isExamNotCompleted = (row) => (!row.config || !row.questions?.length)\r\n    const isSelectedExamPublished = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return selectedExamObject?.isPublished\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{}} className='d-flex mt-4 justify-content-end'>\r\n                <button onClick={addNewExamHandler} className='btn btn-success'>\r\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                </button>\r\n            </div>\r\n\r\n            <TableContainer className='mt-5' component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Exam Name</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Start Date</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">End Date</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Total Marks</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Duration</StyledTableCell>\r\n                            <StyledTableCell align=\"right\"> </StyledTableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {exams?.map((row) => (\r\n                            <StyledTableRow\r\n                                className={isExamNotCompleted(row) ? 'bg-danger disablePointer' : ''}\r\n                                onClick={!isExamNotCompleted(row) ? () => GoToExamDetailsHandler(row.id) : null}\r\n                                key={row.id}\r\n                            >\r\n                                {/* NAME */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                    {row.isPublished ?\r\n                                        < Chip className='ms-2' size='small' color=\"success\" icon={<DoneAllIcon />} label=\"Published\" />\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </StyledTableCell>\r\n                                {/* STARE DATE */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.startAt}\r\n                                </StyledTableCell>\r\n                                {/* END DATE */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.endAt}\r\n                                </StyledTableCell>\r\n                                {/* TOTAL MARK */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.totalMark}\r\n                                </StyledTableCell>\r\n                                {/* DURATION */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                    {row.duration}\r\n                                </StyledTableCell>\r\n                                {/* OPTIONS */}\r\n                                <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                    <SettingsIcon fontSize='medium' color='secondary' />\r\n                                </StyledTableCell>\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {\r\n                selectedExam &&\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    autoFocus={false}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => makePublishHandler(!isSelectedExamPublished())}>\r\n                        <PublishIcon />\r\n                        {isSelectedExamPublished() ? 'UnPublish' : 'Publish'}\r\n                    </MenuItem>\r\n                    <MenuItem onClick={editExamHandler}>\r\n                        <EditIcon />\r\n                        Edit\r\n                    </MenuItem>\r\n                    <MenuItem color='error' onClick={deleteExamHandler}>\r\n                        <DeleteForeverIcon color='error' />\r\n                        Delete\r\n                    </MenuItem>\r\n                </Menu>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Exams\r\n","export const QuestionTypes = {\n    ESSAY: \"essay\",\n    MCQ : \"mcq\"\n}\n\n\n","import _axios from \"../axios-instance\";\r\nimport {QuestionTypes} from '../../constants/QuestionTypes'\r\nexport class QuestionServices {\r\n    /**\r\n     * Create new question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.mark\r\n     * @param {Array<string>} question.answers All the possible answers\r\n     * @param {string} question.correctAnswer Correct answer\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createMcqQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.MCQ , ...question });\r\n    }\r\n\r\n    static createEssayQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.ESSAY, ...question });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} id Question id\r\n     * @returns \r\n     */\r\n    static getQuestionDetails(id) {\r\n        return _axios.get(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Edit any type of question\r\n     * @param {*} id question id\r\n     * @param {*} question Question as it returned from server\r\n     * @returns \r\n     */\r\n    static editQuestion(id, question) {\r\n        return _axios.put(`/questions/${id}`, { ...question });\r\n    }\r\n\r\n    /**\r\n     * Delete any type of question\r\n     * @param {*} id question id\r\n     * @returns \r\n     */\r\n    static deleteQuestion(id) {\r\n        return _axios.delete(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Get All My Exams\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyQuestions() {\r\n        return _axios.get('/questions');\r\n    }\r\n\r\n}\r\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { useState } from 'react';\r\nimport { Checkbox, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Questions = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const isSelectionMode = location.state?.canSelectQuestionsForExam\r\n\r\n    const goToAddQuestionPageHandler = () => {\r\n        history.push(`${history.location.pathname}/add`)\r\n    }\r\n\r\n    /**\r\n     * Getting Questions\r\n     */\r\n    const [questions, setQuestions] = useState(null)\r\n    const getAllQuestions = () => {\r\n        QuestionServices.getMyQuestions()\r\n            .then(res => {\r\n                console.log(\"Questions =>\", res)\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getAllQuestions();\r\n    }, [])\r\n\r\n    const GoToQuestionDetailsHandler = (questionId) => {\r\n        history.push(`${history.location.pathname}/${questionId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedQuestion(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedQuestion(null)\r\n    };\r\n\r\n    const editQuestionHandler = () => {\r\n        console.log(selectedQuestion)\r\n        let question = questions.find(item => item.id === selectedQuestion)\r\n        history.push('/questions/edit', { question })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteQuestionHandler = () => {\r\n        let deleteFun = () => {\r\n            QuestionServices.deleteQuestion(selectedQuestion)\r\n                .then(res => {\r\n                    showSuccessMsg('Question deleted successfully!')\r\n                    let newQuestions = [...questions]\r\n                    newQuestions = newQuestions.filter(item => item.id !== selectedQuestion)\r\n                    setQuestions(newQuestions)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        // show alert\r\n        dispatch(showAlert({\r\n            header: 'Delete this question?',\r\n            details: 'You are going to delete this question permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    // #### SELECTION MODE STUFF ####\r\n\r\n    const isAllSelected = questions?.every(item => item.isSelected)\r\n    const selectedQuestions = questions?.filter(item => item.isSelected)\r\n    /**\r\n     * Mark needed question to be selected for an exam in [selection mode]\r\n     */\r\n    const onCheckHandler = (index, isSelected) => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[index].isSelected = isSelected\r\n            return newQuestions\r\n        })\r\n    }\r\n    const selectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: true } })\r\n        })\r\n    }\r\n    const deselectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: false } })\r\n        })\r\n    }\r\n    const sentSelectedQuestionHandler = () => {\r\n        dispatch(saveAQuestion(selectedQuestions))\r\n        history.goBack()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex mt-4 justify-content-end'>\r\n                {!isSelectionMode ?\r\n                    <button onClick={goToAddQuestionPageHandler} className='btn btn-success'>\r\n                        <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                    </button>\r\n                    :\r\n                    <button onClick={sentSelectedQuestionHandler} className='btn btn-success'>\r\n                        Confirm Selection ({selectedQuestions?.length})\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            <TableContainer className='mt-4' component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {isSelectionMode &&\r\n                                <StyledTableCell>\r\n                                    <Checkbox\r\n                                        style={{ backgroundColor: '#fff' }}\r\n                                        checked={isAllSelected}\r\n                                        onChange={isAllSelected ? deselectAllQuestions : selectAllQuestions}\r\n                                    />\r\n                                </StyledTableCell>\r\n                            }\r\n                            <StyledTableCell>Question Header</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Created Date</StyledTableCell>\r\n                            {!isSelectionMode &&\r\n                                <StyledTableCell align=\"right\"> </StyledTableCell>\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {questions?.map((row, index) => (\r\n                            <StyledTableRow onClick={() => GoToQuestionDetailsHandler(row.id)} key={row.id}>\r\n                                {isSelectionMode &&\r\n                                    <StyledTableCell onClick={(e) => e.stopPropagation()} component=\"th\" scope=\"row\">\r\n                                        <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={Boolean(row.isSelected)}\r\n                                            onChange={(e) => onCheckHandler(index, e.target.checked)}\r\n                                        />\r\n                                    </StyledTableCell>\r\n                                }\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.questionText}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.created_at}</StyledTableCell>\r\n                                {!isSelectionMode &&\r\n                                    <StyledTableCell onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                        <SettingsIcon fontSize='medium' color='secondary' />\r\n                                    </StyledTableCell>\r\n                                }\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={editQuestionHandler}>\r\n                    <EditIcon />\r\n                    Edit\r\n                </MenuItem>\r\n                <MenuItem color='error' onClick={deleteQuestionHandler}>\r\n                    <DeleteForeverIcon color='error' />\r\n                    Delete\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import { Switch } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Formik } from 'formik';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport { matchPath } from 'react-router-dom';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\n\nconst SetExamOptions = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [examId, setExamId] = useState(null)\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const oldExamConfig = examOldData?.config\n\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/set-options'\n        })\n        console.log(match.params.examId)\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    const setOptionsHandler = (values, actions) => {\n        let submittedValues = { ...values }\n        submittedValues['gradingMethod'] = submittedValues['gradingMethod'] ? 'auto' : 'manual'\n\n        if (isEditMode && oldExamConfig) {\n            ExamServices.editExamOptions(examId, submittedValues)\n                .then(res => {\n                    showSuccessMsg('Exam options has been edited!')\n                    history.push(`/exams/${examOldData?.id}/add-questions`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.setExamOptions(examId, submittedValues)\n            .then(res => {\n                showSuccessMsg('Exam options has been saved!')\n                history.push(`/exams/${examId}/add-questions`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            faceRecognition: oldExamConfig ? Boolean(oldExamConfig?.faceRecognition) : false,\n                            faceDetection: oldExamConfig ? Boolean(oldExamConfig?.faceDetection) : false,\n                            questionsRandomOrder: oldExamConfig ? Boolean(oldExamConfig?.questionsRandomOrder) : false,\n                            plagiarismCheck: oldExamConfig ? Boolean(oldExamConfig?.plagiarismCheck) : false,\n                            disableSwitchBrowser: oldExamConfig ? Boolean(oldExamConfig?.disableSwitchBrowser) : false,\n                            gradingMethod: oldExamConfig ? Boolean(oldExamConfig?.gradingMethod === 'auto') : true,\n                        }}\n                        onSubmit={setOptionsHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('questionsRandomOrder', !props.values.questionsRandomOrder)}>Questions Random Order</label>\n                                    <Switch\n                                        name='questionsRandomOrder'\n                                        checked={props.values.questionsRandomOrder}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('disableSwitchBrowser', !props.values.disableSwitchBrowser)}>Disable Switch Browser</label>\n                                    <Switch\n                                        name='disableSwitchBrowser'\n                                        checked={props.values.disableSwitchBrowser}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('plagiarismCheck', !props.values.plagiarismCheck)}>Plagiarism Check</label>\n                                    <Switch\n                                        name='plagiarismCheck'\n                                        checked={props.values.plagiarismCheck}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceDetection', !props.values.faceDetection)}>Face Detection</label>\n                                    <Switch\n                                        name='faceDetection'\n                                        checked={props.values.faceDetection}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('gradingMethod', !props.values.gradingMethod)}>Automatic Grading</label>\n                                    <Switch\n                                        name='gradingMethod'\n                                        checked={props.values.gradingMethod}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceRecognition', !props.values.faceRecognition)}>Face Recognition</label>\n                                    <Switch\n                                        name='faceRecognition'\n                                        checked={props.values.faceRecognition}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default SetExamOptions\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\nconst DangerLabel = styled(Label)`\r\n    color: ${Colors.danger};\r\n`\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst MCQ = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const MCQSCHEMA = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n        choice1: yup.string().required('This is a required field'),\r\n        choice2: yup.string().required('This is a required field'),\r\n        choice3: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createMcqQuestion({\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n\r\n    }\r\n\r\n    const mcqChoices = initValues?.mcq?.mcq_answers?.filter(item => !item.isCorrect)\r\n    const mcqCorrectAnswer = initValues?.mcq?.mcq_answers?.find(item => item.isCorrect)\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: mcqCorrectAnswer?.option.value || '',\r\n            choice1: mcqChoices?.[0].option.value || '',\r\n            choice2: mcqChoices?.[1].option.value || '',\r\n            choice3: mcqChoices?.[2].option.value || ''\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={MCQSCHEMA}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Correct Option</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Correct Answer....'\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #1 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice1' className='mb-2'>Wrong Option 1</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice1\"\r\n                        id=\"choice1\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice1}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice1 && props.errors.choice1}\r\n                        error={props.touched.choice1 && Boolean(props.errors.choice1)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #2 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice2' className='mb-2'>Wrong Option 2</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice2\"\r\n                        id=\"choice2\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice2}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice2 && props.errors.choice2}\r\n                        error={props.touched.choice2 && Boolean(props.errors.choice2)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #3 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice3' className='mb-2'>Wrong Option 3</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice3\"\r\n                        id=\"choice3\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice3}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice3 && props.errors.choice3}\r\n                        error={props.touched.choice3 && Boolean(props.errors.choice3)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default MCQ;\r\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\n\r\n\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst Essay = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const EssaySchema = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        // console.log(values)\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createEssayQuestion({\r\n                questionText: values?.questionText,\r\n                // correctAnswer: values?.correctAnswer,\r\n                answers: [values?.correctAnswer]\r\n            })\r\n            // .then((response) => {\r\n            //     console.log(\"Success Response\")\r\n            //     console.log(response)\r\n\r\n            // }).catch((error) => {\r\n            //     console.log(\"error\")\r\n            //     console.log(error)\r\n\r\n\r\n            // })\r\n            // pass the request outside the component\r\n\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                answers: [values.correctAnswer],\r\n            })\r\n\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n\r\n    }\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: initValues?.correctAnswer || '',\r\n\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={EssaySchema}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Model Answer</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Model Answer....'\r\n                        multiline\r\n                        rows={9}\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default Essay;\r\n","/**\n * params order is not mandatory\n * @param {Number} first \n * @param {Number} second \n * @returns a random number between two numbers\n */\nconst getRandomValue = (first, second) => {\n    let max = Math.max(first, second)\n    let min = Math.min(first, second)\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst useRandomValue = () => {\n    return getRandomValue\n}\nexport default useRandomValue\n","import { TextField, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../../../constants/Colors';\nimport * as yup from 'yup';\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\nimport mexp from 'math-expression-evaluator'\nimport useRandomValue from '../../../../hooks/useRandomValue';\n\nconst VAR_REGEX = /\\[[a-z A-Z]+\\]/g\nconst BRACKETS_REGEX = /\\[|\\]/g\n\nconst Label = styled.label`\n    display: block;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000;\n`\nconst Formula = ({ initValues, getQuestionCreationRequest = () => { } }) => {\n    const EssaySchema = yup.object().shape({\n        questionText: yup.string().required('This is a required field'),\n        formula: yup.string().required('This is a required field'),\n        numberOfQuestions: yup.number().required().max(50).min(1),\n    });\n\n    const getRandomValue = useRandomValue();\n    const submitQuestionHandler = (values) => {\n        let numberOfGeneratedQuestion = values.numberOfQuestions\n        let finalQuestionValue = []\n\n        // setting Variables\n        while (numberOfGeneratedQuestion--) {\n            let variablesAttr = []\n            vars.forEach(element => {\n                let generatedAttempt = {}\n                generatedAttempt['var'] = element[0]\n                generatedAttempt['value'] = getRandomValue(Number(element[1]), Number(element[2]))\n                variablesAttr.push(generatedAttempt)\n            });\n            finalQuestionValue.push({ variables: variablesAttr })\n        }\n\n        // setting final value\n        finalQuestionValue = finalQuestionValue.map(item => {\n            let formula = values.formula + ''\n            let vars = item.variables\n            vars.forEach(element => {\n                formula = formula.replace(element.var, element.value)\n            })\n            return { ...item, finalValue: mexp.eval(formula) }\n        })\n        setGeneratedQuestions(finalQuestionValue)\n    }\n\n    const [vars, setVars] = useState([])\n    const [uniqueTokensList, setUniqueTokensList] = useState([])\n    const [questionText, setQuestionText] = useState('')\n\n    /** Creating tokens */\n    useEffect(() => {\n        let tokenList = [...questionText?.matchAll(VAR_REGEX)]\n        tokenList = tokenList?.map(item => item[0])\n        tokenList = tokenList?.map(item => {\n            let editedToken = item + ''\n            editedToken = editedToken.replace(BRACKETS_REGEX, '')\n            return editedToken\n        })\n        const uniqueTokens = Array.from(new Set(tokenList))\n        setUniqueTokensList(uniqueTokens)\n    }, [questionText])\n\n    /** ONLY trigger unique tokens list changes  */\n    useEffect(() => {\n        let editedList = uniqueTokensList?.map(item => { return [item, '', ''] })\n        setVars(editedList)\n        setGeneratedQuestions(null)\n    }, [uniqueTokensList])\n\n    const onChangeMin = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][1] = value\n            return newVars\n        })\n    }\n\n    const onChangeMax = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][2] = value\n            return newVars\n        })\n    }\n\n    const [generatedQuestions, setGeneratedQuestions] = useState(null)\n\n    const createQuestion = () => {\n        console.log(generatedQuestions)\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    questionText: initValues?.questionText || '',\n                    correctAnswer: initValues?.correctAnswer || '',\n                    formula: initValues?.formula || '',\n                    numberOfQuestions: initValues?.numberOfQuestions || ''\n                }}\n                enableReinitialize={true}\n                validationSchema={EssaySchema}\n                onSubmit={submitQuestionHandler}\n            >\n                {props => (\n                    <form className='m-5' onSubmit={props.handleSubmit}>\n                        {/* Question Header */}\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\n                            <TextField\n                                name=\"questionText\"\n                                id=\"questionText\"\n                                placeholder='Question on your mind....'\n                                multiline\n                                rows={4}\n                                fullWidth\n                                value={props.values.questionText}\n                                onChange={(e) => { props.handleChange(e); setQuestionText(e.target.value) }}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.questionText && props.errors.questionText}\n                                error={props.touched.questionText && Boolean(props.errors.questionText)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='formula' className='mb-2'>Formula</Label>\n                            <TextField\n                                name=\"formula\"\n                                id=\"formula\"\n                                placeholder='Final Answer Formula'\n                                fullWidth\n                                value={props.values.formula}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.formula && props.errors.formula}\n                                error={props.touched.formula && Boolean(props.errors.formula)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        {vars?.map((variable, index) => (\n                            <div key={index} className='d-flex justify-content-between align-items-center mt-5'>\n                                <Label style={{ color: Colors.primary }}>{`${variable[0]} :`}</Label>\n                                <TextField\n                                    name=\"min\"\n                                    label=\"Min Value\"\n                                    placeholder='Variable minimum value'\n                                    value={variable[1]}\n                                    onChange={(e) => onChangeMin(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                                <TextField\n                                    name=\"max\"\n                                    label=\"Max Value\"\n                                    placeholder='Variable maximum value'\n                                    value={variable[2]}\n                                    onChange={(e) => onChangeMax(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                            </div>\n                        ))}\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='numberOfQuestions' className='mb-2'>Number of random questions</Label>\n                            <TextField\n                                name=\"numberOfQuestions\"\n                                id=\"numberOfQuestions\"\n                                type={'number'}\n                                placeholder='Max: 50'\n                                fullWidth\n                                value={props.values.numberOfQuestions}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.numberOfQuestions && props.errors.numberOfQuestions}\n                                error={props.touched.numberOfQuestions && Boolean(props.errors.numberOfQuestions)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Generate</button>\n\n                        {generatedQuestions ?\n                            <div className='mt-4'>\n                                <Typography\n                                    variant='h5'\n                                    color='primary'\n                                    style={{ textDecorationLine: 'underline' }}\n                                >\n                                    Generated Questions\n                                </Typography>\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            {uniqueTokensList?.map((item, index) => (\n                                                <th key={index + ''} scope=\"col\">{item}</th>\n                                            ))\n                                            }\n                                            <th scope=\"col\">{'Final Value'}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {generatedQuestions?.map((item, index) => (\n                                            <tr key={index + ''}>\n                                                {\n                                                    item?.variables?.map((item, index) => (\n                                                        <td key={index + ''}>{item.value}</td>\n                                                    ))\n                                                }\n\n                                                <th>{item?.finalValue}</th>\n                                            </tr>\n                                        ))\n                                        }\n                                    </tbody>\n                                </table >\n                            </div>\n                            :\n                            null\n                        }\n                    </form>\n                )}\n            </Formik>\n            <button onClick={createQuestion} className=\"btn btn-primary mx-auto mt-4\" type=\"button\">ADD</button>\n        </>\n    )\n\n};\n\nexport default Formula;\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MCQ from './QuestionTypes/MCQ';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons/lib/icons';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport Essay from './QuestionTypes/Essay';\r\nimport Formula from './QuestionTypes/Formula';\r\n\r\n\r\nconst AddQuestionScreen = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.question)\r\n    const oldQuestion = location.state?.question\r\n\r\n    /** get question details */\r\n    const [oldQuestionDetails, setOldQuestionDetails] = useState(null)\r\n    useEffect(() => {\r\n        if (!oldQuestion?.id) return\r\n        QuestionServices.getQuestionDetails(oldQuestion?.id)\r\n            .then(res => {\r\n                setOldQuestionDetails(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [oldQuestion?.id])\r\n\r\n    const [questionTypes, setQuestionTypes] = useState(null);\r\n    const getQuestionTypes = () => {\r\n        setQuestionTypes([\r\n            { id: '123', value: 'MCQ' },\r\n            { id: '111', value: 'Essay' },\r\n            { id: '122', value: 'Formula' }\r\n        ])\r\n    }\r\n    useEffect(() => {\r\n        getQuestionTypes();\r\n    }, []);\r\n\r\n\r\n    const [questionType, setQuestionType] = useState(oldQuestion?.type || '');\r\n    const questionTypeSelectionMenuMarkup = (\r\n        <div className='w-50 mx-auto'>\r\n            <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                fullWidth\r\n                label=\"Question Type\"\r\n                value={questionType}\r\n                onChange={(event) => setQuestionType(event.target.value)}\r\n                disabled={isEditMode}\r\n            >\r\n                {questionTypes?.map((type) => (\r\n                    <MenuItem key={type.id} value={type.value}>\r\n                        {type.value}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n\r\n    const createQuestionHandler = (request) => {\r\n        request\r\n            .then(res => {\r\n                console.log(\"Question request\", res)\r\n\r\n                let isFromExamCreation = location?.state?.fromExamCreation\r\n                if (isFromExamCreation) {\r\n                    dispatch(saveAQuestion([{ questionText: res?.questionText, id: res?.id }]))\r\n                }\r\n                showSuccessMsg(\"Request done successfully\")\r\n                history.goBack()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return <div className=\"row justify-content-center text-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            <CardComponent title={!isEditMode ? 'Add Question' : 'Edit Question'}>\r\n                <div className='p-4'>\r\n                    {questionTypes && questionTypeSelectionMenuMarkup}\r\n\r\n                    {!questionType &&\r\n                        <div className='d-flex flex-row justify-content-center align-items-center mt-5'>\r\n                            <ExclamationCircleOutlined size={36} style={{ color: Colors.danger, marginInlineEnd: '.5rem' }} />\r\n                            <h6 className='text-danger m-0'>Please Choose Question Type</h6>\r\n                        </div>\r\n                    }\r\n\r\n                    {questionType === 'MCQ' &&\r\n                        <div>\r\n                            <MCQ\r\n                                initValues={oldQuestionDetails?.type === 'MCQ' ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === 'Essay' &&\r\n                        <div>\r\n                            <Essay\r\n                                initValues={oldQuestionDetails?.type === 'Essay' ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === 'Formula' &&\r\n                        <div>\r\n                            <Formula\r\n                                initValues={oldQuestionDetails?.type === 'Formula' ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </CardComponent>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default AddQuestionScreen;\r\n","import React from 'react'\r\nimport { Button, Card, CardContent, CardHeader, colors, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n\r\nconst McqAnswer = ({\r\n    questionText,\r\n    choices,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n    const submitHandler = (values) => {\r\n        console.log(values)\r\n    }\r\n    const correctAnswer = choices?.find(item => item.isCorrect)\r\n    const formatedAnswer = (answer) => {\r\n        return {\r\n            id: answer?.id,\r\n            displayText: (answer?.option?.value || answer?.value)\r\n        }\r\n    }\r\n\r\n    const isCorrectStudentAnswer = questionMark === studentMark\r\n    return (\r\n        <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n            {studentAnswer ?\r\n                <CardHeader\r\n                    action={\r\n                        !isMarked ?\r\n                            <div>\r\n                                <IconButton onClick={markAsWrong} size='large'>\r\n                                    <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                </IconButton>\r\n                                <IconButton onClick={markAsRight} size='large'>\r\n                                    <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                </IconButton>\r\n                            </div>\r\n                            :\r\n                            <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                    {studentMark}\r\n                                </Typography>\r\n                                <Typography variant='h5'>\r\n                                    {`/${questionMark}`}\r\n                                </Typography>\r\n                            </div>\r\n                    }\r\n                />\r\n                :\r\n                null\r\n            }\r\n\r\n            <CardContent>\r\n                {/* Question Text */}\r\n                <Typography className='m-3' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                    {questionText}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            {/* MCQ Content */}\r\n            <CardContent className=''>\r\n                <form onSubmit={submitHandler}>\r\n                    <FormControl>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                            defaultValue={formatedAnswer(studentAnswer)?.id || formatedAnswer(correctAnswer)?.id}\r\n                            name=\"radio-buttons-group\"\r\n                        >\r\n                            {choices?.map(choice => (\r\n                                formatedAnswer(choice).id === formatedAnswer(correctAnswer).id ?\r\n                                    <div key={choice.id} className='d-flex align-items-center py-3 text-success' >\r\n                                        <FormControlLabel\r\n                                            key={formatedAnswer(choice).id}\r\n                                            value={formatedAnswer(choice).id}\r\n                                            disabled\r\n                                            control={<Radio />}\r\n                                            label={formatedAnswer(choice).displayText}\r\n                                        />\r\n                                        <CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                                    </div>\r\n                                    :\r\n                                    <div key={choice.id} className='d-flex align-items-center py-3 text-danger' >\r\n                                        <FormControlLabel\r\n                                            key={formatedAnswer(choice).id}\r\n                                            disabled\r\n                                            value={formatedAnswer(choice).id}\r\n                                            control={<Radio />}\r\n                                            label={formatedAnswer(choice).displayText}\r\n                                        />\r\n                                        {(!studentAnswer || (formatedAnswer(studentAnswer).id === formatedAnswer(choice).id)) ?\r\n                                            <CancelOutlinedIcon fontSize='large' color='error' />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </div>\r\n                            ))\r\n                            }\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </CardContent>\r\n            {isMarked ?\r\n                <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '18%' }}>\r\n                    {(isCorrectStudentAnswer) ?\r\n                        <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                        :\r\n                        <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                    }\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default McqAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\n\nconst EssayAnswer = ({\n    questionText,\n    correctAnswer,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark\n}) => {\n\n    const isCorrectStudentAnswer = questionMark === studentMark\n    return (\n        <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\n            {studentAnswer ?\n                <CardHeader\n                    action={\n                        !isMarked ?\n                            <div>\n                                <IconButton onClick={markAsWrong} size='large'>\n                                    <CancelOutlinedIcon fontSize='large' color=\"error\" />\n                                </IconButton>\n                                <IconButton onClick={markAsRight} size='large'>\n                                    <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\n                                </IconButton>\n                            </div>\n                            :\n                            <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\n                                <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\n                                    {studentMark}\n                                </Typography>\n                                <Typography variant='h5'>\n                                    {`/${questionMark}`}\n                                </Typography>\n                            </div>\n                    }\n                />\n                :\n                null\n            }\n\n            <CardContent>\n                {/* Question Text */}\n                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\n                    {questionText}\n                </Typography>\n            </CardContent>\n\n            {/* Essay Content */}\n            <CardContent className=''>\n                {studentAnswer ?\n                    <Typography sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Student Answer:</Typography>\n                    :\n                    null\n                }\n                <Typography className={studentAnswer ? '' : 'm-4'} variant={studentAnswer ? '' : 'h5'}>\n                    {studentAnswer ? studentAnswer?.value : correctAnswer?.value}\n                    {!studentAnswer ?\n                        < CheckCircleOutlineIcon fontSize='large' color='success' />\n                        :\n                        null\n                    }\n                </Typography>\n            </CardContent>\n\n            {/* MODEL ANSWER */}\n            {studentAnswer ?\n                <CardContent className=''>\n                    <Typography color='green' sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Model Answer:</Typography>\n                    <Typography color='green'>{correctAnswer?.value}</Typography>\n                </CardContent>\n                :\n                null\n            }\n\n            {isMarked ?\n                <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '25%' }}>\n                    {(isCorrectStudentAnswer) ?\n                        <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\n                        :\n                        <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\n                    }\n                </div>\n                :\n                null\n            }\n\n        </Card>\n    )\n}\n\nexport default EssayAnswer","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer';\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\n\r\nconst QuestionViewScreen = () => {\r\n    const { questionId } = useParams()\r\n\r\n    const [question, setQuestion] = useState(null)\r\n    useEffect(() => {\r\n        QuestionServices.getQuestionDetails(questionId)\r\n            .then(res => {\r\n                console.log(res?.question)\r\n                // console.log(res?.question)\r\n                setQuestion(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [questionId])\r\n\r\n    let QuestionMarkup = () => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n\r\n            return (\r\n                <EssayAnswer questionText={question?.questionText} correctAnswer={question?.question_option[0].option} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            console.log(\"ana 3mad y3m\")\r\n            return (question?.mcq &&\r\n                <McqAnswer questionText={question?.questionText} choices={question?.mcq.mcq_answers} />\r\n            )\r\n        }\r\n\r\n    }\r\n    return <div className=\"row justify-content-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n\r\n            {QuestionMarkup()}\r\n\r\n            {/* {question?.mcq &&\r\n                <McqAnswer questionText={question?.questionText} choices={question?.mcq.mcq_answers} />\r\n            } */}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default QuestionViewScreen;\r\n","import _axios from \"../axios-instance\";\n\nexport class MarkExamServices {\n    static getAllStudentsAnswers(examId) {\n        return _axios.get(`exams/${examId}/all-answers`)\n    }\n\n    static getSpecificStudentAnswers(examId, studentId) {\n        return _axios.get(`exams/${examId}/all-answers/answer`, {\n            params: {\n                student_id: studentId\n            }\n        })\n    }\n\n    static manualMark({ studentId, examId, questionId, questionMark }) {\n        return _axios.post(`exams/manual`, { studentId, examId, questionId, questionMark })\n    }\n\n    static markAllAutomatic(examId) {\n        return _axios.post(`exams/mark/${examId}`)\n    }\n\n    static markSpecificStudentAutomatic(examId, studentId) {\n        return _axios.post(`exams/mark/${examId}/${studentId}`)\n    }\n\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport DesktopAccessDisabledIcon from '@mui/icons-material/DesktopAccessDisabled';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport SupervisedUserCircleIcon from '@mui/icons-material/SupervisedUserCircle';\r\nimport PhotoCameraFrontIcon from '@mui/icons-material/PhotoCameraFront';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n\r\n\r\n\r\nconst AntiCheatingTimeline = ({ examConfig }) => {\r\n    const isRandom = examConfig?.questionsRandomOrder\r\n    const isDisableSwitch = examConfig?.disableSwitchBrowser\r\n    const isplagiarism = examConfig?.plagiarismCheck\r\n    const isFaceDetection = examConfig?.faceDetection\r\n    const isFaceVerify = examConfig?.faceRecognition\r\n    return (\r\n        <Timeline position=\"alternate\">\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                >\r\n                    Level1\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isRandom ? \"primary\" : \"error\"}>\r\n                        <ShuffleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Random Order\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                >\r\n                    Level2\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isDisableSwitch ? \"primary\" : \"error\"}>\r\n                        <DesktopAccessDisabledIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Disable Switch Browser\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level3\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isplagiarism ? \"primary\" : \"error\"}>\r\n                        <FactCheckIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Plagiarism Check\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level4\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isFaceDetection ? \"primary\" : \"error\"}>\r\n                        <SupervisedUserCircleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Detection\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level5\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineDot color={isFaceVerify ? \"primary\" : \"error\"}>\r\n                        <PhotoCameraFrontIcon />\r\n                    </TimelineDot>\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Recognition\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const ExamOverview = ({ questions, examConfigs }) => {\r\n    const { examId } = useParams()\r\n    return (\r\n        <>\r\n            <CardComponent title={'Anti Cheating Levels'}>\r\n                <AntiCheatingTimeline examConfig={examConfigs} />\r\n            </CardComponent>\r\n            <br /><br />\r\n            <CardComponent title={'Questions'}>\r\n                {questions?.map((item) => {\r\n\r\n\r\n                    if (item?.type === QuestionTypes.MCQ) {\r\n\r\n                        return (\r\n                            <div key={item?.id} className='m-4'>\r\n                                <McqAnswer questionText={item?.questionText} choices={item?.options} />\r\n                            </div>)\r\n                    }\r\n                    else if (item?.type === QuestionTypes.ESSAY) {\r\n                        return (\r\n                            <div key={item?.id} className='m-4'>\r\n                                <EssayAnswer questionText={item?.questionText} correctAnswer={item?.options[0]} />\r\n                            </div>)\r\n                    }\r\n                    return 0\r\n                }\r\n                )}\r\n            </CardComponent>\r\n        </>\r\n    )\r\n}","import { Typography } from '@mui/material'\nimport React from 'react'\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\n\nconst NoContentComponent = ({ text }) => {\n    return (\n        <div className='d-flex justify-content-center align-items-center'>\n            <DoNotDisturbAltIcon color='error' />\n            <Typography className='ms-1' color={'error'}>{text}</Typography>\n        </div>\n    )\n}\n\nexport default NoContentComponent","const useImageResolver = () => {\r\n    return (imageName) => {\r\n        if (imageName?.includes(\"http\")) return imageName\r\n        return 'https://smart-exam.s3.eu-central-1.amazonaws.com/uploads/' + imageName\r\n    }\r\n}\r\n\r\nexport default useImageResolver\r\n","import React from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Avatar, Button, colors, IconButton, Paper } from '@mui/material';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NoContentComponent from '../../../../Components/NoContentComponent/NoContentComponent';\r\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport { useParams } from 'react-router-dom';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\n\r\nconst StudentsList = ({ students, getStudentExams = () => { }, examConfigs }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const params = useParams()\r\n    const goToThisStudent = (id) => {\r\n        history.push(`${location.pathname}/${id}`, { examConfigs })\r\n    }\r\n\r\n    const markAllHandler = () => {\r\n        MarkExamServices.markAllAutomatic(params?.examId)\r\n            .then(res => {\r\n                showSuccessMsg(\"Mark All Student Successfully!\")\r\n                getStudentExams()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={markAllHandler} color='success' variant=\"contained\">Mark All <CheckOutlinedIcon /></Button>\r\n            </div>\r\n            <Paper className='mt-3' elevation={3}>\r\n                <List>\r\n                    {students?.map(item => (\r\n                        <ListItem key={`${item.student_id}_${item.attempt}`} onClick={() => goToThisStudent(item.student_id)}>\r\n                            <ListItemButton>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt={item.name} src={imageResolver(item?.image)} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primaryTypographyProps={item?.isMarked ? { color: Colors.success, fontWeight: 'bolder' } : {}}\r\n                                    primary={`${item.name}`}\r\n                                    secondary={item?.isMarked && `Mark: ${item.mark}`}\r\n                                />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    ))\r\n                    }\r\n                    {!students?.length ?\r\n                        <NoContentComponent text={\"No submittion yet\"} />\r\n                        :\r\n                        null\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsList","export const CheatTypes = {\r\n    FACE_DETECTION: \"FACE_DETECTION\",\r\n    FACE_RECOGNITION : \"FACE_RECOGNITION\",\r\n    SWITCH_BROWSER:\"SWITCH_BROWSER\"\r\n}\r\n\r\n\r\n","import { CheatTypes } from \"../../constants/CheatTypes\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class CheatServices {\r\n\r\n    static sentSwitchBrowserCheatAttempt(examId) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            type: CheatTypes.SWITCH_BROWSER\r\n        })\r\n    }\r\n    static sentFaceDetectionCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_DETECTION\r\n        })\r\n    }\r\n    static sentFaceRecognationCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_RECOGNITION\r\n        })\r\n    }\r\n\r\n\r\n\r\n    static getCheaters(examId) {\r\n        return _axios.get(`/exams/${examId}/cheaters`)\r\n    }\r\n\r\n    static performStudentDecrement(ActionData) {\r\n        return _axios.post(`/cheater/action`, ActionData)\r\n    }\r\n}","export const CheatActions = {\r\n    DISMISS: \"DISMISS\",\r\n    MINUS: \"MINUS\",\r\n    ZERO: \"ZERO\"\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/mofty.9e1fe332.jpg\";","export default __webpack_public_path__ + \"static/media/mofty2.809a9b07.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, Typography, TextField, Button } from '@mui/material'\r\n\r\nimport { CheatServices } from '../../../../apis/Services/CheatService';\r\n\r\nimport Mofty_Image from '../../../../assets/images/mofty.jpg';\r\nimport Mofty_Image_2 from '../../../../assets/images/mofty2.jpg';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport { CheatActions } from '../../../../constants/CheatActions';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { CheatTypes } from '../../../../constants/CheatTypes';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nconst ExamReport = () => {\r\n    const [cheaters, setCheaters] = useState([]);\r\n    const [decrementDegree, setDecrementDegree] = useState(0);\r\n    const params = useParams()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        CheatServices.getCheaters(params?.examId)\r\n            .then((response) => {\r\n                setCheaters(response.details)\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n\r\n            })\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const actionHandler = (cheaterDetails, action) => {\r\n\r\n        // {\r\n        //     \"cheatingDetailId\": 1,\r\n        //     \"action\": \"string\",\r\n        //     \"minusMarks\": 3.5,\r\n        //     \"type\": \"string\"\r\n        // }\r\n\r\n        // Real TODO DATA\r\n\r\n        if (action === CheatActions.DISMISS || action === CheatActions.ZERO) {\r\n            setDecrementDegree(0);\r\n\r\n        }\r\n        const ActionData = {\r\n\r\n            \"cheatingDetailId\": cheaterDetails?.id,\r\n            \"action\": action,\r\n            \"minusMarks\": decrementDegree,\r\n            \"type\": cheaterDetails?.type\r\n\r\n        }\r\n\r\n        // const ActionData = {\r\n\r\n        //     \"cheatingDetailId\": 85,\r\n        //     \"action\": action,\r\n        //     \"minusMarks\": decrementDegree,\r\n        //     \"type\": \"SWITCH_BROWSER\"\r\n\r\n        // }\r\n        CheatServices.performStudentDecrement(ActionData)\r\n            .then((response) => {\r\n                showSuccessMsg(\"ِAction Performed Successfully\")\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n\r\n\r\n            })\r\n\r\n        return\r\n    }\r\n\r\n    let imageResolver = useImageResolver()\r\n    return (\r\n        <div>\r\n            <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                Suspicious Cheaters\r\n            </Typography>\r\n            <hr />\r\n\r\n            {cheaters?.map((cheater_details) => {\r\n                return (\r\n                    <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n\r\n\r\n                        <div className=\"d-flex col-8 justify-content-start\">\r\n                            <div>\r\n                                <img\r\n                                    style={{ width: 200 }}\r\n                                    // src={`${Mofty_Image}`}\r\n                                    src={`${imageResolver(cheater_details?.profileImage)}`}\r\n                                    // src={`${cheaters[0]?.image}`}\r\n                                    alt={'User'}\r\n                                    loading=\"lazy\"\r\n                                />\r\n\r\n                            </div>\r\n                            <div>\r\n\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Name: {cheater_details?.studentName}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Type: {cheater_details?.type}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Original Profile Photo\r\n                                </Typography>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='m-4' />\r\n                        {cheater_details?.type !== CheatTypes.SWITCH_BROWSER &&\r\n                            <div className=\"d-flex col-8 align-items-center\">\r\n                                <div>\r\n                                    <img\r\n                                        style={{ width: 200 }}\r\n                                        src={`${imageResolver(cheater_details?.image)}`}\r\n\r\n                                        // src={`${Mofty_Image_2}`}\r\n                                        // src={`${cheaters[0]?.image}`}\r\n                                        alt={'no_photo'}\r\n                                        loading=\"lazy\"\r\n                                    />\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                        Suspect image (from his webcam)\r\n                                    </Typography>\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>}\r\n\r\n                        <hr />\r\n                        {/* Action Line */}\r\n\r\n                        <Typography className=' text-danger font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                            Perform Action To This Student (Be Careful..!)\r\n                        </Typography>\r\n                        <Typography className=' text-danger font-weight-bold' variant='h6' >\r\n                            You can either dismiss this issue, decrease his mark, or Revoke the exam (Mark As Zero)\r\n                        </Typography>\r\n                        <div className='m-5' />\r\n\r\n                        <div className=\"d-flex m-3 justify-content-between\">\r\n\r\n                            <Button variant=\"contained\" color=\"success\" onClick={() => { actionHandler(cheater_details, CheatActions.DISMISS) }}>\r\n                                Dismiss This Issue\r\n                            </Button>\r\n\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <TextField\r\n                                    error\r\n                                    id=\"outlined-error\"\r\n                                    label=\"Decrement Value. eg: 6\"\r\n                                    onChange={(event) => setDecrementDegree(event.target.value)}\r\n                                />\r\n                                <div className='m-2' />\r\n\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.MINUS) }}>\r\n                                    Confirm Decrease\r\n                                </Button>\r\n\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.ZERO) }}>\r\n                                Revoke Exam (Put Zero)\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </Card >\r\n\r\n                );\r\n            })}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExamReport;\r\n","import { Box, Tabs, Tab } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../../apis/Services/ExamService';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport { ExamOverview } from './ExamOverview';\r\nimport StudentsList from './StudentsList';\r\nimport ExamReport from './ExamReport'\r\nconst ExamView = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [selectedTab, setSelectedTab] = React.useState('Overview');\r\n    /**\r\n     * Auto Select tab based on query params\r\n     */\r\n    useEffect(() => {\r\n        let selectedTab = new URLSearchParams(location.search).get('selectedTab')\r\n        setSelectedTab(selectedTab || 'Overview')\r\n    }, [location.search?.selectedTab])\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n        history.push({\r\n            pathname: location.pathname,\r\n            search: `?selectedTab=${newValue}`\r\n        })\r\n    };\r\n\r\n    const params = useParams()\r\n    const [questions, setQuestions] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamQuestions(params.examId)\r\n            .then(res => {\r\n                setQuestions(res.questions)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const [studentAnswers, setStudentAnswers] = useState(null)\r\n    const getStudentExams = () => {\r\n        MarkExamServices.getAllStudentsAnswers(params.examId)\r\n            .then(res => {\r\n                console.log(res.solvedExams)\r\n                setStudentAnswers(res.solvedExams)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getStudentExams()\r\n    }, [])\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                console.log(res.configuration)\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mt-5\">\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <Tabs\r\n                            value={selectedTab}\r\n                            onChange={handleChange}\r\n                            textColor=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                            aria-label=\"secondary tabs example\"\r\n                        >\r\n                            <Tab value=\"Overview\" label=\"Overview\" />\r\n                            <Tab value=\"StudentAnswers\" label=\"Student Answers\" />\r\n                            <Tab value=\"ExamReport\" label=\"Exam Report\" />\r\n                        </Tabs>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 mt-5\">\r\n                    {selectedTab === 'Overview' &&\r\n                        <ExamOverview questions={questions} examConfigs={examConfigs} />\r\n                    }\r\n                    {selectedTab === 'StudentAnswers' &&\r\n                        <StudentsList\r\n                            students={studentAnswers}\r\n                            getStudentExams={getStudentExams}\r\n                            examConfigs={examConfigs}\r\n                        />\r\n                    }\r\n                    {selectedTab === 'ExamReport' &&\r\n                        \r\n                       <ExamReport></ExamReport>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamView","import { Button, Chip, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport useImageResolver from '../../../../hooks/useImageResolver'\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\n\r\nconst StudentCard = ({ name, isVerified, numberOfFaces, image, markAutoFun, examConfigs }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-6 col-12\">\r\n                <div className=\"d-flex\">\r\n                    <img\r\n                        className='shadow-sm'\r\n                        src={imageResolver(image)}\r\n                        style={{ height: 200, width: 200, objectFit: 'cover', borderRadius: 15 }}\r\n                        alt=\"student Photo\"\r\n                    />\r\n                    <div className='ms-3'>\r\n                        <Typography variant=\"h4\" fontWeight={'bold'} color={'primary'}>{name}</Typography>\r\n                        {examConfigs?.faceDetection ?\r\n                            <Chip icon={<PersonIcon />} color={(numberOfFaces === 1) ? 'success' : 'error'} label={`${numberOfFaces} face detected`} className=\"me-2\" />\r\n                            :\r\n                            null\r\n                        }\r\n                        {examConfigs?.faceRecognition ?\r\n                            <Chip icon={<VerifiedIcon />} color={isVerified ? 'success' : 'error'} label={isVerified ? \"Verified\" : \"Unverified\"} />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-md-6 col-12 mt-md-0 mt-5 text-md-end text-center'>\r\n                <Button onClick={markAutoFun} variant=\"contained\" color=\"success\">\r\n                    Mark Automatic\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StudentSolvedExam = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const examConfigs = location?.state?.examConfigs\r\n\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    const autoMarkThisStudentHandler = () => {\r\n        MarkExamServices.markSpecificStudentAutomatic(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                showSuccessMsg(`Mark ${studentExamResult.studentName}'s exam successfully!`)\r\n                history.goBack()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsRightHandler = (questionId, mark) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: mark\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsWrongHandler = (questionId) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: 0\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const getStudentAnswers = () => {\r\n        MarkExamServices.getSpecificStudentAnswers(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                setStudentExamResult(res)\r\n                console.log(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getStudentAnswers()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <StudentCard\r\n                name={studentExamResult?.studentName}\r\n                isVerified={studentExamResult?.isVerified}\r\n                numberOfFaces={studentExamResult?.numberOfFaces}\r\n                image={studentExamResult?.image}\r\n                markAutoFun={autoMarkThisStudentHandler}\r\n                examConfigs={examConfigs}\r\n            />\r\n            <hr />\r\n            <div className=\"row mt-5 justify-content-center\">\r\n                <div className=\"col-12\">\r\n                    <>\r\n                        {studentExamResult?.solution?.map(item =>\r\n                            <div key={item.id} className='my-2'>\r\n                                {(item?.type === QuestionTypes.MCQ) ?\r\n                                    <McqAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        choices={item?.options}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.ESSAY) ?\r\n                                    <EssayAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                        correctAnswer={item?.options[0]}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                        )}\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentSolvedExam","import AddExam from '../Views/Instructor/Exams/AddExam/AddExam'\nimport AddExamQuestions from '../Views/Instructor/Exams/AddExamQuestions/AddExamQuestions'\nimport Exams from '../Views/Instructor/Exams/Exams'\nimport Questions from '../Views/Instructor/Questions/Questions'\nimport SetExamOptions from '../Views/Instructor/Exams/SetExamOptions/SetExamOptions'\nimport AddQuestionScreen from '../Views/Instructor/Questions/AddQuestionScreen'\nimport QuestionViewScreen from '../Views/Instructor/Questions/QuestionViewScreen'\nimport ExamView from '../Views/Instructor/Exams/ExamView'\nimport StudentSolvedExam from '../Views/Instructor/Exams/ExamView/StudentSolvedExam'\n\nconst InstructorRoutes =\n    [\n        { path: '/exams', component: Exams, exact: true },\n        \n        { path: '/exams/add', component: AddExam, exact: true },\n        { path: '/exams/edit', component: AddExam, exact: true },\n        { path: '/exams/:examId/set-options', component: SetExamOptions, exact: true },\n        { path: '/exams/:examId/add-questions', component: AddExamQuestions, exact: true },\n\n        { path: '/questions', component: Questions, exact: true },\n        { path: '/questions/add', component: AddQuestionScreen, exact: true },\n        { path: '/questions/edit', component: AddQuestionScreen, exact: true },\n        { path: '/questions/:questionId', component: QuestionViewScreen, exact: true },\n\n        { path: '/exams/:examId', component: ExamView, exact: true },\n        { path: '/exams/:examId/:studentId', component: StudentSolvedExam, exact: true },\n    ]\nexport default InstructorRoutes\n","import Home from '../Views/Home/Home'\n\nconst MainRoutes =\n    [\n        { path: \"/\", component: Home, exact: true },\n    ]\n\nexport default MainRoutes\n","import React from 'react'\nimport './Home.css'\n\nconst Home = () => {\n    return (\n        \n        <div className='main' style={{minHeight:\"80vh\"}}>\n            {/* <h1>Hiii</h1> */}\n            {/* <Signupinquiry></Signupinquiry> */}\n            {/* <Signup></Signup> */}\n            {/* <Login></Login> */}\n        </div>\n    )\n}\n\nexport default Home\n","import Webcam from \"react-webcam\";\nimport { useRef, useCallback } from \"react\";\nimport Button from '@mui/material/Button';\n\n// const videoConstraints = {\n//     width: 1280,\n//     height: 720,\n//     facingMode: \"user\"\n// };\n\nconst TakePhoto = (props) => {\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n\n\n            const imageSrc = webcamRef.current.getScreenshot();\n            props.captured(imageSrc)\n            props.clicked()\n\n        },\n\n\n\n\n\n        [webcamRef,props]\n    );\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-center\">\n                <Webcam\n                    audio={false}\n                    // height={720}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                // width={1280}\n                // videoConstraints={videoConstraints}\n                />\n\n            </div>\n            {/* {imgSrc && (\n                <img src={imgSrc} alt=\"555\" />\n\n            )} */}\n            <div className=\"d-flex justify-content-center\">\n                <Button\n                    className='btn m-2 p-2 text-white'\n                    size=\"small\"\n                    variant=\"contained\"\n                    color='success'\n                    onClick={capture}\n                >\n                    Capture\n                </Button>\n\n            </div>\n        </div>\n    );\n};\nexport default TakePhoto;\n","import React from 'react'\nimport './Loader.css'\n\nconst Loader = () => {\n    return (\n        <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Loader","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport TakePhoto from '../TakePhoto/TakePhoto';\r\nimport { useState } from 'react';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport moment from 'moment';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../../Components/Loader/Loader';\r\n\r\n\r\nconst Examinstructions = (props) => {\r\n    const exam = props.location.state.exam\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState(false);\r\n    const [noOfFaces, setNoOfFaces] = useState(0);\r\n    const [photoVerified, setPhotoVerified] = useState(false);\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        console.log(examId)\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                console.log(res.configuration)\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToExamHandler = (event) => {\r\n        // this code pevents from going to another page\r\n        event.preventDefault()\r\n\r\n        let startExamData = {\r\n            \"startTime\": moment().format('yyyy-MM-DD HH:mm:ss'),\r\n            \"numberOfFaces\": noOfFaces,\r\n            \"isVerified\": photoVerified\r\n        }\r\n        ExamServices.startExam(exam.id, startExamData)\r\n            .then((response) => {\r\n                console.log(\"Starting Exam\")\r\n                console.log(response)\r\n\r\n                props.history.push({\r\n                    pathname: `/exams/${exam.id}/start`,\r\n                    state: { exam: exam }\r\n                })\r\n            }).catch((error) => {\r\n                if (error?.message?.includes(\"You must submit the previous attempt first before starting a new attempt\")) {\r\n                    props.history.push({\r\n                        pathname: `/exams/${exam.id}/start`,\r\n                        state: { exam: exam }\r\n                    })\r\n                    return\r\n                }\r\n                HandleErrors(error)\r\n            })\r\n    }\r\n\r\n    const photoTakenHandler = (img) => {\r\n        setIsLoading(true)\r\n        setIsPhotoTaken(true)\r\n        showSuccessMsg(\"Photo Taken Successfully\")\r\n\r\n        let faceDetectionData = {\r\n            \"image\": img,\r\n            \"examId\": exam.id\r\n        }\r\n        let faceVerificationData = {\r\n            \"image1\": img,\r\n            \"examId\": exam.id\r\n        }\r\n\r\n        ExamServices.applyFaceDetection(faceDetectionData)\r\n            .then((response) => {\r\n                setNoOfFaces(response.numberOfFaces)\r\n                if (response.numberOfFaces !== 1) {\r\n                    return {verified: false}\r\n                }\r\n                return ExamServices.applyFaceVerification(faceVerificationData)\r\n            })\r\n            .then((response) => {\r\n                setPhotoVerified(response.verified)\r\n            })\r\n            .finally(() => { setIsLoading(false) })\r\n        return\r\n    }\r\n\r\n    const mustVerifyFace = (examConfigs?.faceRecognition || examConfigs?.faceDetection)\r\n    return (examConfigs ?\r\n        <div>\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Before The Exam'}>\r\n                        <div className=\"m-5 text-start \">\r\n                            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Instructions Title */}\r\n                                    <Typography className='text-danger font-weight-bold' variant=\"h4\" component=\"div\">\r\n                                        Important Instructions\r\n                                        <hr />\r\n                                    </Typography>\r\n                                    <ul>\r\n                                        {mustVerifyFace?\r\n                                            <li className='text-danger font-weight-bold'>\r\n                                                Verify your identity with a photo before entering the exam.\r\n                                            </li>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        <li>\r\n                                            Don't use internet for getting information.\r\n                                        </li>\r\n                                        <li>\r\n                                            No one else can be in the room with you.\r\n                                        </li>\r\n                                        <li>\r\n                                            Time is limited, so organize your time well with questions.\r\n                                        </li>\r\n                                        <li>\r\n                                            The room must be well-lit and you must be clearly visible.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className='text-center'>\r\n\r\n                                    </div>\r\n                                    <div className='text-center text-success' >\r\n                                        Good Luck with your exam!\r\n                                    </div>\r\n\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-end'>\r\n                                    {!isLoading ?\r\n                                        <>\r\n                                            {mustVerifyFace ?\r\n                                                <Popup\r\n                                                    trigger={\r\n                                                        <Button\r\n                                                            className='btn m-2 p-2 text-white'\r\n                                                            size=\"large\"\r\n                                                            variant=\"contained\"\r\n                                                            color='warning'\r\n                                                        >\r\n                                                            Take Photo\r\n                                                        </Button>\r\n                                                    }\r\n                                                    modal\r\n                                                    lockScroll\r\n                                                    position=\"top center\"\r\n                                                >\r\n                                                    {close => (\r\n                                                        <CardComponent title={'Take a nice photo'}>\r\n                                                            <h4 className=\"d-flex justify-content-center\">\r\n                                                                Make sure the place is well lit!\r\n                                                            </h4>\r\n                                                            <TakePhoto\r\n                                                                captured={photoTakenHandler}\r\n                                                                clicked={close}\r\n                                                            ></TakePhoto>\r\n                                                        </CardComponent>\r\n\r\n                                                    )}\r\n                                                </Popup>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <Button\r\n                                                className='btn m-2 p-2 text-white'\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                color='success'\r\n                                                onClick={goToExamHandler}\r\n                                                disabled={(mustVerifyFace && !isPhotoTaken)}\r\n                                            >\r\n                                                Start Exam Now\r\n                                            </Button>\r\n                                        </>\r\n                                        :\r\n                                        <div className='me-4 d-flex flex-column align-items-center'>\r\n                                            <Typography color=\"primary\">Verifing...!</Typography>\r\n                                            <Loader />\r\n                                        </div>\r\n                                    }\r\n                                </CardActions>\r\n                            </Card>\r\n                        </div>\r\n                    </CardComponent>\r\n                </div>\r\n            </div >\r\n        </div>\r\n        :\r\n        <div className='d-flex justify-content-center align-items-center' style={{ height: '70vh' }}>\r\n            <Loader />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Examinstructions);\r\n","import { Card, CardActions, CardContent, Chip, Typography, Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ExamServices } from '../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nconst MyResults = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams({ isMarked: true })\r\n            .then(res => {\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToResultDetails = (examId) => {\r\n        history.push(`${location.pathname}/${examId}`)\r\n    }\r\n\r\n    const isFailed = (studentMark, totalMark) => {\r\n        return studentMark < (totalMark / 2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Marked Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card onClick={() => goToResultDetails(exam.id)} key={exam.id} className='shadow p-3 mb-5 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    <Grid display={'flex'} justifyContent={'space-between'} direction={'row'}>\r\n                                        <Grid>\r\n                                            {/* Exam Title */}\r\n                                            <Typography variant=\"h4\" component=\"div\">\r\n                                                {exam.name}\r\n                                            </Typography>\r\n                                            {exam.isSubmitted &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Submitted'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                            {exam.isMarked &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Marked'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid className={isFailed(exam.mark?.totalMark, exam.totalMark) ? 'text-danger' : 'text-success'} display={'flex'} direction={'row'}>\r\n                                            <Typography variant='h5'>\r\n                                                {exam.mark?.totalMark}\r\n                                            </Typography>\r\n                                            <Typography variant='h5'>\r\n                                                {`/${exam.totalMark}`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Duration:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {exam.duration}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardActions>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MyResults","import DomainUrl from \"../Domain\";\n\nexport const STUDENT_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/students/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/students/me`,\n        method:'GET'\n    }\n};\n\n","import { STUDENT_ENDPOINTS } from \"../Endpoints/StudentEndpoints\";\r\nimport { Network } from \"../Network\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class StudentServices {\r\n    // sign up\r\n    static register(values) {\r\n        return Network.fetch(STUDENT_ENDPOINTS.register.url, {\r\n            body: JSON.stringify(values),\r\n            method: STUDENT_ENDPOINTS.register.method,\r\n        });\r\n    }\r\n\r\n    // get my profile\r\n    static getMyProfile() {\r\n        return Network.fetch(STUDENT_ENDPOINTS.getMyProfile.url, {\r\n            method: STUDENT_ENDPOINTS.getMyProfile.method,\r\n        }, true);\r\n    }\r\n\r\n    static getSpecificExamResults(examId) {\r\n        return _axios.get(`/exams/${examId}/report`)\r\n    }\r\n}","import { Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { StudentServices } from '../../../apis/Services/StudentService'\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer'\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\n\r\nconst ResultDetails = () => {\r\n    const { examId } = useParams()\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        StudentServices.getSpecificExamResults(examId)\r\n            .then(res => {\r\n                console.log(res)\r\n                setStudentExamResult(res.solution)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    {studentExamResult?.map(item =>\r\n                        <div key={item.question_id} className='my-2'>\r\n                            {(item?.question?.type === QuestionTypes.MCQ) ?\r\n                                <McqAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    choices={item?.question?.answers}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                            {(item?.question?.type === QuestionTypes.ESSAY) ?\r\n                                <EssayAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    correctAnswer={item?.question?.answers[0]}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultDetails","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { Chip, colors, Grid } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n\r\n\r\n\r\nconst ShowExams = (props) => {\r\n    // const [exam, setExam] = useState(null)\r\n\r\n    const goToInstructionsHandler = (event, exam) => {\r\n        // this code pevents from going to another page\r\n        //event.preventDefault()\r\n\r\n        props.history.push({\r\n            pathname: `/exams/${exam.id}`,\r\n            state: { exam: exam }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get exams\r\n     */\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams()\r\n            .then(res => {\r\n                console.log(\"Published Exams\")\r\n                console.log(res)\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const getRemainingEndTime = (examEndDate) => {\r\n        let result = moment(examEndDate).diff(moment(), 'hours')\r\n        let remainingMins = moment(examEndDate).diff(moment().add(result, 'hours'), 'minutes')\r\n        if (result > 0 || remainingMins > 0)\r\n            return { hours: result, mins: remainingMins }\r\n        else\r\n            return null\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Your Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card style={{ border: exam.isSubmitted ? `1px solid ${Colors.success}` : '' }} key={exam.id} className='shadow p-2 pb-0 mb-3 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Exam Title */}\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {exam.name}\r\n                                    </Typography>\r\n                                    {exam.isSubmitted &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Submitted'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    {exam.isMarked &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Marked'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'}>Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Typography variant=\"body3\">\r\n                                        <b>Duration:</b> {exam.duration}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        className='btn m-2 p-2 btn-primary text-white'\r\n                                        size=\"small\"\r\n                                        onClick={(e) => goToInstructionsHandler(e, exam)}\r\n                                    >\r\n                                        Go to this Exam\r\n                                    </Button>\r\n                                </CardActions>\r\n                                {getRemainingEndTime(exam.endAt) ?\r\n                                    <CardActions className='d-flex justify-content-center'>\r\n                                        <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                            <Typography fontWeight={'bold'}>Close in:</Typography>\r\n                                            <Typography\r\n                                                className='mx-1'\r\n                                                fontStyle='italic'\r\n                                                color={getRemainingEndTime(exam.endAt).hours > 24 ? Colors.success : Colors.danger}>\r\n                                                {`[${getRemainingEndTime(exam.endAt).hours} h ${getRemainingEndTime(exam.endAt).mins} m]`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardActions>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withRouter(ShowExams);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\nimport {QuestionTypes} from '../../../../constants/QuestionTypes'\r\n\r\n\r\n\r\n\r\nconst MCQ = (props) => {\r\n\r\n    const [chosenOptionID, setChosenOptionID] = useState(null);\r\n    const [chosenAnswer, setChosenAnswer] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentQuestionNumber !== props.questionIndex - 1) return\r\n\r\n        setChosenOptionID(props.savedStudentAnswer?.chosenOptionID)\r\n        setChosenAnswer(props.savedStudentAnswer?.chosenAnswer)\r\n        // eslint-disable-next-line\r\n    }, [props.currentQuestionNumber]);\r\n\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n\r\n        setChosenOptionID(parseInt(e.target.id))\r\n        setChosenAnswer(e.target.value)\r\n\r\n        // const answer = {\r\n        //     chosenOptionID: chosenOptionID,\r\n        //     chosenAnswer: chosenAnswer\r\n\r\n        // }\r\n        // console.log(props)\r\n        // props.saveAns(props.questionIndex, answer)\r\n\r\n        // suppose that you send data to redux here\r\n    }\r\n\r\n    let isCheckedCondition = (ansIndex) => {\r\n        // return chosenOptionID && parseInt(chosenOptionID) === parseInt(props.savedStudentAnswer?.chosenOptionID)\r\n        return parseInt(chosenOptionID) === parseInt(props.answers[ansIndex]?.id)\r\n    }\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.questionText}\r\n\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent className=''>\r\n                    <form >\r\n                        {/* Option 1 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(0)}\r\n                                type=\"radio\"\r\n                                value={props.answers[0]?.value}\r\n                                id={props.answers[0]?.id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[0]?.id}>\r\n                                {props.answers[0]?.value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* Option 2 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(1)}\r\n                                type=\"radio\"\r\n                                value={props.answers[1]?.value}\r\n                                id={props.answers[1]?.id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[1]?.id}>\r\n\r\n                                {props.answers[1]?.value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        {/* Option 3 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(2)}\r\n                                type=\"radio\"\r\n                                value={props.answers[2]?.value}\r\n                                id={props.answers[2]?.id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[2]?.id} >\r\n\r\n                                {props.answers[2]?.value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                        {/* Option 4 */}\r\n                        <div className=\"form-check m-3\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                checked={isCheckedCondition(3)}\r\n                                type=\"radio\"\r\n                                value={props.answers[3]?.value}\r\n                                id={props.answers[3]?.id}\r\n                                onChange={onChangeHandler}\r\n                                name=\"flexRadioDefault\" />\r\n\r\n                            <label className=\"form-check-label\" htmlFor={props.answers[3]?.id}>\r\n                                {props.answers[3]?.value}\r\n                            </label>\r\n                        </div>\r\n\r\n\r\n\r\n                    </form>\r\n\r\n\r\n\r\n\r\n                </CardContent>\r\n\r\n\r\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-danger text-white'\r\n                        variant=\"contained\"\r\n                        onClick={props.clickedPrevious}\r\n                        disabled={props.previousButtonDisabled}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-primary text-white'\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            props.clickedNext(chosenOptionID, chosenAnswer, QuestionTypes.MCQ)\r\n                            props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\r\n                            setChosenOptionID(null)\r\n                        }}\r\n                    >\r\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                    </button>\r\n\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default MCQ;\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { useState } from 'react';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n// import { connect } from 'react-redux';\r\n// import { saveAnswer } from '../../../../redux/actions/QuestionActions'\r\n\r\nconst Essay = (props) => {\r\n\r\n\r\n\r\n    const [essayAnswer, setEssayAnswer] = useState('');\r\n\r\n    const essayChangedHandler = (event) => {\r\n        setEssayAnswer(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setEssayAnswer(props.question?.studentAnswer?.chosenAnswer || '')\r\n        // console.log(props.question?.studentAnswer)\r\n    }, []);\r\n    \r\n    const retrieveOldAnswer = () => {\r\n        return essayAnswer  \r\n    }\r\n\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* TODO, FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.question?.questionText}\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n                {/* Essay Text Field */}\r\n                <CardContent className=''>\r\n                    <TextField\r\n                        id=\"outlined-multiline\"\r\n                        label=\"Your Answer\"\r\n                        multiline\r\n                        rows={8}\r\n                        fullWidth\r\n                        // value={essayAnswer === retrieveOldAnswer() ? essayAnswer : ''}\r\n                        value={essayAnswer}\r\n\r\n                        onChange={essayChangedHandler}\r\n                    />\r\n\r\n                </CardContent>\r\n\r\n\r\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-danger text-white'\r\n                        variant=\"contained\"\r\n                        disabled={props.previousButtonDisabled}\r\n                        onClick={() => {\r\n                            props.clickedPrevious() \r\n                            retrieveOldAnswer()\r\n                        }}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n\r\n                    <button\r\n                        className='btn m-2 p-auto btn-primary text-white'\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            const answer = essayAnswer\r\n                            props.clickedNext(null, answer, QuestionTypes.ESSAY)\r\n                            const nextAnswer = props.question?.studentAnswer?.chosenAnswer || ''\r\n                            setTimeout(() => {\r\n                                setEssayAnswer(nextAnswer)\r\n                                \r\n                            },1000);\r\n                            // setEssayAnswer('')\r\n                            // props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\r\n                            // setEssayAnswer(\"\")\r\n                        }}\r\n                    >\r\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                    </button>\r\n\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Essay;\r\n","/**\n * random the order of a list\n * @param {Array} list \n * @returns shuffled list\n */\nconst shuffler = (list) => {\n    return list.sort(() => Math.random() - 0.5)\n}\n\nconst useListShuffler = () => {\n    return shuffler\n}\n\nexport default useListShuffler\n","import { useEffect, useState } from \"react\"\n\nconst useSwitchBrowserDetector = () => {\n    const [isBrowserHidden, setIsBrowserHidden] = useState(null)\n    useEffect(() => {\n        window.addEventListener('blur', () => {\n            setIsBrowserHidden(true)\n        })\n        window.addEventListener('focus', () => {\n            setIsBrowserHidden(false)\n        })\n        return () => {\n            console.log(\"hiiiiiiiiiiiiiiii\")\n            window.removeEventListener('blur', () => { })\n            window.removeEventListener('focus', () => { })\n        }\n    }, [])\n\n    return isBrowserHidden\n}\n\nexport default useSwitchBrowserDetector\n","export default __webpack_public_path__ + \"static/media/cheat-inspector.4efbf1c5.png\";","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InspectorCheaterImage from '../../assets/images/cheat-inspector.png'\n\nconst CheaterPopup = ({ isVisible, setVisibility, cheatReasons, cheaterImage }) => {\n\n    const handleClose = () => {\n        setVisibility(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isVisible}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle color='error' id=\"alert-dialog-title\">\n                    {\"CHEAT ATTEMPT !!\"}\n                </DialogTitle>\n                <DialogContent>\n                    <div className='d-flex'>\n                        {cheaterImage ?\n                            <img className='w-50' alt='cheater' src={cheaterImage} />\n                            :\n                            null\n                        }\n                        <img className={cheaterImage ? 'w-50' : 'w-100'} alt='detector' src={InspectorCheaterImage} />\n                    </div>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        You're trying to cheat by <b className='text-uppercase'>{cheatReasons?.join(' & ')}</b> and we have reported that attempt to your instructor.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button color='error' onClick={handleClose} autoFocus>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default CheaterPopup\n","import React, { useEffect, useState } from 'react'\nimport styles from './ExamCounter.module.css'\n\nconst _withLeadingZero = (number) => {\n    return number < 10 ? `0${number}` : number\n}\nconst ExamCounter = ({ numberOfMins = 1, onFinish = () => { } }) => {\n    const [remainingSeconds, setremainingSeconds] = useState(numberOfMins * 60)\n    const hours = Math.floor(remainingSeconds / (60 * 60))\n    const mins = Math.floor(remainingSeconds / (60))\n\n    useEffect(() => {\n        if(!numberOfMins) return\n        let numberOfSeconds = remainingSeconds\n        let timer = setInterval(() => {\n            if (numberOfSeconds <= 0) {\n                clearInterval(timer)\n                onFinish()\n                return\n            }\n            setremainingSeconds(prevState => prevState - 1)\n            numberOfSeconds--\n        }, 1000);\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [numberOfMins])\n\n    return (\n        <div className='m-4'>\n            <h1 className={styles.primaryText}>{`${_withLeadingZero(hours)}:${_withLeadingZero(mins%60)}:${_withLeadingZero(remainingSeconds % 60)}`}</h1>\n        </div>\n    )\n}\n\nexport default ExamCounter","import React, { useEffect, useRef } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport MCQ from '../Questions/MCQ/MCQ';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport { useState } from 'react';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useParams } from 'react-router-dom';\r\nimport Essay from '../Questions/Essay/Essay';\r\n\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport useListShuffler from '../../../hooks/useListShuffler';\r\nimport useSwitchBrowserDetector from '../../../hooks/useSwitchBrowserDetector';\r\nimport CheaterPopup from '../../../Components/CheaterPopup/CheaterPopup';\r\nimport Webcam from 'react-webcam';\r\nimport ExamCounter from '../../../Components/ExamCounter/ExamCounter';\r\nimport { CheatServices } from '../../../apis/Services/CheatService';\r\nimport moment from 'moment';\r\n\r\nconst MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK = 10\r\nconst _getMinsFromDuration = (duration) => {\r\n    if (!duration) return null\r\n    let durationList = duration?.split(':')\r\n    let mins = Number(durationList[0]) * 60 + Number(durationList[1])\r\n    return mins\r\n}\r\nconst _getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nconst TakeExam = (props) => {\r\n    const params = useParams()\r\n    const exam = props.location.state?.exam || { id: params.examId, name: 'Continoue The Exam' }\r\n    const [questions, setQuestions] = useState(null);\r\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n\r\n    const shuffler = useListShuffler()\r\n    const randomChoices = (choices) => {\r\n        return shuffler(choices)\r\n    }\r\n    const randomQuestions = (questions) => {\r\n        return shuffler(questions)\r\n    }\r\n\r\n    const [examInfo, setExamInfo] = useState(null)\r\n    const [examOptions, setExamOptions] = useState(null)\r\n\r\n    const [endExamTime, setEndExamTime] = useState(null)\r\n\r\n    /** getting exam config */\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(exam.id)\r\n            .then(res => {\r\n                setExamOptions(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting exam info*/\r\n    useEffect(() => {\r\n        ExamServices.getExamInfo(exam.id)\r\n            .then(res => {\r\n                setExamInfo(res.exam)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting questions */\r\n    useEffect(() => {\r\n        if (!examOptions) return\r\n\r\n        let responseQuestions;\r\n        ExamServices.getExamQuestions(exam.id)\r\n            .then((response) => {\r\n                responseQuestions = response.questions\r\n                return ExamServices.getStudentExamAnswers(exam.id)\r\n            })\r\n            .then(res => {\r\n                setEndExamTime(res?.endTime)\r\n\r\n                // Formatting answer array stage\r\n                console.log(\"Student Anses\")\r\n                console.log(res)\r\n                let formatedAnswers = {}\r\n                res?.answers.forEach((answer) => {\r\n                    formatedAnswers[answer.question_id] = { chosenOptionID: answer.option_id, chosenAnswer: answer.studentAnswer }\r\n                })\r\n                //formated question stage\r\n                let formatedQuestions = responseQuestions.map((question) => {\r\n                    let thisQuestionAnswer = formatedAnswers?.[question.id]\r\n                    if (!thisQuestionAnswer) return question\r\n\r\n                    let formatedQuestion = { ...question, studentAnswer: thisQuestionAnswer }\r\n                    return formatedQuestion\r\n                })\r\n                /** Randomize choices */\r\n                formatedQuestions = formatedQuestions?.map(item => { return { ...item, answers: randomChoices(item?.options) } })\r\n\r\n                /** Randomize Question */\r\n                if (examOptions?.questionsRandomOrder)\r\n                    formatedQuestions = randomQuestions(formatedQuestions)\r\n\r\n                setQuestions([...formatedQuestions])\r\n            })\r\n            .catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n    }, [exam.id, examOptions]);\r\n\r\n    /** Timer to sent cheat reports */\r\n    let timer;\r\n    let examDurationInMins = Math.ceil(Number(moment(endExamTime).diff(moment(), 'seconds')) / 60);\r\n    const [totalCountedMins, setTotalCountedMins] = useState(0)\r\n    const [lastRandomMin, setLastRandomMin] = useState(1)\r\n    const activateJobWithRandomTriggerTimer = (RandomMins, callback = () => { }) => {\r\n        timer = setTimeout(() => {\r\n            setTotalCountedMins(prevState => prevState + RandomMins)\r\n            setLastRandomMin(RandomMins)\r\n            callback()\r\n        }, RandomMins * 60 * 100);\r\n    }\r\n    useEffect(() => {\r\n        if (!examDurationInMins) return\r\n        if (totalCountedMins >= examDurationInMins) return\r\n        let randomMins = _getRandomNumber(1, Math.min(MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK, (examDurationInMins - lastRandomMin + 1)))\r\n        activateJobWithRandomTriggerTimer(randomMins, () => {\r\n            examOptions?.faceDetection && reportFaceDetectionCheater()\r\n            examOptions?.faceRecognition && reportFaceRecognationCheater()\r\n        })\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [totalCountedMins, examDurationInMins])\r\n\r\n\r\n    const [cheatReasons, setCheatReasons] = useState([])\r\n    const [cheaterImage, setCheaterImage] = useState(null)\r\n    const [isCheaterPopVisible, setIsCheaterPopVisible] = useState(null)\r\n\r\n    /** Switch Browser detector */\r\n    const isBrowserSwitched = useSwitchBrowserDetector()\r\n    const reportSwitchBrowserCheater = () => {\r\n        CheatServices.sentSwitchBrowserCheatAttempt(exam.id)\r\n            .then(res => {\r\n                setIsCheaterPopVisible(true)\r\n                setCheatReasons(prevState => Array.from(new Set([...prevState, 'Switching the browser'])))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        if (!isBrowserSwitched) return\r\n        examOptions?.disableSwitchBrowser && reportSwitchBrowserCheater()\r\n    }, [isBrowserSwitched])\r\n\r\n    /** Face detection detector */\r\n    const reportFaceDetectionCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceDetectionData = {\r\n            \"image\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceDetection(faceDetectionData)\r\n            if (Number(response.numberOfFaces) === 1) return\r\n            await CheatServices.sentFaceDetectionCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, 'Multi face detection'])))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /** Face recognation detector */\r\n    const reportFaceRecognationCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceVerificationData = {\r\n            \"image1\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceVerification(faceVerificationData)\r\n            if (response.verified) return\r\n            await CheatServices.sentFaceRecognationCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, 'Face unvalidity'])))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const clickedNextHandler = (chosenOptionID, chosenAnswer, questionType) => {\r\n        let answerData = {}\r\n        if (questionType === QuestionTypes.MCQ) {\r\n            answerData = {\r\n                \"option_id\": chosenOptionID,\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n            }\r\n        }\r\n        else if (questionType === QuestionTypes.ESSAY) {\r\n            answerData = {\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n\r\n            }\r\n        }\r\n\r\n        ExamServices.addAnswer(answerData)\r\n            .then(() => {\r\n                // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \r\n                const newQuestionNumber = currentQuestionNumber + 1\r\n                // If we are in the last question, then we should refer to the Done Page\r\n                if (newQuestionNumber === questions.length) {\r\n                    ExamServices.submitExam(exam.id)\r\n                        .then(res => {\r\n                            showSuccessMsg(\"Exam has been submitted successfully\")\r\n                            props.history.push({\r\n                                pathname: '/done',\r\n                                state: { examName: exam.name }\r\n                            })\r\n                        })\r\n                        .catch(err => HandleErrors(err))\r\n                    return\r\n                }\r\n                showSuccessMsg(\"Answer Saved Successfully\")\r\n\r\n                // advance to the next question\r\n                setCurrentQuestionNumber(newQuestionNumber)\r\n\r\n\r\n            }).catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n\r\n    }\r\n\r\n    const clickedPreviousHandler = () => {\r\n        // Go to previous question by decreasing currentQuestionNumber \r\n        setCurrentQuestionNumber(currentQuestionNumber - 1)\r\n    }\r\n\r\n    const getAnswer = (questionIndex, chosenOptionID, chosenAnswer) => {\r\n        setQuestions((prevState) => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[questionIndex - 1] = {\r\n                ...newQuestions[questionIndex - 1],\r\n                studentAnswer: {\r\n                    chosenOptionID,\r\n                    chosenAnswer\r\n                }\r\n            }\r\n            return newQuestions\r\n        })\r\n    }\r\n\r\n    const onTimerFinishHanlder = () => {\r\n        ExamServices.submitExam(exam.id)\r\n            .then(res => {\r\n                showSuccessMsg(\"Exam has been submitted successfully\")\r\n                props.history.push({\r\n                    pathname: '/done',\r\n                    state: { examName: exam.name }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    let My_Questions_Markup = questions?.map((question, index) => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n            return (\r\n                <Essay\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n\r\n                    key={props.questionIndex}\r\n                />\r\n            );\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            return (\r\n                <MCQ\r\n                    questionIndex={index + 1}\r\n\r\n                    currentQuestionNumber={currentQuestionNumber}\r\n                    key={props.questionIndex}\r\n\r\n                    questionText={question.questionText}\r\n                    answers={question.answers}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    studentAnswerFunction={getAnswer}\r\n\r\n                    savedStudentAnswer={question?.studentAnswer}\r\n                />\r\n            )\r\n        }\r\n        return null;\r\n    })\r\n\r\n    const videoRecorderIsShown = examOptions?.faceDetection || examOptions?.faceRecognition\r\n    const webcamRef = useRef(null)\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                {videoRecorderIsShown ?\r\n                    <Webcam\r\n                        audio={false}\r\n                        height={360}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                {examDurationInMins ?\r\n                    <ExamCounter onFinish={onTimerFinishHanlder} numberOfMins={examDurationInMins} />\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={exam.name}>\r\n                        {My_Questions_Markup?.[currentQuestionNumber]}\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n            <CheaterPopup\r\n                isVisible={isCheaterPopVisible}\r\n                setVisibility={(value) => {\r\n                    setIsCheaterPopVisible(value)\r\n                    setCheatReasons([])\r\n                    setCheaterImage(null)\r\n                }}\r\n                cheatReasons={cheatReasons}\r\n                cheaterImage={cheaterImage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TakeExam);\r\n","import ExamInstructions from \"../Views/Student/ExamInstructions/ExamInstructions\"\r\nimport MyResults from \"../Views/Student/MyResults\"\r\nimport ResultDetails from \"../Views/Student/ResultDetails\"\r\nimport ShowExams from \"../Views/Student/ShowExams/ShowExams\"\r\nimport TakeExam from \"../Views/Student/TakeExam/TakeExam\"\r\nimport WellDone from \"../Views/Student/WellDone/WellDone\"\r\n\r\nconst StudentRoutes =\r\n    [\r\n        { path: '/exams', component: ShowExams, exact: true },\r\n        { path: \"/exams/:examId\", component: ExamInstructions, exact: true },\r\n        { path: \"/exams/:examId/start\", component: TakeExam, exact: true },\r\n        { path: \"/done\", component: WellDone, exact: true },\r\n        { path: \"/my-results\", component: MyResults, exact: true },\r\n        { path: \"/my-results/:examId\", component: ResultDetails, exact: true }\r\n    ]\r\nexport default StudentRoutes\r\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport Typography from '@mui/material/Typography';\nconst WellDone = (props) => {\n    const examName = props.location.state.examName\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className='col-md-8 col-12'>\n\n                <CardComponent title={examName}>\n                    <div className=\"m-5 text-start text-center\">\n\n\n                        <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                            <CardContent>\n\n                                {/* Well Done Label */}\n                                <Typography className='font-weight-bold ' variant=\"h3\" component=\"div\">\n\n                                    Well Done\n                                </Typography>\n\n\n                                {/* Hope Text */}\n                                <Typography className='m-3 text-success' variant='h4'>\n                                    We hope you done well in this exam and best wishes for next....!\n                                </Typography>\n\n                            </CardContent>\n\n\n                            <button\n                                className='btn m-2 p-auto btn-primary text-white'\n                                onClick={() => {props.history.push('/')}}\n                            >\n                                Homepage\n\n\n                            </button>\n\n\n\n                        </Card>\n                    </div>\n                </CardComponent>\n            </div>\n        </div >\n    )\n}\nexport default WellDone;\n","import React, { useEffect } from 'react'\nimport useListShuffler from '../../../hooks/useListShuffler'\nimport useSwitchBrowserDetector from '../../../hooks/useSwitchBrowserDetector'\n\nconst Classes = () => {\n    const shuffler = useListShuffler()\n    useEffect(() => {\n        let list = [1, 2, 3, 4, 5, 6, 7]\n        let rr = shuffler(list)\n        console.log(rr)\n    }, [])\n\n    const isBrowserHidden = useSwitchBrowserDetector()\n    useEffect(() => {\n      isBrowserHidden && console.log(\"CHEATER!!!!\")\n    \n    }, [isBrowserHidden])\n    \n    return (\n        <div>\n            <h1>Classes</h1>\n        </div>\n    )\n}\n\nexport default Classes\n","import DomainUrl from \"../Domain\";\n\nexport const INSTRUCTOR_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/instructors/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/instructors/me`,\n        method:'GET'\n    }\n};\n\n","import { INSTRUCTOR_ENDPOINTS } from \"../Endpoints/InstructorEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class InstructorServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: INSTRUCTOR_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.getMyProfile.url, {\n            method: INSTRUCTOR_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './InstructorProfile.css'\nimport { InstructorServices } from '../../../apis/Services/InstructorService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst InstructorProfile = () => {\n\n    const [instructorData, setInstructorData] = useState(null)\n    useEffect(() => {\n        InstructorServices.getMyProfile()\n            .then(res => {\n                setInstructorData(res.instructor)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (instructorData &&\n        <div className=\"Profile_I mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={imageResolver(instructorData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row align-items-center mt-2\">\n                        <h2>{`${instructorData?.user?.firstName} ${instructorData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary\">{instructorData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.phone}</h4>\n                        </div>\n\n                        {/* DEGREE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Degree: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.degree}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.gender}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InstructorProfile\n","import Classes from \"../Views/Instructor/Classes/Classes\"\r\nimport InstructorProfile from \"../Views/Profiles/Instructor-Profile/InstructorProfile\"\r\nimport StudentProfile from \"../Views/Profiles/Student-Profile/StudentProfile\"\r\n\r\nconst UserRoutes =\r\n    [\r\n        { path: '/classes', component: Classes, exact: true },\r\n        { path: \"/profile/student\", component: StudentProfile, exact: true },\r\n        { path: \"/profile/instructor\", component: InstructorProfile, exact: true }\r\n    ]\r\nexport default UserRoutes\r\n","import React, { useEffect, useState } from 'react'\nimport './StudentProfile.css'\nimport { StudentServices } from '../../../apis/Services/StudentService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst StudentProfile = () => {\n\n    const [studentData, setStudentData] = useState(null)\n    useEffect(() => {\n        StudentServices.getMyProfile()\n            .then(res => {\n                setStudentData(res.student)\n            })\n            .catch(err => HandleErrors(err))\n\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (studentData &&\n        <div className=\"Profile_S mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img src={imageResolver(studentData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row mt-2\">\n                        <h2>{`${studentData?.user?.firstName} ${studentData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary text-capitalize\">{studentData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.phone}</h4>\n                        </div>\n\n                        {/* CODE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Code: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.studentCode}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.gender}</h4>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentProfile\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport AuthRoutes from './AuthRoutes'\r\nimport InstructorRoutes from './InstructorRoutes'\r\nimport MainRoutes from './MainRoutes'\r\nimport StudentRoutes from './StudentRoutes'\r\nimport UserRoutes from './UserRoutes'\r\n\r\nconst Routes = () => {\r\n    const userType = useSelector(state=>state.auth.userType) || localStorage.getItem('userType')\r\n    console.log(userType)\r\n    return (\r\n        <Switch>\r\n            {MainRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {AuthRoutes.map((props, index) => <Route key={index}{...props} />)}\r\n\r\n            {/* FOR ANY USER */}\r\n            {userType && UserRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR INSTRUCTOR */}\r\n            {userType === 'instructor' && InstructorRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR STUDENT */}\r\n            {userType === 'student' && StudentRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            <Redirect to={'/login'} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions/AppActions';\nimport { Button } from '@mui/material';\n\nconst Alert = () => {\n    const alertObject = useSelector(state => state.app.alertObject)\n    const dispatch = useDispatch()\n    const closeHandler = () => {\n        dispatch(hideAlert())\n    }\n    const confirmHandler = () => {\n        alertObject?.alertFunction()\n    }\n\n    return (\n        <Dialog\n            open={Boolean(alertObject?.header)}\n            onClose={closeHandler}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {alertObject?.header}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {alertObject?.details}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} autoFocus>Cancel</Button>\n                <Button color='error' onClick={confirmHandler}>\n                    Yes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Alert","import { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Header from './Components/Header/Header';\r\nimport { setUserType, signin } from \"./redux/actions/AuthActions\";\r\nimport Toast from './Components/Toast'\r\nimport Routes from \"./routes\";\r\nimport Alert from \"./Components/Dialogs/Alert\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const _bootstrapFunction = useCallback(() => {\r\n    let isAuth = localStorage.getItem('token');\r\n    let userType = localStorage.getItem('userType');\r\n\r\n    if (!isAuth) return\r\n    if (!userType) return\r\n    \r\n    // TODO: Check token with an endpoint\r\n    dispatch(signin(isAuth))\r\n    dispatch(setUserType(userType))\r\n  }, [dispatch])\r\n\r\n  // Bootstrap function\r\n  useEffect(() => {\r\n    _bootstrapFunction();\r\n  }, [_bootstrapFunction])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Routes />\r\n      </div>\r\n\r\n      <Toast />\r\n      <Alert />\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2F4F4F',\n        },\n        secondary: {\n            main: '#50303A',\n        },\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './Theme/MaterialUiTheme';\n\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryText\":\"ExamCounter_primaryText__1cTjU\"};"],"sourceRoot":""}