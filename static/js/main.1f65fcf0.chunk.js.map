{"version":3,"sources":["Views/Instructor/Exams/ExamView/ExamView.module.css","assets/images/logo.png","Components/Footer/Footer.js","redux/actions/AuthActions.js","Components/Header/Header.js","redux/actionTypes.js","redux/actions/AppActions.js","Components/Toast/SuccessToast.js","Components/Toast/ErrorToast.js","Components/Toast/index.js","apis/Domain.js","apis/axios-instance.js","redux/reducers/AppReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ResetReducer.js","redux/reducers/ExamReducer.js","redux/store.js","hooks/handleErrors.js","hooks/showSuccessMsg.js","Views/Registration/ForgotPassword/forgotPassword.jsx","apis/Endpoints/AuthEndpoints.js","apis/Network.js","apis/Services/AuthService.js","Components/CardComponent/CardComponent.js","Views/Registration/Login/Login.jsx","Views/Registration/Register/RegisterInquiry.jsx","apis/Services/UploadService.js","Views/Registration/Register/RegisterInstructor/RegisterInstructor.jsx","Views/Registration/Register/RegisterStudent/RegisterStudent.jsx","Views/Registration/ResetPassword/ResetPassword.jsx","hooks/useWindowWidth.js","Views/VerifyEmail/VerifyEmail.jsx","routes/AuthRoutes.js","apis/Services/ExamService.js","Views/Instructor/Exams/AddExam/AddExam.js","Components/QuestionComponents/AddationMethodsMenu.js","constants/Colors.js","constants/GlobalStyle.js","Components/QuestionComponents/BorderdQuestionController.js","redux/actions/ExamAction.js","constants/QuestionTypes.js","Components/QuestionComponents/BorderdGroupQuestion.js","apis/Services/QuestionService.js","Views/Instructor/Exams/AddExamQuestions/AddExamQuestions.js","Components/NoContentComponent/NoContentComponent.js","Views/Instructor/Exams/Exams.js","Views/Instructor/Questions/Questions.js","Views/Instructor/Exams/SetExamOptions/SetExamOptions.js","Views/Instructor/Questions/QuestionTypes/MCQ.js","Views/Instructor/Questions/QuestionTypes/Essay.js","hooks/useRandomValue.js","Views/Instructor/Questions/QuestionTypes/Formula.js","Views/Instructor/Questions/AddQuestionScreen.js","Components/AnsweredQuestion/McqAnswer.js","Components/AnsweredQuestion/EssayAnswer.js","Components/AnsweredQuestion/ShortAnswer.js","Components/AnsweredQuestion/FormulaAnswer.js","Components/AnsweredQuestion/GroupAnswer.js","Views/Instructor/Questions/QuestionViewScreen.js","apis/Services/MarkExamService.js","Views/Instructor/Exams/ExamView/ExamOverview.js","hooks/useImageResolver.js","Views/Instructor/Exams/ExamView/StudentsList.js","constants/CheatTypes.js","apis/Services/CheatService.js","constants/CheatActions.js","assets/images/mofty.jpg","assets/images/mofty2.jpg","Views/Instructor/Exams/ExamView/ExamReport.jsx","Components/Loader/Loader.js","Views/Instructor/Exams/ExamView/Statistics.js","Views/Instructor/Exams/ExamView/PlagiarismCheck.js","Views/Instructor/Exams/ExamView/index.jsx","Views/Instructor/Exams/ExamView/StudentSolvedExam.js","routes/InstructorRoutes.js","assets/images/study.jpg","Views/Home/Home.jsx","routes/MainRoutes.js","Views/Student/TakePhoto/TakePhoto.jsx","Views/Student/ExamInstructions/ExamInstructions.jsx","Views/Student/MyResults/index.js","apis/Endpoints/StudentEndpoints.js","apis/Services/StudentService.js","Views/Student/ResultDetails/index.js","Views/Student/ShowExams/ShowExams.jsx","Views/Student/Questions/MCQ/MCQ.jsx","Views/Student/Questions/Essay/Essay.jsx","hooks/useListShuffler.js","hooks/useSwitchBrowserDetector.js","assets/images/cheat-inspector.png","Components/CheaterPopup/CheaterPopup.js","Components/ExamCounter/ExamCounter.js","Views/Student/Questions/Formula/Formula.js","Views/Student/Questions/Group/Group.js","Views/Student/TakeExam/TakeExam.jsx","routes/StudentRoutes.js","Views/Student/WellDone/WellDone.jsx","apis/Endpoints/InstructorEndpoints.js","apis/Services/InstructorService.js","Views/Profiles/Instructor-Profile/InstructorProfile.js","routes/UserRoutes.js","Views/Profiles/Student-Profile/StudentProfile.js","routes/index.js","Components/Dialogs/Alert.js","App.js","reportWebVitals.js","Theme/MaterialUiTheme.js","index.js","Components/ExamCounter/ExamCounter.module.css"],"names":["module","exports","iconStyle","fontSize","color","margin","cursor","isMobile","window","innerWidth","Footer","style","marginTop","className","height","src","Logo","alt","FacebookOutlined","InstagramOutlined","PhoneOutlined","Date","getFullYear","signin","setUserToken","type","payload","setUserType","Header","isAuth","useSelector","state","auth","userToken","userType","history","useHistory","dispatch","useDispatch","isInstructor","to","id","activeclassname","exact","onClick","localStorage","clear","push","LogoutOutlined","UserOutlined","actionTypes","showError","msg","showSuccess","showAlert","alertObject","hideAlert","Alert","React","forwardRef","props","ref","elevation","variant","SuccessToast","successMsg","app","useEffect","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","open","severity","ErrorToast","errorMsg","autoHideDuration","index","DomainUrl","_axios","axios","create","baseURL","headers","interceptors","request","use","config","a","token","getItem","undefined","err","Promise","reject","response","data","initStates","initialState","email","ResetReducer","action","examQuestions","examGroups","ExamReducer","addedGroupQuestions","length","newGroup","newGroupQuestions","forEach","group","groupId","newExamQuestions","filter","item","newExamGroupQuestions","rootReducer","combineReducers","rst","exam","question","QuestionReducer","middleware","applyMiddleware","thunk","store","createStore","HandleErrors","showErrorToast","message","String","includes","showSuccessMsg","connect","email_address","saveEmail","useState","setEmail","onChange","e","target","value","placeholder","width","event","preventDefault","setItem","post","then","catch","AUTHENDPOINTS","login","url","method","verifyEmail","changePassword","logout","ResetPassword","Network","this","jwt","init","addAuth","fetch","mode","getHeaders","promise","ok","status","resolve","json","handleErrorsBasedOnStatus","originalHeaders","Accept","Authorization","error","AuthServices","values","body","JSON","stringify","CardComponent","children","title","withRouter","password","setPassword","TextField","fullWidth","label","res","user","pathname","Registerinquiry","RegisterAsStudentHandler","RegisterAsInstructorHandler","MaxWidth","Component","UploadServices","file","formDate","FormData","append","Input","styled","display","RegisterInstructor","firstName","lastName","gender","phone","department","degree","school","confirmPassword","firstNameFormHandler","setState","lastNameFormHandler","genderHandler","emailFormHandler","phoneFormHandler","departmentFormHandler","degreeFormHandler","schoolFormHandler","passwordFormHandler","confirmPasswordFormHandler","isValidEmail","Boolean","toLowerCase","match","isValidName","name","isValidPhone","number","isPasswordMatch","validateData","selectedFile","registerHandler","validationMessage","uploadImage","image","userInfo","handleUploadClick","files","reader","FileReader","readAsDataURL","onloadend","photoName","personalImageUrl","result","bind","checked","htmlFor","Typography","accept","IconButton","component","loading","RegisterStudent","studentcode","studentCodeFormHandler","setConfirmPassword","params","put","removeItem","getWindowWidth","AuthRoutes","path","Login","forgotPassword","RegisterInquiry","codeValue","location","code","screenWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","onComplete","autoFocus","fieldHeight","fieldWidth","fields","ExamServices","examMainInfo","examId","options","questions","get","isMarked","answerData","delete","DURATION_REGEX","AddExam","createExamSchema","yup","shape","required","numberOfTrials","min","description","totalMark","duration","matches","test","Number","split","examSubject","startAt","endAt","when","schema","moment","isBefore","useLocation","isEditMode","examOldData","initialValues","setMinutes","format","add","validationSchema","onSubmit","actions","editExamMainInfo","createNewExam","handleSubmit","handleChange","onBlur","handleBlur","helperText","touched","errors","MobileDateTimePicker","minutesStep","inputFormat","onClose","setFieldTouched","date","selectedDate","setFieldValue","renderInput","AddationMethodsMenu","methods","anchorEl","setAnchorEl","handleClose","Menu","PaperProps","sx","overflow","mt","ml","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","map","MenuItem","function","displayName","Divider","Colors","ClickableView","div","Wrapper","Text","span","BorderdQuestionController","questionTitle","deleteFunction","hasNoDelete","questionType","flexDirection","alignItems","backgroundColor","left","padding","textTransform","saveAQuestion","questionData","addNewGroup","QuestionTypes","ESSAY","MCQ","FORMULA","GROUP","BorderdGroupQuestion","isCreationMode","getCreationData","cancelCreationFunction","questionsMarkup","questionnType","headerTextStyle","cancelHandler","CreationFormMarkup","groupName","QuestionServices","AddExamQuestions","groupQuestionAnchorEl","setGroupQuestionAnchorEl","selctedGroupId","setselctedGroupId","groupMethods","fromExamCreation","isFromGroup","normalQuestionIds","groupQuestionsIdList","groupQuestions","groupQuestionsIds","flat","allQuestionsIds","canSelectQuestionsForExam","allSelectedQuestionIds","setShowGroupCreationForm","document","getElementById","scrollIntoView","behavior","block","examOldQuestions","setExamOldQuestions","setExamId","matchPath","getExamQuestions","setQuestions","savedQuestions","oldQuestionsOtherThanGroupQuestions","getQuestions","removeQuestionFromListHandler","removeSavedQuestionFromExam","prevState","setGroupQuestions","savedQroupQuestions","oldGroupQuestionsOnly","showGroupCreationForm","currentTarget","PlusCircleOutlined","questionText","selectedgroupId","showGroupQuestionMenu","subQuestion","scrollTo","createGroupQuestion","submittedQuestions","question_id","qroupQuestionsId","editQuestionsOfExam","addQuestionsToExam","NoContentComponent","text","StyledTableCell","TableCell","theme","tableCellClasses","head","palette","common","white","fontWeight","StyledTableRow","TableRow","hover","border","Exams","exams","setExams","getExamsHandler","getMyExams","selectedExam","setSelectedExam","isExamNotCompleted","row","isSelectedExamPublished","selectedExamObject","find","isPublished","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","scope","Chip","size","icon","stopPropagation","MenuListProps","isSelctedExamIsNotCompleted","isWantToBePublish","examName","makeExamPublished","makeExamUnPublished","finally","makePublishHandler","header","details","alertFunction","deleteExam","newExams","Questions","isSelectionMode","selectedQuestion","setSelectedQuestion","selectedQuestions","every","isSelected","selectedGroupQuestionId","filterValue","setFilterValue","filterMenuEl","setFilterMenuEl","searchValue","setsearchValue","isAllowedToSearch","setIsAllowedToSearch","getMyQuestions","myQuestions","isMyQuestions","tag","search","clearSearch","FilterMarkup","enableReinitialize","select","Object","keys","FormControlLabel","control","Switch","isAlreadySelected","alreadySelectedStyle","getQuestionDetails","returnedQuestion","groupReturnedQuestions","editGroupQuestion","goBack","normalQuestions","questionId","Checkbox","disabled","newQuestions","onCheckHandler","instructor","instructorName","created_at","deleteQuestion","SetExamOptions","oldExamConfig","faceRecognition","faceDetection","questionsRandomOrder","plagiarismCheck","disableSwitchBrowser","gradingMethod","submittedValues","editExamOptions","setExamOptions","Label","DangerLabel","SuccessLabel","initValues","getQuestionCreationRequest","MCQSCHEMA","correctAnswer","choice1","choice2","choice3","mcqChoices","isCorrect","mcqCorrectAnswer","editRequest","editQuestion","answers","creationRequest","createMcqQuestion","multiline","rows","Essay","EssaySchema","createEssayQuestion","getRandomValue","first","second","max","Math","floor","random","useRandomValue","VAR_REGEX","BRACKETS_REGEX","Formula","formula","numberOfQuestions","questionFormValue","setQuestionFormValue","vars","setVars","uniqueTokensList","setUniqueTokensList","setQuestionText","tokenList","matchAll","editedToken","replace","uniqueTokens","Array","from","Set","generateVars","oldVarList","setOldVarList","editedList","varObject","element","setGeneratedQuestions","initVarList","variables","generatedQuestions","formula_questions","numberOfGeneratedQuestion","finalQuestionValue","variablesAttr","generatedAttempt","replaceAll","var","finalValue","mexp","eval","variable","newVars","onChangeMin","onChangeMax","textDecorationLine","generatedFormulas","questionTextAfterGeneration","editFormulaQuestion","formulas","createFormulaQuestion","AddQuestionScreen","oldQuestion","oldQuestionDetails","setOldQuestionDetails","questionTypes","setQuestionTypes","typesObject","typeList","key","getQuestionTypes","setQuestionType","questionTypeSelectionMenuMarkup","createQuestionHandler","addedQuestion","isFromExamCreation","marginInlineEnd","McqAnswer","choices","studentAnswer","markAsRight","markAsWrong","questionMark","studentMark","formatedAnswer","answer","displayText","option","isCorrectStudentAnswer","Card","CardHeader","toFixed","CardContent","FormControl","RadioGroup","defaultValue","choice","Radio","bottom","EssayAnswer","textDecoration","ShortAnswer","FormulaAnswer","questionHeader","teacherMode","formulaText","GroupAnswer","specificQuestionMark","option_id","QuestionViewScreen","useParams","setQuestion","MarkExamServices","studentId","student_id","AntiCheatingTimeline","examConfig","isRandom","isDisableSwitch","isplagiarism","isFaceDetection","isFaceVerify","Timeline","TimelineItem","TimelineOppositeContent","m","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","py","px","ExamOverview","examConfigs","useImageResolver","imageName","StudentsList","imageResolver","studentsAnswers","setStudentAnswers","getStudentExams","getAllStudentsAnswers","solvedExams","Button","markAllAutomatic","List","ListItem","ListItemButton","ListItemAvatar","Avatar","ListItemText","primaryTypographyProps","primary","secondary","mark","attempt","CheatTypes","CheatServices","ActionData","CheatActions","ExamReport","cheaters","setCheaters","decrementDegree","setDecrementDegree","getCheaters","cheatersResults","cheatersObjects","editedCheaterList","property","finalCheaterList","specificStudentCheatMethods","el","numberOfSwitchBrowserMethods","oneOfSwitchBrowserCases","typeCounter","actionHandler","cheaterDetails","performStudentDecrement","cheater_details","profileImage","studentName","Loader","Statistics","isLoaded","setIsLoaded","fullSizeStyle","onLoad","PlagiarismCheck","getTheMostSimilar","students","maxStudent","similarity","plagResult","setPlagResult","getPlagiarismResults","similarStudents","console","log","goToStudentExam","cheatedQuestionId","newTapName","styles","preventHoverEffect","firstStudentId","secondStuentId","ExamView","selectedTab","setSelectedTab","setExamConfigs","getExamConfig","configuration","URLSearchParams","Box","Tabs","newValue","textColor","indicatorColor","Tab","StudentCard","isVerified","numberOfFaces","markAutoFun","isCheater","objectFit","borderRadius","cheaterOverlay","InstructorRoutes","studentExamResult","setStudentExamResult","mostSimilarQuestionIdFromPlagarism","questionCheatedRef","markAsRightHandler","manualMark","getStudentAnswers","markAsWrongHandler","getSpecificStudentAnswers","markSpecificStudentAutomatic","solution","pivot","createTheme","ColorButton","Home","minHeight","MainRoutes","TakePhoto","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","captured","clicked","audio","screenshotFormat","isLoading","setIsLoading","isPhotoTaken","setIsPhotoTaken","noOfFaces","setNoOfFaces","photoVerified","setPhotoVerified","startDate","setstartDate","getExamInfo","photoTakenHandler","img","faceDetectionData","faceVerificationData","applyFaceDetection","verified","applyFaceVerification","mustVerifyFace","hasStarted","CardActions","trigger","modal","lockScroll","close","startExamData","startExam","MyResults","getAllPublishedExams","Grid","justifyContent","direction","isSubmitted","STUDENT_ENDPOINTS","register","getMyProfile","StudentServices","ResultDetails","getSpecificExamResults","totalQuestionMark","getRemainingEndTime","examEndDate","diff","remainingMins","hours","mins","goToInstructionsHandler","fontStyle","isInGroupQuestion","sentAnswerChanges","chosenOptionID","setChosenOptionID","chosenAnswer","setChosenAnswer","savedStudentAnswer","onChangeHandler","parseInt","isCheckedCondition","ansIndex","questionIndex","clickedPrevious","previousButtonDisabled","clickedNext","studentAnswerFunction","changeNextNameIntoFinish","essayAnswer","setEssayAnswer","nextAnswer","shuffler","list","sort","useListShuffler","useSwitchBrowserDetector","isBrowserHidden","setIsBrowserHidden","CheaterPopup","isVisible","setVisibility","cheatReasons","cheaterImage","Dialog","DialogTitle","DialogContent","InspectorCheaterImage","DialogContentText","join","DialogActions","_withLeadingZero","ExamCounter","numberOfSecs","onFinish","remainingSeconds","setremainingSeconds","numberOfSeconds","timer","setInterval","clearInterval","primaryText","formulaAnswer","setFormulaAnswer","Group","groupAnswers","setGroupAnswers","groupAnswersChangesHandler","currentQuestionNumber","setCurrentQuestionNumber","setExamInfo","examOptions","endExamTime","setEndExamTime","responseQuestions","getStudentExamAnswers","endTime","formatedAnswers","formatedQuestions","newQuestionsForThisGroupQuestion","formatedQuestion","thisQuestionAnswer","randomQuestions","examDurationInSecs","examDurationInMins","ceil","totalCountedMins","setTotalCountedMins","setLastRandomMin","RandomMins","callback","activateJobWithRandomTriggerTimer","reportFaceDetectionCheater","reportFaceRecognationCheater","clearTimeout","setCheatReasons","setCheaterImage","isCheaterPopVisible","setIsCheaterPopVisible","isBrowserSwitched","sentSwitchBrowserCheatAttempt","capturePhotoFromWebcam","sentFaceDetectionCheatAttempt","faceDetectionResult","sentFaceRecognationCheatAttempt","_successSentAnswerResonse","newQuestionNumber","submitExam","_saveAnswer","currentQuestion","isArray","clickedNextHandler","questionPromises","addAnswer","all","clickedPreviousHandler","getAnswer","My_Questions_Markup","videoRecorderIsShown","StudentRoutes","ShowExams","ExamInstructions","TakeExam","INSTRUCTOR_ENDPOINTS","InstructorServices","InstructorProfile","instructorData","setInstructorData","UserRoutes","studentData","setStudentData","student","studentCode","Routes","closeHandler","App","_bootstrapFunction","Toast","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","main","ReactDOM","render","ThemeProvider","LocalizationProvider","dateAdapter","DateAdapter"],"mappings":"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","file":"static/js/main.1f65fcf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cheaterOverlay\":\"ExamView_cheaterOverlay__1o97o\",\"preventHoverEffect\":\"ExamView_preventHoverEffect__xNIpM\"};","export default __webpack_public_path__ + \"static/media/logo.18795106.png\";","import React from 'react'\nimport './Footer.css'\nimport Logo from '../../assets/images/logo.png'\nimport { InstagramOutlined, FacebookOutlined, PhoneOutlined } from '@ant-design/icons';\n\nconst iconStyle = {\n    fontSize: 36,\n    color: '#313131',\n    margin: '0px 12px',\n    cursor: 'pointer'\n}\n\nconst isMobile = window.innerWidth < 992;\nconst Footer = () => {\n    return (\n        <footer style={{marginTop:200}} className=\"Footer container\">\n            <div className=\"row justify-content-lg-center pl-3 p-lg-0\">\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\n                    <h5 className=\"text-grey my-3\">Test your student smartly.</h5>\n\n                    {!isMobile &&\n                        <div className=\"d-flex flex-row justify-content-center\">\n                            <FacebookOutlined style={iconStyle} />\n                            <InstagramOutlined style={iconStyle} />\n                            <PhoneOutlined style={iconStyle} />\n                        </div>\n                    }\n\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Menu</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">Home</li>\n                        <li className=\"mx-2\">Tours</li>\n                        <li className=\"mx-2\">Category</li>\n                        <li className=\"mx-2\">About Us</li>\n                    </ul>\n                </div>\n                <div className=\"col-lg-4 col-12 text-lg-center\">\n                    <h4>Support</h4>\n                    <ul className=\"d-flex d-lg-block flex-row\">\n                        <li className=\"mx-2\">FAQ</li>\n                        <li className=\"mx-2\">Terms & Conditions</li>\n                        <li className=\"mx-2\">Privacy Policy</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {isMobile &&\n                    <div className=\"d-flex flex-row justify-content-center\">\n                        <FacebookOutlined style={iconStyle} />\n                        <InstagramOutlined style={iconStyle} />\n                        <PhoneOutlined style={iconStyle} />\n                    </div>\n                }\n                <small className=\"text-grey\">{new Date().getFullYear()} (c) — SmartExam. All Rights Reserved</small>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","const SIGN_IN = 'SIGN_IN'\r\nconst SIGN_OUT = 'SIGN_OUT'\r\nconst SET_USER_TYPE = \"SET_USER_TYPE\"\r\nconst signin = (setUserToken) => {\r\n   return {\r\n      type: SIGN_IN,\r\n      payload: setUserToken\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return {\r\n      type: SIGN_OUT,\r\n      payload: null\r\n   }\r\n}\r\n\r\nconst setUserType = (type)=>{\r\n   return {\r\n      type: SET_USER_TYPE,\r\n      payload: type\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport { signin, logout, setUserType }","import React from 'react'\r\nimport './Header.css'\r\nimport Logo from '../../assets/images/logo.png'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../redux/actions/AuthActions';\r\n\r\n\r\nconst Header = () => {\r\n    const isAuth = useSelector(state => state.auth.userToken)\r\n    const userType = useSelector(state => state.auth.userType)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch(null)\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        localStorage.clear()\r\n        history.push('/login')\r\n    }\r\n\r\n    const isInstructor = userType === 'instructor'\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img height={66} src={Logo} alt=\"smart exam logo\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav mx-auto mainNav\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Home</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to=\"/exams\" exact>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>Exams</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link p-0\" activeclassname={'active'} to={isInstructor ? \"/questions\" : \"/my-results\"}>\r\n                                    <li className=\"nav-item px-5 mx-2\">\r\n                                        <span>{isInstructor ? 'Questions' : 'My Results'}</span>\r\n                                    </li>\r\n                                </NavLink>\r\n                            </>\r\n                        }\r\n\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav d-flex justify-content-lg-center justify-content-between flex-row\">\r\n                        {!isAuth ?\r\n                            <>\r\n                                <li className=\"nav-item mx-2 d-flex align-items-center\">\r\n                                    <Link className=\"loginText\" to={'/login'}>Login</Link>\r\n                                </li>\r\n\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link className=\"btn btn-primary\" to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {/* Logout */}\r\n                                <li onClick={logoutHandler} className=\"nav-item mx-2\">\r\n                                    <LogoutOutlined className=\"primaryColoredIcon\" />\r\n                                </li>\r\n\r\n                                {/* Profile */}\r\n                                <li className=\"nav-item mx-2\">\r\n                                    <Link to={`/profile/${userType}`}>\r\n                                        <UserOutlined className=\"primaryColoredIcon\" />\r\n                                    </Link>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const actionTypes = {\n\n    ADD_EMAIL: \"ADD_EMAIL\",\n\n    SAVE_ANSWER: \"SAVE_ANSWER\",\n\n    SHOW_ERROR: \"SHOW_ERROR\",\n\n    SHOW_SUCCESS: \"SHOW_SUCCESS\",\n\n    SHOW_ALERT: \"SHOW_ALERT\",\n\n    HIDE_ALERT: \"HIDE_ALERT\",\n\n    ADD_QUESTION: \"ADD_QUESTION\",\n\n    ADD_GROUP: \"ADD_GROUP\",\n\n    ADD_GROUP_QUESTION: \"ADD_GROUP_QUESTION\",\n\n    REMOVE_QUESTION: \"REMOVE_QUESTION\",\n\n    REMOVE_ALL: \"REMOVE_ALL\",\n\n\n}\n\n","import { actionTypes } from \"../actionTypes\"\nconst showError = (msg) => {\n    return {\n        type: actionTypes.SHOW_ERROR,\n        payload: msg\n    }\n}\n\nconst showSuccess = (msg) => {\n    return {\n        type: actionTypes.SHOW_SUCCESS,\n        payload: msg\n    }\n}\n/**\n * \n * @param {{header:string, details:string, alertFunction:Function}} alertObject \n * @returns \n */\nconst showAlert = (alertObject) => {\n    return {\n        type: actionTypes.SHOW_ALERT,\n        payload: alertObject\n    }\n}\n\nconst hideAlert = () => {\n    return {\n        type: actionTypes.HIDE_ALERT,\n    }\n}\n\n\nexport { showError, showSuccess, showAlert, hideAlert }","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showSuccess } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst SuccessToast = () => {\n    const successMsg = useSelector(state => state.app.successMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        successMsg && setTimeout(() => {\n            dispatch(showSuccess(null))\n        }, 3000);\n\n    }, [successMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={successMsg}\n            key={'success1'}\n        >\n            <Alert severity={\"success\"}>{successMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default SuccessToast\n","import { Snackbar } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport MuiAlert from '@mui/material/Alert';\nimport { showError } from '../../redux/actions/AppActions';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst ErrorToast = () => {\n    const errorMsg = useSelector(state => state.app.errorMsg)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        errorMsg && setTimeout(() => {\n            dispatch(showError(null))\n        }, 3000);\n\n    }, [errorMsg, dispatch])\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={errorMsg}\n            key={'error1'}\n            autoHideDuration={3000}\n        >\n            <Alert severity={\"error\"}>{errorMsg}</Alert>\n        </Snackbar>\n    )\n}\n\nexport default ErrorToast\n","import React from 'react'\nimport SuccessToast from './SuccessToast'\nimport ErrorToast from './ErrorToast'\n\n\nconst index = () => {\n    return (\n        <div>\n            <SuccessToast />\n            <ErrorToast />\n        </div>\n    )\n}\n\nexport default index\n","const DomainUrl = 'https://api.smart-exam.ml/api';\r\nexport default DomainUrl;","import axios from 'axios';\nimport DomainUrl from './Domain';\n\nlet headers = {}\nconst _axios = axios.create({\n    baseURL: DomainUrl,\n    headers\n});\n\n_axios.interceptors.request.use(\n    async (config) => {\n        const token = localStorage.getItem('token');\n        config.headers = {\n            ...config.headers,\n            'Authorization': token ? `Bearer ${token}` : undefined,\n        }\n        return config\n    },\n    (err) => {\n        return Promise.reject(err)\n    }\n)\n\n_axios.interceptors.response.use(\n    response => response.data,\n    err => {\n        return Promise.reject(err?.response?.data);\n    }\n)\n\nexport default _axios;\n","import { actionTypes } from \"../actionTypes\";\n\nconst initStates = {\n    errorMsg: null,\n    successMsg: null,\n    alertObject: null\n}\n\nconst AppReducer = (state = initStates, action) => {\n    switch (action.type) {\n        case actionTypes.SHOW_ERROR:\n            return {\n                ...state,\n                errorMsg: action.payload,\n            };\n        case actionTypes.SHOW_SUCCESS:\n            return {\n                ...state,\n                successMsg: action.payload\n            };\n        case actionTypes.SHOW_ALERT:\n            return {\n                ...state,\n                alertObject: action.payload\n            };\n        case actionTypes.HIDE_ALERT:\n            return {\n                ...state,\n                alertObject: null\n            };\n        default:\n            return state\n    }\n}\n\nexport { AppReducer };","\r\nconst initStates = {\r\n   userToken: null,\r\n   userType: null\r\n}\r\n\r\nconst AuthReducer = (state = initStates, action) => {\r\n   switch (action.type) {\r\n      case 'SIGN_IN':\r\n         return {\r\n            ...state,\r\n            userToken: action.payload,\r\n         };\r\n      case 'SIGN_OUT':\r\n         return {\r\n            ...state,\r\n            userToken: null,\r\n            userType: null\r\n         };\r\n\r\n      case 'SET_USER_TYPE':\r\n         return {\r\n            ...state,\r\n            userType: action.payload,\r\n         };\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport { AuthReducer };","import {actionTypes} from \"../actionTypes\"\n\nconst initialState = {\n    email: 'LOL'\n\n}\nconst ResetReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case actionTypes.ADD_EMAIL:\n            return {\n                ...state,\n                email: action.email\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\nexport default ResetReducer;","import { actionTypes } from \"../actionTypes\";\r\n\r\nconst initStates = {\r\n    examQuestions: [],\r\n    examGroups: []\r\n}\r\n\r\nconst ExamReducer = (state = initStates, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                examQuestions: [...state.examQuestions, ...action.payload],\r\n            };\r\n\r\n        case actionTypes.ADD_GROUP:\r\n            {\r\n                let addedGroupQuestions = action.payload?.length ? [...action.payload] : [action.payload]\r\n                let newGroup = [...state.examGroups, ...addedGroupQuestions]\r\n                return {\r\n                    ...state,\r\n                    examGroups: newGroup,\r\n                };\r\n            }\r\n\r\n        case actionTypes.ADD_GROUP_QUESTION:\r\n            {\r\n                let newGroupQuestions = [...state.examGroups]\r\n                newGroupQuestions.forEach(group => {\r\n                    if (group.id === action.groupId) {\r\n                        group['questions'] = [...group['questions'], ...action.payload]\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    ...state,\r\n                    examGroups: newGroupQuestions,\r\n                };\r\n            }\r\n\r\n        case actionTypes.REMOVE_QUESTION:\r\n            {\r\n                let newExamQuestions = state?.examQuestions\r\n                newExamQuestions = newExamQuestions.filter(item => {\r\n                    return item.id !== action.payload\r\n                })\r\n\r\n                let newExamGroupQuestions = state?.examGroups\r\n                newExamGroupQuestions = newExamGroupQuestions.filter(item => {\r\n                    return item.id !== action.payload\r\n                })\r\n                return {\r\n                    ...state,\r\n                    examQuestions: [...newExamQuestions],\r\n                    examGroups: [...newExamGroupQuestions]\r\n                };\r\n            }\r\n\r\n        case actionTypes.REMOVE_ALL:\r\n            return {\r\n                ...state,\r\n                examQuestions: [],\r\n                examGroups: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default ExamReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { AppReducer } from './reducers/AppReducer';\r\nimport { AuthReducer } from './reducers/AuthReducer';\r\nimport ResetReducer from './reducers/ResetReducer';\r\nimport ExamReducer from './reducers/ExamReducer';\r\nimport QuestionReducer from './reducers/QuestionReducer';\r\n\r\nconst rootReducer = combineReducers(\r\n   {\r\n      auth: AuthReducer,\r\n      app: AppReducer,\r\n      rst: ResetReducer,\r\n      exam: ExamReducer,\r\n      question: QuestionReducer\r\n   }\r\n);\r\nconst middleware = applyMiddleware(thunk)\r\nconst configureStore = () => {\r\n   return createStore(rootReducer, middleware);\r\n}\r\n\r\nexport const store = configureStore();","import { showError } from '../redux/actions/AppActions'\r\nimport { logout } from '../redux/actions/AuthActions'\r\nimport { store } from '../redux/store'\r\n\r\nexport default function HandleErrors(err) {\r\n    //Showing Toast Function\r\n    const showErrorToast = (msg) => {\r\n        store.dispatch(\r\n            showError(msg)\r\n        )\r\n    }\r\n\r\n\r\n    if (err?.message) {\r\n        showErrorToast(err?.message)\r\n    } else if (typeof err === 'string' || err instanceof String) {\r\n        showErrorToast(err)\r\n    } else {\r\n        showErrorToast(\"UNKNOWN_ERROR\")\r\n    }\r\n\r\n    if (err?.message?.includes(\"Unauthenticated\")) {\r\n        store.dispatch(logout())\r\n        localStorage.clear()\r\n    }\r\n}","import { showSuccess } from '../redux/actions/AppActions'\nimport { store } from \"../redux/store\"\n\nexport default function showSuccessMsg(msg) {\n\n    store.dispatch(\n        showSuccess(msg)\n    )\n\n    return null\n}","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport { actionTypes } from '../../../redux/actionTypes';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nconst Forgotpassword = (props) => {\n    const [email, setEmail] = useState(null)\n\n    const sendLinkHandler = (event) => {\n        event.preventDefault()\n        const data = {\n            email: email\n        }\n\n        props.saveEmail(email)\n        localStorage.setItem(\"email\", email)\n        _axios.post(\"/auth/forgotPassword\", data).then((response) => {\n            showSuccessMsg(\"Sent Email Successfully!\")\n        }).catch(err => HandleErrors(err))\n    }\n    return (\n\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Forgot Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n                    <div>\n                        <div className='text-center'>\n                            <label >We'll send you a link via email to reset password</label>\n\n                        </div>\n                        <div className='text-center'>\n                            <label >Please type your email address</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email address\" />\n                    </div>\n                    <br />\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={sendLinkHandler} style={{ width: 200 }}>Send Link</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveEmail: (email) => { return dispatch({ type: actionTypes.ADD_EMAIL, email: email }) }\n\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Forgotpassword);\n\n","import DomainUrl from \"../Domain\";\r\n\r\nexport const AUTHENDPOINTS = {\r\n   login: {\r\n      url: `${DomainUrl}/auth/login`,\r\n      method: 'POST',\r\n   },\r\n   verifyEmail:{\r\n      url:`${DomainUrl}/auth/verifyEmail`,\r\n      method : 'POST'\r\n   },\r\n   changePassword:{\r\n      url:`${DomainUrl}/auth/changePassword`,\r\n      method : 'PUT'\r\n   },\r\n   logout:{\r\n      url:`${DomainUrl}/auth/logout`,\r\n      method : 'POST'\r\n   },\r\n   ResetPassword:{  \r\n      url:`${DomainUrl}/auth/forgotPassword`,\r\n      method:'PUT'\r\n   }\r\n};\r\n\r\n","export class Network {\r\n  constructor() {\r\n    this.jwt = \"\";\r\n  }\r\n\r\n  static async fetch(url, init, addAuth) {\r\n    this.jwt = localStorage.getItem(\"token\");\r\n    const response = await fetch(url, {\r\n      mode: \"cors\",\r\n      ...init,\r\n      headers: Network.getHeaders(init.headers, addAuth),\r\n    });\r\n    let promise;\r\n    if (!response.ok) {\r\n      promise = Network.handleErrorsBasedOnStatus(response);\r\n    } else if (response.status === 204) {\r\n      promise = Promise.resolve({});\r\n    } else {\r\n      promise = response.json();\r\n    }\r\n    return promise;\r\n  }\r\n\r\n  static getHeaders(originalHeaders, addAuth) {\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (addAuth) {\r\n      headers.Authorization = `Bearer ${this.jwt}`;\r\n    }\r\n\r\n    headers = {\r\n      ...headers,\r\n      ...originalHeaders,\r\n    };\r\n\r\n    return headers;\r\n  }\r\n  static handleErrorsBasedOnStatus(response) {\r\n    let promise;\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 422:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 429:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n      case 401:\r\n      case 403:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n        break;\r\n\r\n      default:\r\n        promise = response.json().then((data) => {\r\n          return Promise.reject(data);\r\n        });\r\n    }\r\n    return promise.catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n","import { AUTHENDPOINTS } from \"../Endpoints/AuthEndpoints\";\r\nimport { Network } from \"../Network\";\r\n\r\nexport class AuthServices {\r\n  // sign in\r\n  static login(values) {\r\n    return Network.fetch(AUTHENDPOINTS.login.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.login.method,\r\n    });\r\n  }\r\n  \r\n  // verifying mobile phone by sending  code , phone\r\n  static emailVerifySms(values) {\r\n    return Network.fetch(AUTHENDPOINTS.verifyEmail.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.verifyEmail.method,\r\n    });\r\n  }\r\n\r\n  // change password\r\n  static changePassword(values) {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.changePassword.url,\r\n      {\r\n        body: JSON.stringify(values),\r\n        method: AUTHENDPOINTS.changePassword.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n  \r\n  // logout\r\n  static logout() {\r\n    return Network.fetch(\r\n      AUTHENDPOINTS.logout.url,\r\n      {\r\n        method: AUTHENDPOINTS.logout.method,\r\n      },\r\n      true\r\n    );\r\n  }\r\n\r\n  // reset forgotten  Password\r\n  static resetForgottenPassword(values) {\r\n    return Network.fetch(AUTHENDPOINTS.ResetPassword.url, {\r\n      body: JSON.stringify(values),\r\n      method: AUTHENDPOINTS.ResetPassword.method,\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './CardComponent.css'\r\nconst CardComponent = ({children, title}) => {\r\n    return (\r\n        <div className=\"greenCard\">\r\n            <h2 className=\"text-light text-center mx-auto py-3\">{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AuthServices } from '../../../apis/Services/AuthService';\nimport { setUserType, signin } from '../../../redux/actions/AuthActions';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport HandleErrors from '../../../hooks/handleErrors';\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst Login = (props) => {\n    const [email, setEmail] = useState(null)\n    const [password, setPassword] = useState(null)\n\n    const forgotPasswordHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        props.history.push({\n            pathname: '/forgot-password',\n            state: { email: email }\n        })\n\n        // props.history.push('/forgot-password')\n        // props.history.push('/reset-password')\n\n    }\n\n    const SignUpHandler = () => {\n        props.history.push('/register')\n    }\n\n    const dispatch = useDispatch(null)\n    const LoginHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        AuthServices.login({ email, password })\n            .then(res => {\n                localStorage.setItem('token', res?.token)\n                localStorage.setItem('userType', res?.user?.type)\n                dispatch(signin(res?.token))\n                dispatch(setUserType(res?.user?.type))\n                props.history.push(`/profile/${res?.user?.type}`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Login'}>\n                    <form className=\"m-3 text-start\">\n                        <div className='mt-4'>\n                            <TextField fullWidth id=\"outlined-basic\" onChange={(e) => setEmail(e.target.value)} label=\"Email Address\" variant=\"outlined\" />\n                        </div>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                id=\"outlined-adornment-password\"\n                                type={'password'}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"mx-auto mt-4 text-center\">\n                            <button className=\"btn btn-primary mx-auto\" onClick={LoginHandler}>Login</button>\n                            <div>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={forgotPasswordHandler}>Forgot password?</button>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={SignUpHandler}>Signup</button>\n                            </div>\n                        </div>\n                    </form>\n                </CardComponent>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\n\nclass Registerinquiry extends Component {\n\n    RegisterAsStudentHandler = () => {\n        // this.props.history.push('/signup')\n        this.props.history.push('/register-student')\n\n    }\n    RegisterAsInstructorHandler = () => {\n        \n        this.props.history.push('/register-instructor')\n\n     }\n\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center mt-5\">\n                <div className=\"card border-success mb-3\" style={{ MaxWidth: 18 }}>\n                    <div className=\"card-header\">Sign up</div>\n                    <div className=\"card-body text-success\">\n                        <h5 className=\"card-title text-center\">Register As...?</h5>\n                        <div className=\"form-inline\">\n                            <button type=\"button\" onClick={this.RegisterAsStudentHandler} className=\"btn btn-primary m-3\">Student</button>\n                            <button type=\"button\" onClick={this.RegisterAsInstructorHandler} className=\"btn btn-danger m-3\">Instructor</button>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Registerinquiry);\n","import _axios from \"../axios-instance\";\n\nexport class UploadServices {\n    static uploadImage(file) {\n        const formDate = new FormData()\n        formDate.append('image', file)\n        return _axios.post('/image-upload', formDate, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    }\n}\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterInstructor extends Component {\r\n\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        degree: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    degreeFormHandler = (event) => {\r\n        this.setState({ degree: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.degree)) {\r\n            return \"Invalid Degree\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n        var data;\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"type\": \"instructor\",\r\n                    \"degree\": this.state.degree,\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/instructors/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email, userInfo: data }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.degreeFormHandler} label=\"Degree\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            <div className=\"mx-auto mt-4\" >\r\n                                <button type=\"button\" className=\"btn btn-primary mx-auto\" onClick={this.registerHandler} style={{ width: 200 }}>Submit</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterInstructor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { IconButton, TextField, Typography } from '@mui/material';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\r\nimport _axios from '../../../../apis/axios-instance';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport { styled } from '@mui/material/styles';\r\nimport { UploadServices } from '../../../../apis/Services/UploadService';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nclass RegisterStudent extends Component {\r\n    state = {\r\n        firstName: null,\r\n        lastName: null,\r\n        gender: 'male',\r\n        email: null,\r\n        phone: null,\r\n        department: null,\r\n        studentcode: null,\r\n        school: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    }\r\n\r\n    firstNameFormHandler = (event) => {\r\n        this.setState({ firstName: event.target.value })\r\n    }\r\n    lastNameFormHandler = (event) => {\r\n\r\n        this.setState({ lastName: event.target.value })\r\n    }\r\n    genderHandler = (event) => {\r\n        this.setState({ gender: event.target.value })\r\n    }\r\n    emailFormHandler = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    phoneFormHandler = (event) => {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    departmentFormHandler = (event) => {\r\n        this.setState({ department: event.target.value })\r\n    }\r\n    studentCodeFormHandler = (event) => {\r\n        this.setState({ studentcode: event.target.value })\r\n    }\r\n    schoolFormHandler = (event) => {\r\n        this.setState({ school: event.target.value })\r\n    }\r\n    passwordFormHandler = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    confirmPasswordFormHandler = (event) => {\r\n        this.setState({ confirmPassword: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    isValidEmail = (email) => {\r\n        return Boolean(String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ));\r\n    }\r\n\r\n    isValidName = (name) => {\r\n        if (name === '' | name == null) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    isValidPhone = (number) => {\r\n        var phoneno = /^\\d{11}$/;\r\n        if (number === '' | number == null) {\r\n            return false\r\n        }\r\n        if ((number.match(phoneno))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    isPasswordMatch = (password, confirmPassword) => {\r\n        if (password === '' | password === null) {\r\n            return false\r\n        }\r\n        return (password === confirmPassword)\r\n    }\r\n\r\n\r\n    validateData = () => {\r\n        if (!this.isValidName(this.state.firstName)) {\r\n            return \"Invalid First Name\"\r\n            // return false\r\n        }\r\n        if (!this.isValidName(this.state.lastName)) {\r\n            return \"Invalid Last Name\"\r\n\r\n        }\r\n        if (!this.isValidPhone(this.state.phone)) {\r\n            return \"Invalid Phone Number\"\r\n\r\n        }\r\n        if (!this.isValidEmail(this.state.email)) {\r\n            return \"Invalid Email\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.department)) {\r\n            return \"Invalid Department\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.school)) {\r\n            return \"Invalid School\"\r\n\r\n        }\r\n        if (!this.isValidName(this.state.studentcode)) {\r\n            return \"Invalid Student Code\"\r\n\r\n        }\r\n        if (!this.isPasswordMatch(this.state.password, this.state.confirmPassword)) {\r\n            return \"Password Mismatch\"\r\n        }\r\n        if (!this.state.selectedFile) {\r\n            return \"Image is required\"\r\n        }\r\n        return \"success\"\r\n    }\r\n\r\n    registerHandler = (event) => {\r\n        const validationMessage = this.validateData()\r\n        if (validationMessage !== 'success') {\r\n            HandleErrors(validationMessage)\r\n            return\r\n        }\r\n\r\n        UploadServices.uploadImage(this.state.selectedFile)\r\n            .then(res => {\r\n                var data = {\r\n                    \"firstName\": this.state.firstName,\r\n                    \"lastName\": this.state.lastName,\r\n                    \"description\": \"This is new instructor's description\",\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"gender\": this.state.gender,\r\n                    \"image\": res.image,\r\n                    \"phone\": this.state.phone,\r\n                    \"studentCode\": this.state.studentcode,\r\n                    \"type\": \"student\",\r\n                    \"departments\": [\r\n                        {\r\n                            \"department_id\": 1\r\n                        }\r\n                    ]\r\n                }\r\n                return _axios.post('/students/register', data)\r\n            })\r\n            .then((response) => {\r\n                this.props.history.push({\r\n                    pathname: '/verifyEmail',\r\n                    state: { email: this.state.email }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    handleUploadClick = event => {\r\n        var file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        let url = reader.readAsDataURL(file)\r\n        reader.onloadend = function (e) {\r\n            this.setState({\r\n                photoName: file.name,\r\n                selectedFile: file,\r\n                personalImageUrl: e.target.result\r\n            });\r\n        }.bind(this);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Signup'}>\r\n                        <form className=\"m-3\">\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.firstNameFormHandler} label=\"First Name\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.lastNameFormHandler} label=\"Last Name\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <label >Gender</label>\r\n                                    <div className=\"form-group m-2\">\r\n                                        <div className=\"form-check form-check-inline \">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault1\"\r\n                                                value=\"male\"\r\n                                                checked={this.state.gender === 'male'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\"> Male </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"radio\"\r\n                                                name=\"flexRadioDefault\"\r\n                                                id=\"flexRadioDefault2\"\r\n                                                value=\"female\"\r\n                                                checked={this.state.gender === 'female'}\r\n                                                onChange={this.genderHandler}\r\n                                            />\r\n                                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\"> Female</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.phoneFormHandler} label=\"Phone Number\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.emailFormHandler} label=\"Email\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group  col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.departmentFormHandler} label=\"Department\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.schoolFormHandler} label=\"School / University\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField fullWidth id=\"outlined-basic\" onChange={this.studentCodeFormHandler} label=\"Student Code\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row m-1 my-4\">\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.passwordFormHandler} label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"form-group col\">\r\n                                    <TextField type={'password'} fullWidth id=\"outlined-basic\" onChange={this.confirmPasswordFormHandler} label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-12 justify-content-center align-items-center d-flex flex-row\">\r\n                                    <Typography className='fw-bolder' color={'primary'}>{this.state?.photoName || 'Upload your personal photo'}</Typography>\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <Input onChange={this.handleUploadClick} accept=\"image/*\" id=\"icon-button-file\" type=\"file\" />\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                                {this.state?.personalImageUrl ?\r\n                                    <div className=\"col-8 justify-content-center align-items-center\">\r\n                                        <img\r\n                                            style={{ width: 200 }}\r\n                                            src={`${this.state?.personalImageUrl}`}\r\n                                            alt={'Personal image'}\r\n                                            loading=\"lazy\"\r\n                                        />\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"mx-auto mt-4\">\r\n                                <button type='button' className=\"btn btn-primary mx-auto\" onClick={this.registerHandler}>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterStudent;\r\n","import React, { useState } from 'react';\nimport _axios from '../../../apis/axios-instance';\nimport { connect } from 'react-redux';\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\nimport HandleErrors from '../../../hooks/handleErrors';\n\nconst Resetpassword = (props) => {\n    const [password, setPassword] = useState(null);\n    const [confirmPassword, setConfirmPassword] = useState(null);\n\n\n    const ResetHandler = (event) => {\n        // this code pevents from going to another page\n        event.preventDefault()\n\n        if (password !== confirmPassword) {\n            HandleErrors(\"Password Mismatch\")\n            return\n        }\n\n        var data = {\n            password: password,\n            email: localStorage.getItem(\"email\"),\n            token: props.match.params.token\n\n        }\n        _axios.put(\"/auth/forgotPassword\", data).then((response) => {\n            localStorage.removeItem(\"email\")\n            showSuccessMsg(\"Password Reset Successfully\")\n            props.history.push('/login')\n        }).catch(err => HandleErrors(err))\n\n    }\n    return (\n        <div className=\"card m-5 \">\n\n            <div className=\"card-header\">\n                Reset Password\n            </div>\n\n            <div className=\"card-body\">\n                <form className=\" m-3\">\n\n                    <div className=\"form-group\">\n                        <label >New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setPassword(e.target.value)} placeholder=\"New Password\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Confirm New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm New Password\" />\n                    </div>\n\n                    <hr />\n\n                    <div className=\"mx-auto\" style={{ width: 200 }} >\n                        <button className=\"btn btn-primary mx-auto\" onClick={ResetHandler} style={{ width: 200 }}>Reset Password</button>\n\n                    </div>\n\n\n                </form>\n            </div>\n        </div>\n    );\n}\n\n// Import connect\nconst mapStateToProps = (state) => {\n    return {\n        email_address: state.rst.email,\n    };\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return 0\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Resetpassword);\n\n","import { useState, useEffect } from 'react';\n\nfunction getWindowWidth() {\n  const { innerWidth: width } = window;\n  return width;\n}\n\nexport default function useWindowWidth() {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowWidth;\n}","import React from 'react'\nimport CardComponent from '../../Components/CardComponent/CardComponent'\nimport ReactCodeInput from 'react-verification-code-input';\nimport './VerifyEmail.css'\nimport useWindowWidth from '../../hooks/useWindowWidth';\nimport HandleErrors from '../../hooks/handleErrors';\nimport _axios from '../../apis/axios-instance';\nimport showSuccessMsg from '../../hooks/showSuccessMsg';\n\nconst VerifyEmail = (props) => {\n    const onsubmit = (e) => {\n        verifyEmail(e);\n    }\n\n    const verifyEmail = (codeValue) => {\n        //sent to server\n        var data = {\n            email: props.location.state.email,\n            code: codeValue\n        }\n        _axios.post(\"/verifyEmail\", data).then((response) => {\n            showSuccessMsg(\"Verified Successfully!\")\n            props.history.push({\n                pathname: '/login',\n            })\n        }).catch((err) => HandleErrors(err))\n\n    }\n\n    const screenWidth = useWindowWidth();\n    const isMobile = screenWidth < 768\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={'Verify Email'}>\n                    <div className=\"d-flex flex-column justify-content-center align-items-center py-2\">\n                        <small className='text-green'>We have sent for you a verify code.</small>\n                        <small className='text-green'>Please enter the code here</small>\n                        <ReactCodeInput\n                            onComplete={onsubmit}\n                            className=\"my-4 text-primary\"\n                            type='text'\n                            autoFocus={true}\n                            fieldHeight={85}\n                            fieldWidth={isMobile ? screenWidth / 7 : 66}\n                            fields={6} />\n                    </div>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyEmail\n","import forgotPassword from '../Views/Registration/ForgotPassword/forgotPassword'\r\nimport Login from '../Views/Registration/Login/Login'\r\nimport RegisterInquiry from '../Views/Registration/Register/RegisterInquiry'\r\nimport RegisterInstructor from '../Views/Registration/Register/RegisterInstructor/RegisterInstructor'\r\nimport RegisterStudent from '../Views/Registration/Register/RegisterStudent/RegisterStudent'\r\nimport ResetPassword from '../Views/Registration/ResetPassword/ResetPassword'\r\nimport VerifyEmail from '../Views/VerifyEmail/VerifyEmail'\r\n\r\nconst AuthRoutes =\r\n    [\r\n        { path: \"/login\", component: Login, exact: true },\r\n        { path: \"/forgot-password\", component: forgotPassword, exact: true },\r\n        { path: \"/reset-password/:token\", component: ResetPassword, exact: true },\r\n        { path: \"/register\", component: RegisterInquiry, exact: true },\r\n        { path: \"/verifyEmail\", component: VerifyEmail, exact: true },\r\n        { path: \"/register-student\", component: RegisterStudent, exact: true },\r\n        { path: \"/register-instructor\", component: RegisterInstructor, exact: true },\r\n       \r\n    ]\r\n\r\nexport default AuthRoutes\r\n","import _axios from \"../axios-instance\";\r\n\r\nexport class ExamServices {\r\n    /**\r\n     * Create new exam with main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static createNewExam(examMainInfo) {\r\n        return _axios.post('/exams/step1', examMainInfo);\r\n    }\r\n\r\n    /**\r\n     * edit exam main info\r\n     * @param {Object} examMainInfo Information about the exam.\r\n     * @param {string} examMainInfo.name Name of the exam\r\n     * @param {number} examMainInfo.numberOfTrials The number allowed to retake the exam\r\n     * @param {string} examMainInfo.description\r\n     * @param {number} examMainInfo.totalMark\r\n     * @param {string} examMainInfo.duration hh:mm:ss\r\n     * @param {string} examMainInfo.startAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.endAt yyyy-mm-dd hh:mm:ss\r\n     * @param {string} examMainInfo.examSubject\r\n     * @returns {Promise<{message, examId}>}\r\n     */\r\n    static editExamMainInfo(examMainInfo, examId) {\r\n        return _axios.put(`/exams/${examId}}/step1`, examMainInfo);\r\n    }\r\n\r\n\r\n    /**\r\n     * Set exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setExamOptions(examId, options) {\r\n        return _axios.post('/exams/step2', { examId, ...options });\r\n    }\r\n\r\n    /**\r\n     * Edit exam Options by exam id\r\n     * @param {number} examId\r\n     * @param {Object} options Exam options.\r\n     * @param {boolean} options.faceRecognition\r\n     * @param {boolean} options.questionsRandomOrder\r\n     * @param {boolean} options.plagiarismCheck\r\n     * @param {boolean} options.disableSwitchBrowser\r\n     * @param {('manual'|'auto')} options.gradingMethod \r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static editExamOptions(examId, options) {\r\n        return _axios.put(`/exams/${examId}/step2`, { ...options });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static addQuestionsToExam(examId, questions) {\r\n        return _axios.post('/exams/step3', { examId, questions });\r\n    }\r\n\r\n    /**\r\n     * Edit questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{question_id:number}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n     static editQuestionsOfExam(examId, questions) {\r\n        return _axios.put(`/exams/${examId}/step3`, { questions });\r\n    }\r\n\r\n    /**\r\n     * Add questions to the exam by id\r\n     * @param {number} examId \r\n     * @param {Array.<{id:number, mark:number, duration:string}>} questions Array of objects contain question ids\r\n     * @returns {Promise<{message}>}\r\n     */\r\n    static setQuestionsMarksAndDuration(examId, questions) {\r\n        return _axios.post('/exams/step4', { examId, questions });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Instrunctor Own Exams\r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyExams() {\r\n        return _axios.get('/instructors/my-exams');\r\n    }\r\n\r\n    /**\r\n     * Get All published exam\r\n     * @param {{isMarked: boolean}} data\r\n     * @returns {Promise<Array>}\r\n     */\r\n    // static getAllPublishedExams({ isMarked = false } = {}) {\r\n    //     return _axios.get('/exams');\r\n    // }\r\n    static getAllPublishedExams({ isMarked = false } = {}) {\r\n        return _axios.get('/exams', {\r\n            params: {\r\n                isMarked\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a specific Exam\r\n     * @param {number} examId \r\n     * @returns Promise<{Exam:Object}>\r\n     */\r\n    static getExamQuestions(examId) {\r\n        return _axios.get(`/exams/${examId}/questions`);\r\n    }\r\n\r\n    static getExamConfig(examId) {\r\n        return _axios.get(`/exams/${examId}/configs`);\r\n    }\r\n\r\n    static getExamInfo(examId) {\r\n        return _axios.get(`/exams/${examId}`);\r\n    }\r\n\r\n\r\n    /**\r\n     * Post a question answer to \r\n     * @param {object} answerData \r\n     * Example Object\r\n     * {\r\n     \" studentAnswer\": \"seven\"\r\n     \" option_id\": 1,\r\n     \" question_id\": 1,\r\n     \" exam_id\": 1,\r\n     * } \r\n     * @returns Promise<{message}>\r\n     */\r\n    static addAnswer(answerData) {\r\n        return _axios.post(`/answers`, answerData);\r\n    }\r\n\r\n    /**\r\n    * Delete specific exam\r\n    * @param {number} examId \r\n    * @returns \r\n    */\r\n    static deleteExam(examId) {\r\n        return _axios.delete(`/exams/${examId}`);\r\n    }\r\n\r\n    /**\r\n     * Make an exam publish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": true })\r\n    }\r\n\r\n    /**\r\n     * Make an exam unpublish\r\n     * @param {number} examId \r\n     * @returns \r\n     */\r\n    static makeExamUnPublished(examId) {\r\n        return _axios.post(`exams/${examId}/publish`, { \"isPublished\": false })\r\n    }\r\n\r\n    static getStudentExamAnswers(examId) {\r\n        return _axios.get(`exams/${examId}/my-answers`)\r\n    }\r\n\r\n    static submitExam(examId) {\r\n        return _axios.post(`exams/${examId}/submit`)\r\n    }\r\n\r\n    static applyFaceDetection(data) {\r\n        return _axios.post(`/face-detection`, data)\r\n    }\r\n    static applyFaceVerification(data) {\r\n        return _axios.post(`/face-verification`, data)\r\n    }\r\n    static startExam(examId, data) {\r\n        return _axios.post(`exams/${examId}/start`, data)\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TextField } from '@mui/material'\nimport React, { useState } from 'react'\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\nimport { Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker';\nimport moment from 'moment';\nimport * as yup from 'yup';\n\nconst DURATION_REGEX = /^[0-9]{2}:[0-9]{2}:[0-9]{2}$/\nconst AddExam = () => {\n    const createExamSchema = yup.object().shape({\n        name: yup.string().required('This is a required field'),\n        numberOfTrials: yup.number().min(1).required('This is a required field'),\n        description: yup.string().required('This is a required field'),\n        totalMark: yup.number().min(1).required('This is a required field'),\n        duration: yup\n            .string()\n            .matches(DURATION_REGEX, \"Wrong Duration Formate (hh:mm:ss)\")\n            .test(\"duration\", \"mins must not be more than 60\", value => Number(value?.split(':')?.[1]) <= 60)\n            .test(\"duration\", \"seconds must not be more than 60\", value => Number(value?.split(':')?.[2]) <= 60)\n            .required('This is a required field'),\n        examSubject: yup.string().required('This is a required field'),\n        startAt: yup.date().min(new Date(), \"Start Date must be a future date\").required('This is a required field'),\n        endAt: yup\n            .date()\n            .when('startAt', (startAt, schema) => {\n                return schema.test({\n                    test: endAt => moment(startAt).isBefore(moment(endAt)),\n                    message: \"End Date must be after start date\"\n                })\n            })\n            .required('This is a required field')\n\n    });\n\n    const history = useHistory()\n    const location = useLocation()\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const onAddExamHandler = (values, actions) => {\n        if (isEditMode) {\n            ExamServices.editExamMainInfo(values, examOldData.id)\n                .then(res => {\n                    showSuccessMsg('Edited exam information successfully!')\n                    history.push(`/exams/${examOldData.id}/set-options`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.createNewExam(values)\n            .then(res => {\n                showSuccessMsg('Exam information has been saved!')\n                history.push(`/exams/${res.examId}/set-options`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam' : 'Edit Exam'}>\n                    <Formik\n                        initialValues={{\n                            name: examOldData?.name || '',\n                            numberOfTrials: examOldData?.numberOfTrials || '',\n                            description: examOldData?.description || '',\n                            totalMark: examOldData?.totalMark || '',\n                            duration: examOldData?.duration || '',\n                            examSubject: examOldData?.examSubject || '',\n                            startAt: examOldData?.startAt || moment(new Date().setMinutes(0)).format('yyyy-MM-DD HH:mm'),\n                            endAt: examOldData?.endAt || moment(new Date().setMinutes(0)).add(7, 'days').format('yyyy-MM-DD HH:mm'),\n                        }}\n                        validationSchema={createExamSchema}\n                        onSubmit={onAddExamHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"name\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.name}\n                                        type=\"text\"\n                                        label=\"Exam Name\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.name && props.errors.name}\n                                        error={props.touched.name && Boolean(props.errors.name)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"numberOfTrials\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.numberOfTrials}\n                                        type=\"number\"\n                                        label=\"Number Of Trials\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.numberOfTrials && props.errors.numberOfTrials}\n                                        error={props.touched.numberOfTrials && Boolean(props.errors.numberOfTrials)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"description\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.description}\n                                        type=\"text\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.description && props.errors.description}\n                                        error={props.touched.description && Boolean(props.errors.description)}\n                                    />\n                                </div>\n\n                                {/* Exam Subject */}\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"examSubject\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.examSubject}\n                                        type=\"text\"\n                                        label=\"Exam Subject\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.examSubject && props.errors.examSubject}\n                                        error={props.touched.examSubject && Boolean(props.errors.examSubject)}\n                                    />\n                                </div>\n\n                                {/* Start Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"Start Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.startAt}\n                                        onClose={() => {\n                                            props.setFieldTouched('startAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            props.setFieldValue('startAt', selectedDate)\n                                        }}\n                                        renderInput={\n                                            (params) => <TextField\n                                                {...params}\n                                                fullWidth\n                                                helperText={props.touched.startAt && props.errors.startAt}\n                                                error={props.touched.startAt && Boolean(props.errors.startAt)}\n                                            />\n                                        }\n                                    />\n                                </div>\n\n                                {/* End Date */}\n                                <div className='mt-4'>\n                                    <MobileDateTimePicker\n                                        label=\"End Date\"\n                                        minutesStep={5}\n                                        inputFormat={'yyyy-MM-DD HH:mm'}\n                                        value={props.values.endAt}\n\n                                        onClose={() => {\n                                            props.setFieldTouched('endAt', true)\n                                        }}\n                                        onChange={(date) => {\n                                            let selectedDate = moment(date).format('yyyy-MM-DD HH:mm')\n                                            props.setFieldValue('endAt', selectedDate)\n                                        }}\n                                        renderInput={(params) => <TextField\n                                            {...params}\n                                            fullWidth\n                                            helperText={props.touched.endAt && props.errors.endAt}\n                                            error={props.touched.endAt && Boolean(props.errors.endAt)}\n                                        />\n                                        }\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"totalMark\"\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.totalMark}\n                                        type=\"number\"\n                                        label=\"Total Mark\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.totalMark && props.errors.totalMark}\n                                        error={props.touched.totalMark && Boolean(props.errors.totalMark)}\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <TextField\n                                        name=\"duration\"\n                                        placeholder='Ex: 01:30:00'\n                                        fullWidth\n                                        onChange={props.handleChange}\n                                        onBlur={props.handleBlur}\n                                        value={props.values.duration}\n                                        type=\"text\"\n                                        label=\"Duration\"\n                                        variant=\"outlined\"\n                                        helperText={props.touched.duration && props.errors.duration}\n                                        error={props.touched.duration && Boolean(props.errors.duration)}\n                                    />\n                                </div>\n\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default AddExam\n","import React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Divider } from '@mui/material';\n\nconst AddationMethodsMenu = ({ methods = [], anchorEl, setAnchorEl }) => {\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    return <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n            elevation: 0,\n            sx: {\n                overflow: 'visible',\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n                mt: 1.5,\n                '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                },\n                '&:before': {\n                    content: '\"\"',\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: 'background.paper',\n                    transform: 'translateY(-50%) rotate(45deg)',\n                    zIndex: 0,\n                },\n            },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n    >\n        {\n            methods?.map((method, index) => <div key={index} >\n                <MenuItem onClick={method.function}>\n                    {method.displayName}\n                </MenuItem>\n                {(index !== methods.length - 1) && <Divider />}\n            </div>\n            )\n        }\n        \n    </Menu>;\n};\n\nexport default AddationMethodsMenu;\n","export const Colors = {\n    primary: '#2F4F4F',\n    primaryHover: '#3c6464',\n    secondary: '#50303A',\n    black: '#313131',\n    grey: '#AEAEAE',\n    white: '#fff',\n    danger: '#DC3545',\n    success: '#28A745'\n}","import styled from 'styled-components';\n\n\nconst ClickableView = styled.div`\n    cursor: pointer;\n`\n\n\nexport {\n    ClickableView\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from '@mui/material';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdQuestionController = ({ questionTitle, id, deleteFunction = () => { }, hasNoDelete, questionType, children }) => {\n  const history = useHistory();\n\n  const headerTextStyle = {\n    backgroundColor: '#fff',\n    position: 'absolute',\n    top: -25,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    padding: '5px 10px'\n  }\n\n  const goToQuestion = () => {\n    /** TODO */\n    history.push('/questions/' + id)\n  }\n\n  return <Wrapper className='mb-3' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n    {questionType ?\n      <Typography\n        variant='h5'\n        className='fw-bolder'\n        color=\"primary\"\n        style={headerTextStyle}\n        textTransform='capitalize'\n      >\n        {questionType}\n      </Typography>\n      :\n      null\n    }\n\n    {hasNoDelete ?\n      <div className='my-4'>\n        <Text className='text-decoration-none'>{questionTitle}</Text>\n      </div>\n      :\n      <div className='d-flex align-items-center justify-content-between'>\n        <ClickableView onClick={goToQuestion}>\n          <Text>{questionTitle}</Text>\n        </ClickableView>\n        <ClickableView onClick={deleteFunction}>\n          <CloseIcon color={'error'} fontSize={'large'} />\n        </ClickableView>\n      </div>\n    }\n\n    {\n      children\n    }\n  </Wrapper>\n};\n\nexport default BorderdQuestionController;\n","import { actionTypes } from \"../actionTypes\"\r\n\r\n/**\r\n * \r\n * @param {Array.<{questionText:string, id:string}>} questionData \r\n * @returns \r\n */\r\nexport const saveAQuestion = (questionData, groupId='') => {\r\n    if (groupId) {\r\n        // then the questtion belongs to a group\r\n        return {\r\n\r\n            type: actionTypes.ADD_GROUP_QUESTION,\r\n            payload: questionData,\r\n            groupId: groupId\r\n\r\n        }\r\n    }\r\n    else\r\n        return {\r\n            type: actionTypes.ADD_QUESTION,\r\n            payload: questionData\r\n        }\r\n}\r\n\r\n/**\r\n * \r\n * @param {{id:string}} param0 \r\n * @returns \r\n */\r\nexport const addNewGroup = (group) => {\r\n    return {\r\n        type: actionTypes.ADD_GROUP,\r\n        payload: group\r\n    }\r\n}\r\nexport const removeSavedQuestionFromExam = (id) => {\r\n    return {\r\n        type: actionTypes.REMOVE_QUESTION,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const removeAllSavedQuestions = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_ALL,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export { saveAQuestion, removeSavedQuestionFromExam, removeAllSavedQuestions }","export const QuestionTypes = {\n    ESSAY: \"essay\",\n    MCQ: \"mcq\",\n    FORMULA: \"formula\",\n    GROUP: \"group\"\n}\n\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../constants/Colors';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ClickableView } from '../../constants/GlobalStyle';\nimport { useHistory } from 'react-router-dom';\nimport BorderdQuestionController from './BorderdQuestionController';\nimport { TextField, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst Wrapper = styled.div`\n    border: 1px solid ${Colors.primary};\n    border-radius: 12px;\n    padding: 16px 36px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `\nconst Text = styled.span`\n    color: ${Colors.primary};\n    text-decoration: underline;\n    font-weight: 700;\n    font-size: 21px;\n  `\n\nconst BorderdGroupQuestion = ({ isCreationMode, getCreationData, cancelCreationFunction = () => { }, questionTitle, id, deleteFunction = () => { }, questionsMarkup, hasNoDelete, questionnType = QuestionTypes?.GROUP }) => {\n    const history = useHistory();\n\n    const goToQuestion = () => {\n        /** TODO */\n        history.push('/questions/' + id)\n    }\n\n    const headerTextStyle = {\n        backgroundColor: '#fff',\n        position: 'absolute',\n        top: -25,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        padding: '5px 10px'\n    }\n\n\n    const submitGroupQuesion = (values) => {\n        getCreationData(values)\n    }\n\n    const cancelHandler = () => {\n        cancelCreationFunction()\n    }\n\n    const CreationFormMarkup = (\n        <Wrapper className='my-5 rounded-2' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n            <Typography\n                variant='h5'\n                className='fw-bolder'\n                color=\"primary\"\n                style={headerTextStyle}\n            >\n                Create Group Question\n            </Typography>\n            <Formik\n                initialValues={{ groupName: \"\" }}\n                onSubmit={submitGroupQuesion}\n            >\n                {props => (\n                    <>\n                        <div className='mt-4'>\n                            <TextField\n                                fullWidth\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                name=\"groupName\"\n                                required\n                                label=\"Group Name\"\n                                variant=\"outlined\"\n                            />\n                        </div>\n                        <div className='d-flex justify-content-end'>\n                            <button onClick={cancelHandler} className=\"btn btn-secondary mx-auto mt-4\">Cancel</button>\n                            <button onClick={props.handleSubmit} className=\"btn btn-primary mx-auto mt-4\">Save</button>\n                        </div>\n                    </>\n                )}\n            </Formik>\n        </Wrapper>\n    )\n\n    return (isCreationMode ?\n        CreationFormMarkup\n        :\n        <div>\n            <Wrapper className='my-5 rounded-2' style={{ flexDirection: 'column', alignItems: 'stretch', position: 'relative' }}>\n                <Typography\n                    variant='h5'\n                    className='fw-bolder'\n                    color=\"primary\"\n                    style={headerTextStyle}\n                    textTransform='capitalize'\n                >\n                    {questionnType}\n                </Typography>\n                {hasNoDelete ?\n                    <div className='my-4'>\n                        <Text className='text-decoration-none'>{questionTitle}</Text>\n                    </div>\n                    :\n                    <div className='my-4 w-100 d-flex align-items-start justify-content-between'>\n                        <ClickableView onClick={goToQuestion}>\n                            <Text>{questionTitle}</Text>\n                        </ClickableView>\n                        <ClickableView onClick={deleteFunction}>\n                            <CloseIcon color={'error'} fontSize={'large'} />\n                        </ClickableView>\n                    </div>\n\n                }\n                <div className='mx-5'>\n                    {questionsMarkup}\n                </div>\n            </Wrapper>\n\n        </div>\n    )\n\n};\n\nexport default BorderdGroupQuestion;\n","import _axios from \"../axios-instance\";\r\nimport { QuestionTypes } from '../../constants/QuestionTypes'\r\nimport { string } from \"yup\";\r\nexport class QuestionServices {\r\n    /**\r\n     * Create new question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.mark\r\n     * @param {Array<string>} question.answers All the possible answers\r\n     * @param {string} question.correctAnswer Correct answer\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createMcqQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.MCQ, ...question });\r\n    }\r\n\r\n    static createEssayQuestion(question) {\r\n        return _axios.post('/questions/create', { type: QuestionTypes.ESSAY, ...question });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} id Question id\r\n     * @returns \r\n     */\r\n    static getQuestionDetails(id) {\r\n        return _axios.get(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Edit any type of question\r\n     * @param {*} id question id\r\n     * @param {*} question Question as it returned from server\r\n     * @returns \r\n     */\r\n    static editQuestion(id, question) {\r\n        return _axios.put(`/questions/${id}`, { ...question });\r\n    }\r\n\r\n    /**\r\n     * Delete any type of question\r\n     * @param {*} id question id\r\n     * @returns \r\n     */\r\n    static deleteQuestion(id) {\r\n        return _axios.delete(`/questions/${id}`);\r\n    }\r\n\r\n    /**\r\n     * Get All My Exams\r\n     * @param {Object} params\r\n     * @param {string} params.tag\r\n     * @param {Boolean} params.myQuestions\r\n     * @param {string} params.search\r\n     * @param {string} params.type\r\n     * \r\n     * @returns {Promise<Array>}\r\n     */\r\n    static getMyQuestions(params) {\r\n        return _axios.get('/questions', { params: params });\r\n    }\r\n\r\n    // Formula Question Endpoints\r\n    /**\r\n     * Create Formula Question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.formula\r\n     * @param {Array<Array<any>>} question.variables [[var name, min val, max val]] ex: [ ['x',30,40] ]\r\n     * @param {Array<Array<any>>} question.formulas [[questionHeader, finalAnswer]] ex: [ ['1+23=??', 8] ]\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createFormulaQuestion(question) {\r\n        return _axios.post('/questions/formula/create', { type: QuestionTypes.FORMULA, ...question });\r\n    }\r\n\r\n    /**\r\n     * Edit Formula Question\r\n     * @param {*} id Question id\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {string} question.formula\r\n     * @param {Array<Array<any>>} question.variables [[var name, min val, max val]] ex: [ ['x',30,40] ]\r\n     * @param {Array<Array<any>>} question.formulas [[questionHeader, finalAnswer]] ex: [ ['1+23=??', 8] ]\r\n     * @returns {Promise<any>}\r\n     */\r\n    static editFormulaQuestion(id, question) {\r\n        return _axios.put(`/questions/formula/${id}`, { type: QuestionTypes.FORMULA, ...question });\r\n\r\n    }\r\n\r\n\r\n    // Grouping Question Endpoints\r\n    /**\r\n     * Create Group Question\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {Array<number>} question.questions Array of question ids\r\n     * @returns {Promise<any>}\r\n     */\r\n    static createGroupQuestion(question) {\r\n        return _axios.post('/questions/question-group/create', { type: QuestionTypes.GROUP, ...question });\r\n    }\r\n\r\n    /**\r\n     * Edit Group Question\r\n     * @param {*} id Question id\r\n     * @param {Object} question Information about the question.\r\n     * @param {string} question.questionText Question header\r\n     * @param {Array<number>} question.questions Array of question ids\r\n     * @returns {Promise<any>}\r\n     */\r\n    static editGroupQuestion(id, question) {\r\n        return _axios.put(`/questions/question-group/${id}`, { type: QuestionTypes.GROUP, ...question });\r\n    }\r\n\r\n\r\n}\r\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React, { useRef, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { matchPath, useHistory } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport MaterialModal from '../../../../Components/MaterialModal/MaterialModal'\r\nimport AddationMethodsMenu from '../../../../Components/QuestionComponents/AddationMethodsMenu'\r\nimport BorderdQuestionController from '../../../../Components/QuestionComponents/BorderdQuestionController'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { showAlert } from '../../../../redux/actions/AppActions'\r\nimport { addNewGroup, removeAllSavedQuestions, removeSavedQuestionFromExam } from '../../../../redux/actions/ExamAction'\r\n\r\nimport { TextField } from '@mui/material'\r\nimport BorderdGroupQuestion from '../../../../Components/QuestionComponents/BorderdGroupQuestion'\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService'\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n\r\nconst AddExamQuestions = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [groupQuestionAnchorEl, setGroupQuestionAnchorEl] = useState(null);\r\n    const [selctedGroupId, setselctedGroupId] = useState(null);\r\n\r\n    const AddQuestionHandler = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const goCreateNewQuestion = () => {\r\n        history.push('/questions/add', { fromExamCreation: true, isFromGroup: Boolean(selctedGroupId), groupId: selctedGroupId })\r\n    }\r\n    const selectQuestionFromQBank = () => {\r\n        let normalQuestionIds;\r\n        try {\r\n            normalQuestionIds = [...questions]\r\n            normalQuestionIds = normalQuestionIds.map(item => item.id)\r\n        } catch {\r\n            normalQuestionIds = []\r\n        }\r\n\r\n        let groupQuestionsIdList;\r\n        try {\r\n            groupQuestionsIdList = [...groupQuestions]\r\n            groupQuestionsIdList = groupQuestionsIdList.map(item => {\r\n                return [item.id, ...item.questions.map(item => item.id)]\r\n            })\r\n        } catch {\r\n            groupQuestionsIdList = []\r\n        }\r\n\r\n        let groupQuestionsIds = groupQuestionsIdList.flat()\r\n        let allQuestionsIds = [...normalQuestionIds, ...groupQuestionsIds]\r\n\r\n        history.push('/questions', {\r\n            canSelectQuestionsForExam: true,\r\n            isFromGroup: Boolean(selctedGroupId),\r\n            groupId: selctedGroupId,\r\n            allSelectedQuestionIds: allQuestionsIds\r\n        })\r\n    }\r\n    const goCreateNewGroup = () => {\r\n        setShowGroupCreationForm(true)\r\n\r\n        // Delay to give chance to be a static content to not distribute the scrolling\r\n        setTimeout(() => {\r\n            document.getElementById('scrollElementToGroupCreationForm').scrollIntoView({ behavior: 'smooth', block: 'center' })\r\n        }, 100);\r\n    }\r\n    const groupMethods = [\r\n        {\r\n            displayName: 'Create a new question',\r\n            function: goCreateNewQuestion\r\n        }\r\n        ,\r\n        {\r\n            displayName: 'Select from question bank',\r\n            function: selectQuestionFromQBank\r\n        }\r\n    ]\r\n    const methods = [\r\n        ...groupMethods,\r\n        ,\r\n        {\r\n            displayName: 'Create a new group',\r\n            function: goCreateNewGroup\r\n        }\r\n    ]\r\n\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.exam)\r\n    const examOldData = location.state?.exam\r\n    const [examOldQuestions, setExamOldQuestions] = useState(null)\r\n    const [examId, setExamId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const match = matchPath(history.location.pathname, {\r\n            path: '/exams/:examId/add-questions'\r\n        })\r\n        setExamId(match.params.examId)\r\n    }, [history.location.pathname])\r\n\r\n    /** Get Old Exam Questions */\r\n    useEffect(() => {\r\n        if (!examId) return;\r\n\r\n        ExamServices.getExamQuestions(examId)\r\n            .then(res => {\r\n                setExamOldQuestions(res?.questions)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [examId])\r\n\r\n\r\n\r\n    /** Get Questions of this exam */\r\n    const [questions, setQuestions] = useState(null);\r\n    const savedQuestions = useSelector(state => state?.exam?.examQuestions)\r\n    const getQuestions = () => {\r\n        let oldQuestionsOtherThanGroupQuestions = examOldQuestions?.filter(item => (item.type !== QuestionTypes.GROUP))\r\n        setQuestions([...oldQuestionsOtherThanGroupQuestions, ...savedQuestions])\r\n    }\r\n    useEffect(() => {\r\n        if (!examOldQuestions) return\r\n        getQuestions();\r\n        // eslint-disable-next-line\r\n    }, [examOldQuestions]);\r\n\r\n\r\n    const submitExamHandler = () => {\r\n        let submittedQuestions = [...questions]\r\n        submittedQuestions = submittedQuestions?.map(item => { return { question_id: item.id } })\r\n        let qroupQuestionsId = groupQuestions?.map(item => { return { question_id: item.id } })\r\n        submittedQuestions = [...(submittedQuestions || []), ...(qroupQuestionsId || [])]\r\n        let request = !isEditMode ? ExamServices.addQuestionsToExam(examId, submittedQuestions) : ExamServices.editQuestionsOfExam(examId, submittedQuestions)\r\n\r\n        request\r\n            .then(res => {\r\n                history.push('/exams')\r\n                dispatch(removeAllSavedQuestions())\r\n                showSuccessMsg('Exam has been created successfully!')\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const removeQuestionFromListHandler = (id) => {\r\n        dispatch(removeSavedQuestionFromExam(id))\r\n        setQuestions(prevState => {\r\n            return prevState?.filter(item => item.id !== id)\r\n        })\r\n        setGroupQuestions(prevState => {\r\n            return prevState?.filter(item => item.id !== id)\r\n        })\r\n        setExamOldQuestions(prevState => {\r\n            return prevState?.filter(item => item.id !== id)\r\n        })\r\n    }\r\n\r\n\r\n    // QUESTION GROUP STUFF\r\n    const [groupQuestions, setGroupQuestions] = useState(null);\r\n    const savedQroupQuestions = useSelector(state => state?.exam?.examGroups)\r\n    useEffect(() => {\r\n        let oldGroupQuestionsOnly = examOldQuestions?.filter(item => (item?.type === QuestionTypes.GROUP)) || []\r\n        setGroupQuestions([...oldGroupQuestionsOnly, ...savedQroupQuestions])\r\n    }, [examOldQuestions, savedQroupQuestions])\r\n\r\n    const [showGroupCreationForm, setShowGroupCreationForm] = useState(false)\r\n    const createGroupQuestion = (values) => {\r\n        QuestionServices.createGroupQuestion({ questionText: values?.groupName })\r\n            .then(res => {\r\n                let group = {\r\n                    id: res.id,\r\n                    questionText: values?.groupName,\r\n                    type: QuestionTypes.GROUP,\r\n                    questions: []\r\n                }\r\n                dispatch(addNewGroup(group))\r\n                setShowGroupCreationForm(false)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    const cancelGroupCreation = () => {\r\n        setShowGroupCreationForm(false)\r\n        window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n    const showGroupQuestionMenu = (e, selectedgroupId) => {\r\n        setGroupQuestionAnchorEl(e.currentTarget)\r\n        setselctedGroupId(selectedgroupId)\r\n    }\r\n    const hideGroupQuestionMenu = () => {\r\n        setGroupQuestionAnchorEl(null)\r\n        setselctedGroupId(null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={!isEditMode ? 'Create Exam: add questions' : 'Edit Exam: edit questions'}>\r\n                    <div className='p-4'>\r\n                        <div className='d-flex justify-content-end mb-4'>\r\n                            <button onClick={AddQuestionHandler} className='btn btn-success'>\r\n                                <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                            </button>\r\n                            <AddationMethodsMenu methods={methods} anchorEl={anchorEl} setAnchorEl={setAnchorEl} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            {\r\n                                questions?.map(question =>\r\n                                    <BorderdQuestionController\r\n                                        deleteFunction={() => removeQuestionFromListHandler(question?.id)}\r\n                                        id={question?.id} key={question?.id}\r\n                                        questionTitle={question?.questionText}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <AddationMethodsMenu methods={groupMethods} anchorEl={groupQuestionAnchorEl} setAnchorEl={hideGroupQuestionMenu} />\r\n                        <div>\r\n                            {\r\n                                groupQuestions?.map(question =>\r\n                                    <div key={question.id} className='position-relative'>\r\n                                        <button onClick={(e) => showGroupQuestionMenu(e, question?.id)} className='btn btn-success position-absolute p-0 rounded-circle' style={{ top: -20, zIndex: 20, right: -10, width: 44, height: 44 }}>\r\n                                            <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff', transform: 'scale(0.8)' }} />\r\n                                        </button>\r\n                                        <BorderdGroupQuestion\r\n                                            questionTitle={question?.questionText}\r\n                                            deleteFunction={() => removeQuestionFromListHandler(question?.id)}\r\n                                            questionsMarkup={\r\n                                                question?.questions?.map(subQuestion => (\r\n                                                    <BorderdQuestionController\r\n                                                        key={subQuestion?.id}\r\n                                                        id={subQuestion?.id}\r\n                                                        questionTitle={subQuestion?.questionText}\r\n                                                    />\r\n                                                ))\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div id=\"scrollElementToGroupCreationForm\" />\r\n                        {showGroupCreationForm ?\r\n                            <div>\r\n                                <BorderdGroupQuestion\r\n                                    isCreationMode={true}\r\n                                    cancelCreationFunction={cancelGroupCreation}\r\n                                    getCreationData={createGroupQuestion}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n\r\n                        <div>\r\n                            <button onClick={submitExamHandler} className=\"btn btn-primary mx-auto mt-4\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddExamQuestions\r\n","import { Typography } from '@mui/material'\nimport React from 'react'\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\n\nconst NoContentComponent = ({ text }) => {\n    return (\n        <div className='d-flex justify-content-center align-items-center'>\n            <DoNotDisturbAltIcon color='error' />\n            <Typography className='ms-1' color={'error'}>{text}</Typography>\n        </div>\n    )\n}\n\nexport default NoContentComponent","import React from 'react'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Chip, Menu, MenuItem } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport PublishIcon from '@mui/icons-material/Publish';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Exams = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const addNewExamHandler = (e) => {\r\n        history.push('/exams/add')\r\n    }\r\n\r\n    const [exams, setExams] = useState(null)\r\n    const getExamsHandler = () => {\r\n        ExamServices.getMyExams()\r\n            .then(res => {\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getExamsHandler()\r\n    }, [])\r\n\r\n    const GoToExamDetailsHandler = (examId) => {\r\n        history.push(`/exams/${examId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedExam, setSelectedExam] = React.useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedExam(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedExam(null)\r\n    };\r\n\r\n    const editExamHandler = () => {\r\n        let exam = exams.find(item => item.id === selectedExam)\r\n        history.push('/exams/edit', { exam })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteExamHandler = () => {\r\n        let deleteFun = () => {\r\n            ExamServices.deleteExam(selectedExam)\r\n                .then(res => {\r\n                    showSuccessMsg('Exam deleted successfully!')\r\n                    let newExams = [...exams]\r\n                    newExams = newExams.filter(item => item.id !== selectedExam)\r\n                    setExams(newExams)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        dispatch(showAlert({\r\n            header: 'Delete this exam?',\r\n            details: 'You are going to delete this exam permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    const makePublishHandler = (isWantToBePublish) => {\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        let examName = selectedExamObject?.name\r\n        let request = isWantToBePublish ? ExamServices.makeExamPublished(selectedExam) : ExamServices.makeExamUnPublished(selectedExam)\r\n        request\r\n            .then(res => {\r\n                showSuccessMsg(`Your Exam (${examName}) has been ${isWantToBePublish ? 'published' : 'unpublished'} successfully!`)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n            .finally(() => {\r\n                handleClose() //for menu\r\n                getExamsHandler()\r\n            })\r\n    }\r\n\r\n    const isExamNotCompleted = (row) => (!row.config || !row.questions?.length)\r\n    const isSelectedExamPublished = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return selectedExamObject?.isPublished\r\n    }\r\n    const isSelctedExamIsNotCompleted = () => {\r\n        if (!exams?.length) return null\r\n        let selectedExamObject = exams.find(item => item.id === selectedExam)\r\n        return (!selectedExamObject?.config || !selectedExamObject?.questions?.length)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{}} className='d-flex mt-4 justify-content-end'>\r\n                <button onClick={addNewExamHandler} className='btn btn-success'>\r\n                    <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                </button>\r\n            </div>\r\n\r\n            {exams?.length ?\r\n                <TableContainer className='mt-5' component={Paper}>\r\n                    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell>Exam Name</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Start Date</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">End Date</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Total Marks</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Duration</StyledTableCell>\r\n                                <StyledTableCell align=\"right\"> </StyledTableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {exams?.map((row) => (\r\n                                <StyledTableRow\r\n                                    className={isExamNotCompleted(row) ? 'bg-danger disablePointer' : ''}\r\n                                    onClick={!isExamNotCompleted(row) ? () => GoToExamDetailsHandler(row.id) : null}\r\n                                    key={row.id}\r\n                                >\r\n                                    {/* NAME */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} component=\"th\" scope=\"row\">\r\n                                        {row.name}\r\n                                        {row.isPublished ?\r\n                                            < Chip className='ms-2' size='small' color=\"success\" icon={<DoneAllIcon />} label=\"Published\" />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </StyledTableCell>\r\n                                    {/* STARE DATE */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.startAt}\r\n                                    </StyledTableCell>\r\n                                    {/* END DATE */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.endAt}\r\n                                    </StyledTableCell>\r\n                                    {/* TOTAL MARK */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.totalMark}\r\n                                    </StyledTableCell>\r\n                                    {/* DURATION */}\r\n                                    <StyledTableCell className={isExamNotCompleted(row) ? 'text-light' : ''} align=\"right\">\r\n                                        {row.duration}\r\n                                    </StyledTableCell>\r\n                                    {/* OPTIONS */}\r\n                                    <StyledTableCell style={{ cursor: 'pointer' }} className={isExamNotCompleted(row) ? 'text-light' : ''} onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                        <SettingsIcon fontSize='medium' color={isExamNotCompleted(row) ? '#fff' : 'secondary'} />\r\n                                    </StyledTableCell>\r\n\r\n                                </StyledTableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                :\r\n                null\r\n            }\r\n\r\n            {!exams?.length ?\r\n                <NoContentComponent text={\"No Exams Right Now\"} />\r\n                :\r\n                null\r\n            }\r\n\r\n            {\r\n                selectedExam &&\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    autoFocus={false}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    {!isSelctedExamIsNotCompleted() ?\r\n                        <MenuItem onClick={() => makePublishHandler(!isSelectedExamPublished())}>\r\n                            <PublishIcon />\r\n                            {isSelectedExamPublished() ? 'UnPublish' : 'Publish'}\r\n                        </MenuItem>\r\n                        :\r\n                        null\r\n                    }\r\n                    <MenuItem onClick={editExamHandler}>\r\n                        <EditIcon />\r\n                        Edit\r\n                    </MenuItem>\r\n                    <MenuItem color='error' onClick={deleteExamHandler}>\r\n                        <DeleteForeverIcon color='error' />\r\n                        Delete\r\n                    </MenuItem>\r\n                </Menu>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Exams\r\n","import { PlusCircleOutlined } from '@ant-design/icons'\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { useState } from 'react';\r\nimport { Checkbox, FormControlLabel, Menu, MenuItem, Switch, TextField, Typography } from '@mui/material';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideAlert, showAlert } from '../../../redux/actions/AppActions';\r\nimport { addNewGroup, saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { Formik } from 'formik';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: Colors.primary,\r\n        color: theme.palette.common.white,\r\n        fontWeight: 700\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 16,\r\n    },\r\n    [`&.${tableCellClasses.body}:first-of-type`]: {\r\n        fontWeight: 700\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&': {\r\n        cursor: 'pointer'\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: theme.palette.action.hover\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nconst Questions = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const isSelectionMode = location.state?.canSelectQuestionsForExam\r\n\r\n    const goToAddQuestionPageHandler = () => {\r\n        history.push(`${history.location.pathname}/add`)\r\n    }\r\n\r\n    /**\r\n     * Getting Questions\r\n     */\r\n    const [questions, setQuestions] = useState(null)\r\n    const getAllQuestions = () => {\r\n        QuestionServices.getMyQuestions()\r\n            .then(res => {\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        //Commented as it get from filter useeffect initially\r\n        //getAllQuestions();\r\n    }, [])\r\n\r\n    const GoToQuestionDetailsHandler = (questionId) => {\r\n        history.push(`${history.location.pathname}/${questionId}`)\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedQuestion, setSelectedQuestion] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event, id) => {\r\n        event.stopPropagation();\r\n        setSelectedQuestion(id)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedQuestion(null)\r\n    };\r\n\r\n    const editQuestionHandler = () => {\r\n        let question = questions.find(item => item.id === selectedQuestion)\r\n        history.push('/questions/edit', { question })\r\n        handleClose()\r\n    }\r\n\r\n    const deleteQuestionHandler = () => {\r\n        let deleteFun = () => {\r\n            QuestionServices.deleteQuestion(selectedQuestion)\r\n                .then(res => {\r\n                    showSuccessMsg('Question deleted successfully!')\r\n                    let newQuestions = [...questions]\r\n                    newQuestions = newQuestions.filter(item => item.id !== selectedQuestion)\r\n                    setQuestions(newQuestions)\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n                .finally(() => {\r\n                    handleClose() //for menu\r\n                    dispatch(hideAlert()) //for alert\r\n                })\r\n        }\r\n        // show alert\r\n        dispatch(showAlert({\r\n            header: 'Delete this question?',\r\n            details: 'You are going to delete this question permanently',\r\n            alertFunction: deleteFun\r\n        }))\r\n    }\r\n\r\n    // #### SELECTION MODE STUFF ####\r\n\r\n    const isAllSelected = questions?.every(item => item.isSelected)\r\n    const selectedQuestions = questions?.filter(item => item.isSelected)\r\n    /**\r\n     * Mark needed question to be selected for an exam in [selection mode]\r\n     */\r\n    const onCheckHandler = (index, isSelected) => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[index].isSelected = isSelected\r\n            return newQuestions\r\n        })\r\n    }\r\n    const selectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: true } })\r\n        })\r\n    }\r\n    const deselectAllQuestions = () => {\r\n        setQuestions(prevState => {\r\n            let newQuestions = [...prevState]\r\n            return newQuestions.map(item => { return { ...item, isSelected: false } })\r\n        })\r\n    }\r\n    const selectedGroupQuestionId = location.state?.groupId\r\n    const sentSelectedQuestionHandler = () => {\r\n        if (selectedGroupQuestionId) {\r\n            QuestionServices.getQuestionDetails(selectedGroupQuestionId)\r\n                .then(res => {\r\n                    let returnedQuestion = res?.question\r\n                    let groupReturnedQuestions = res?.question?.questions\r\n                    return QuestionServices.editGroupQuestion(selectedGroupQuestionId, {\r\n                        questionText: returnedQuestion?.questionText,\r\n                        questions: [...groupReturnedQuestions?.map(item => item.id), ...selectedQuestions?.map(item => item.id)]\r\n                    })\r\n                })\r\n                .then(res => {\r\n                    dispatch(saveAQuestion(selectedQuestions, selectedGroupQuestionId))\r\n                    history.goBack()\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n        }\r\n        else {\r\n            let normalQuestions = selectedQuestions?.filter(item => item.type !== QuestionTypes.GROUP)\r\n            let groupQuestions = selectedQuestions?.filter(item => item.type === QuestionTypes.GROUP)\r\n            groupQuestions?.length && dispatch(addNewGroup(groupQuestions))\r\n            normalQuestions?.length && dispatch(saveAQuestion(normalQuestions, null))\r\n            history.goBack()\r\n        }\r\n    }\r\n\r\n\r\n    // #### SEARCH AND FILTER FUNCTIONALITY ####\r\n\r\n    const [filterValue, setFilterValue] = useState(null)\r\n    const [filterMenuEl, setFilterMenuEl] = useState(null)\r\n    const [searchValue, setsearchValue] = useState('')\r\n    const [isAllowedToSearch, setIsAllowedToSearch] = useState(true)\r\n    const onFilterHandler = (values) => {\r\n        setFilterValue(prevState => { return { ...prevState, ...values } })\r\n        setFilterMenuEl(false)\r\n    }\r\n    useEffect(() => {\r\n        QuestionServices.getMyQuestions({\r\n            myQuestions: filterValue?.isMyQuestions,\r\n            tag: filterValue?.tag,\r\n            type: filterValue?.type,\r\n            search: filterValue?.search\r\n        })\r\n            .then(res => {\r\n                setQuestions(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [filterValue])\r\n\r\n    const searchHandler = () => {\r\n        if (!searchValue) return\r\n        setIsAllowedToSearch(false)\r\n        setFilterValue(prevState => { return { ...prevState, search: searchValue } })\r\n    }\r\n    const clearSearch = () => {\r\n        setsearchValue('')\r\n        setIsAllowedToSearch(true)\r\n        setFilterValue(prevState => { return { ...prevState, search: null } })\r\n    }\r\n    const clearFilter = () => {\r\n        setFilterValue(null)\r\n        clearSearch()\r\n        setFilterMenuEl(false)\r\n    }\r\n    const FilterMarkup = (\r\n        <div className='d-flex justify-content-between mt-3'>\r\n            <div className='position-relative'>\r\n                <TextField\r\n                    name=\"search\"\r\n                    fullWidth\r\n                    value={searchValue}\r\n                    type=\"text\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => { setsearchValue(e.target.value); setIsAllowedToSearch(true) }}\r\n                />\r\n                <div onClick={isAllowedToSearch ? searchHandler : clearSearch} className='position-absolute p-2 pointer' style={{ right: 0, top: '50%', zIndex: 10, transform: 'translateY(-50%)' }}>\r\n                    {isAllowedToSearch ?\r\n                        <SearchIcon style={searchValue ? {} : { cursor: 'not-allowed' }} color=\"secondary\" />\r\n                        :\r\n                        <CloseIcon color=\"secondary\" />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className='d-flex align-items-center p-2 pointer' onClick={(e) => setFilterMenuEl(e.currentTarget)}>\r\n                <FilterListIcon color=\"secondary\" fontSize='large' />\r\n            </div>\r\n\r\n            <Menu\r\n                id=\"basic-menu2\"\r\n                anchorEl={filterMenuEl}\r\n                open={Boolean(filterMenuEl)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={() => { setFilterMenuEl(null) }}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <div className='p-3'>\r\n                    <div onClick={clearFilter} className='pointer mb-3 d-flex justify-content-end'>\r\n                        <Typography color='secondary' className='text-decoration-underline'>clear filter</Typography>\r\n                    </div>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={{\r\n                            type: filterValue?.type || '',\r\n                            tag: filterValue?.tag || '',\r\n                            isMyQuestions: filterValue?.isMyQuestions || false\r\n                        }}\r\n                        onSubmit={onFilterHandler}\r\n                    >\r\n                        {props => (\r\n                            <form className='p-2' onSubmit={props.handleSubmit}>\r\n                                <div className='mb-2'>\r\n                                    <TextField\r\n                                        name=\"type\"\r\n                                        onChange={props.handleChange}\r\n                                        onBlur={props.handleBlur}\r\n                                        value={props.values.type}\r\n                                        fullWidth\r\n                                        select\r\n                                        label=\"Type\"\r\n                                        variant=\"outlined\"\r\n                                    >\r\n                                        {\r\n                                            Object.keys(QuestionTypes).map((type) => (\r\n                                                <MenuItem key={type} value={QuestionTypes[type]}>\r\n                                                    {type}\r\n                                                </MenuItem>\r\n                                            ))\r\n                                        }\r\n                                    </TextField>\r\n                                </div>\r\n\r\n                                <div className='mb-2'>\r\n                                    <TextField\r\n                                        name=\"tag\"\r\n                                        onChange={props.handleChange}\r\n                                        onBlur={props.handleBlur}\r\n                                        value={props.values.tag}\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        label=\"Tags\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='mb-2'>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={props.values.isMyQuestions}\r\n                                                onChange={props.handleChange}\r\n                                                onBlur={props.handleBlur}\r\n                                                name=\"isMyQuestions\"\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Show My Questions Only\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='d-flex'>\r\n                                    <button className=\"btn btn-secondary mx-auto\" type=\"button\" onClick={() => { setFilterMenuEl(null) }}>Cancel</button>\r\n                                    <button className=\"btn btn-primary mx-auto\" type=\"submit\">Apply</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </Menu>\r\n        </div>\r\n    )\r\n\r\n    const allSelectedQuestionIds = location.state?.allSelectedQuestionIds\r\n    const isAlreadySelected = (id) => {\r\n        return allSelectedQuestionIds?.includes(id)\r\n    }\r\n    const alreadySelectedStyle = { backgroundColor: '#eee' }\r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex mt-4 justify-content-end'>\r\n                {!isSelectionMode ?\r\n                    <button onClick={goToAddQuestionPageHandler} className='btn btn-success'>\r\n                        <PlusCircleOutlined className='primaryColoredIcon' style={{ color: '#fff' }} />\r\n                    </button>\r\n                    :\r\n                    <button onClick={sentSelectedQuestionHandler} className='btn btn-success'>\r\n                        Confirm Selection ({selectedQuestions?.length})\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            {FilterMarkup}\r\n            {questions?.length ?\r\n                <>\r\n                    <TableContainer className='mt-1' component={Paper}>\r\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {isSelectionMode &&\r\n                                        <StyledTableCell>\r\n                                            {/* <Checkbox\r\n                                                style={{ backgroundColor: '#fff' }}\r\n                                                checked={isAllSelected}\r\n                                                onChange={isAllSelected ? deselectAllQuestions : selectAllQuestions}\r\n                                            /> */}\r\n                                        </StyledTableCell>\r\n                                    }\r\n                                    <StyledTableCell>Question Header</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Type</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Owned By</StyledTableCell>\r\n                                    <StyledTableCell align=\"right\">Created Date</StyledTableCell>\r\n                                    {!isSelectionMode &&\r\n                                        <StyledTableCell align=\"right\"> </StyledTableCell>\r\n                                    }\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {questions?.map((row, index) => (\r\n                                    <StyledTableRow style={isAlreadySelected(row.id) ? alreadySelectedStyle : null} onClick={() => GoToQuestionDetailsHandler(row.id)} key={row.id}>\r\n                                        {isSelectionMode &&\r\n                                            <StyledTableCell onClick={(e) => e.stopPropagation()} component=\"th\" scope=\"row\">\r\n                                                <Checkbox\r\n                                                    disabled={isAlreadySelected(row.id)}\r\n                                                    color=\"primary\"\r\n                                                    checked={Boolean(row.isSelected)}\r\n                                                    onChange={(e) => onCheckHandler(index, e.target.checked)}\r\n                                                />\r\n                                            </StyledTableCell>\r\n                                        }\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.questionText}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{`${row.instructor.degree}, ${row.instructorName}`}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.created_at}</StyledTableCell>\r\n                                        {!isSelectionMode &&\r\n                                            <StyledTableCell onClick={(e) => handleClick(e, row.id)} align=\"right\">\r\n                                                <SettingsIcon fontSize='medium' color='secondary' />\r\n                                            </StyledTableCell>\r\n                                        }\r\n\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n\r\n            {!questions?.length ?\r\n                <NoContentComponent text=\"No Questions at the moment\" />\r\n                :\r\n                null\r\n            }\r\n\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                autoFocus={false}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={editQuestionHandler}>\r\n                    <EditIcon />\r\n                    Edit\r\n                </MenuItem>\r\n                <MenuItem color='error' onClick={deleteQuestionHandler}>\r\n                    <DeleteForeverIcon color='error' />\r\n                    Delete\r\n                </MenuItem>\r\n            </Menu>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import { Switch } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { Formik } from 'formik';\nimport CardComponent from '../../../../Components/CardComponent/CardComponent';\nimport { matchPath } from 'react-router-dom';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState } from 'react';\nimport { ExamServices } from '../../../../apis/Services/ExamService';\nimport HandleErrors from '../../../../hooks/handleErrors';\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\n\nconst SetExamOptions = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const [examId, setExamId] = useState(null)\n\n    /** Stuff for editing mode */\n    const isEditMode = Boolean(location.state?.exam)\n    const examOldData = location.state?.exam\n    const oldExamConfig = examOldData?.config\n\n    useEffect(() => {\n        const match = matchPath(history.location.pathname, {\n            path: '/exams/:examId/set-options'\n        })\n        setExamId(match.params.examId)\n    }, [history.location.pathname])\n\n    const setOptionsHandler = (values, actions) => {\n        let submittedValues = { ...values }\n        submittedValues['gradingMethod'] = submittedValues['gradingMethod'] ? 'auto' : 'manual'\n\n        if (isEditMode && oldExamConfig) {\n            ExamServices.editExamOptions(examId, submittedValues)\n                .then(res => {\n                    showSuccessMsg('Exam options has been edited!')\n                    history.push(`/exams/${examOldData?.id}/add-questions`, { exam: examOldData })\n                })\n                .catch(err => HandleErrors(err))\n            return\n        }\n\n        ExamServices.setExamOptions(examId, submittedValues)\n            .then(res => {\n                showSuccessMsg('Exam options has been saved!')\n                history.push(`/exams/${examId}/add-questions`)\n            })\n            .catch(err => HandleErrors(err))\n    }\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className=\"col-md-8 col-12\">\n                <CardComponent title={!isEditMode ? 'Create Exam: options' : 'Edit Exam: options'}>\n                    <Formik\n                        initialValues={{\n                            faceRecognition: oldExamConfig ? Boolean(oldExamConfig?.faceRecognition) : false,\n                            faceDetection: oldExamConfig ? Boolean(oldExamConfig?.faceDetection) : false,\n                            questionsRandomOrder: oldExamConfig ? Boolean(oldExamConfig?.questionsRandomOrder) : false,\n                            plagiarismCheck: oldExamConfig ? Boolean(oldExamConfig?.plagiarismCheck) : false,\n                            disableSwitchBrowser: oldExamConfig ? Boolean(oldExamConfig?.disableSwitchBrowser) : false,\n                            gradingMethod: oldExamConfig ? Boolean(oldExamConfig?.gradingMethod === 'auto') : true,\n                        }}\n                        onSubmit={setOptionsHandler}\n                    >\n                        {props => (\n                            <form className='m-5' onSubmit={props.handleSubmit}>\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('questionsRandomOrder', !props.values.questionsRandomOrder)}>Questions Random Order</label>\n                                    <Switch\n                                        name='questionsRandomOrder'\n                                        checked={props.values.questionsRandomOrder}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('disableSwitchBrowser', !props.values.disableSwitchBrowser)}>Disable Switch Browser</label>\n                                    <Switch\n                                        name='disableSwitchBrowser'\n                                        checked={props.values.disableSwitchBrowser}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('plagiarismCheck', !props.values.plagiarismCheck)}>Plagiarism Check</label>\n                                    <Switch\n                                        name='plagiarismCheck'\n                                        checked={props.values.plagiarismCheck}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceDetection', !props.values.faceDetection)}>Face Detection</label>\n                                    <Switch\n                                        name='faceDetection'\n                                        checked={props.values.faceDetection}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('gradingMethod', !props.values.gradingMethod)}>Automatic Grading</label>\n                                    <Switch\n                                        name='gradingMethod'\n                                        checked={props.values.gradingMethod}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n\n                                <div className='mt-4'>\n                                    <label onClick={() => props.setFieldValue('faceRecognition', !props.values.faceRecognition)}>Face Recognition</label>\n                                    <Switch\n                                        name='faceRecognition'\n                                        checked={props.values.faceRecognition}\n                                        onChange={props.handleChange}\n                                        color='primary'\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Next</button>\n                            </form>\n                        )}\n                    </Formik>\n                </CardComponent>\n            </div>\n        </div>\n    )\n}\n\nexport default SetExamOptions\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\nconst DangerLabel = styled(Label)`\r\n    color: ${Colors.danger};\r\n`\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst MCQ = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const MCQSCHEMA = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n        choice1: yup.string().required('This is a required field'),\r\n        choice2: yup.string().required('This is a required field'),\r\n        choice3: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createMcqQuestion({\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                correctAnswer: values.correctAnswer,\r\n                answers: [values.correctAnswer, values.choice1, values.choice2, values.choice3]\r\n            })\r\n\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n\r\n    }\r\n\r\n    const mcqChoices = initValues?.options?.filter(item => !item.isCorrect)\r\n    const mcqCorrectAnswer = initValues?.options?.find(item => item.isCorrect)\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: mcqCorrectAnswer?.value || '',\r\n            choice1: mcqChoices?.[0].value || '',\r\n            choice2: mcqChoices?.[1].value || '',\r\n            choice3: mcqChoices?.[2].value || ''\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={MCQSCHEMA}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Correct Option</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Correct Answer....'\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #1 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice1' className='mb-2'>Wrong Option 1</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice1\"\r\n                        id=\"choice1\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice1}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice1 && props.errors.choice1}\r\n                        error={props.touched.choice1 && Boolean(props.errors.choice1)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #2 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice2' className='mb-2'>Wrong Option 2</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice2\"\r\n                        id=\"choice2\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice2}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice2 && props.errors.choice2}\r\n                        error={props.touched.choice2 && Boolean(props.errors.choice2)}\r\n                    />\r\n                </div>\r\n\r\n                {/* Options #3 */}\r\n                <div className='mt-4 text-start'>\r\n                    <DangerLabel htmlFor='choice3' className='mb-2'>Wrong Option 3</DangerLabel>\r\n                    <TextField\r\n                        name=\"choice3\"\r\n                        id=\"choice3\"\r\n                        placeholder='Wrong Answer....'\r\n                        fullWidth\r\n                        value={props.values.choice3}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.choice3 && props.errors.choice3}\r\n                        error={props.touched.choice3 && Boolean(props.errors.choice3)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">{!initValues? 'ADD':'EDIT'}</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default MCQ;\r\n","import { TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport * as yup from 'yup';\r\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\r\n\r\nconst Label = styled.label`\r\n    display: block;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`\r\n\r\n\r\nconst SuccessLabel = styled(Label)`\r\n    color: ${Colors.success};\r\n`\r\n\r\nconst Essay = ({ initValues, getQuestionCreationRequest = () => { } }) => {\r\n    const EssaySchema = yup.object().shape({\r\n        questionText: yup.string().required('This is a required field'),\r\n        correctAnswer: yup.string().required('This is a required field'),\r\n    });\r\n    const submitQuestionHandler = (values) => {\r\n        if (!initValues) {\r\n            let creationRequest = QuestionServices.createEssayQuestion({\r\n                questionText: values?.questionText,\r\n                answers: [values?.correctAnswer]\r\n            })\r\n            getQuestionCreationRequest(creationRequest)\r\n        }\r\n        //EDIT MODE\r\n        else {\r\n            let editRequest = QuestionServices.editQuestion(initValues?.id, {\r\n                questionText: values.questionText,\r\n                answers: [values.correctAnswer],\r\n            })\r\n            // pass the request outside the component\r\n            getQuestionCreationRequest(editRequest)\r\n        }\r\n    }\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            questionText: initValues?.questionText || '',\r\n            correctAnswer: initValues?.options[0]?.value || '',\r\n\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={EssaySchema}\r\n        onSubmit={submitQuestionHandler}\r\n    >\r\n        {props => (\r\n            <form className='m-5' onSubmit={props.handleSubmit}>\r\n                {/* Question Header */}\r\n                <div className='mt-4 text-start'>\r\n                    <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\r\n                    <TextField\r\n                        name=\"questionText\"\r\n                        id=\"questionText\"\r\n                        placeholder='Question on your mind....'\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        value={props.values.questionText}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        helperText={props.touched.questionText && props.errors.questionText}\r\n                        error={props.touched.questionText && Boolean(props.errors.questionText)}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Correct Answer */}\r\n                <div className='mt-4 text-start'>\r\n                    <SuccessLabel htmlFor='correctAnswer' className='mb-2'>Model Answer</SuccessLabel>\r\n                    <TextField\r\n                        name=\"correctAnswer\"\r\n                        id=\"correctAnswer\"\r\n                        placeholder='Model Answer....'\r\n                        multiline\r\n                        rows={9}\r\n                        fullWidth\r\n                        value={props.values.correctAnswer}\r\n                        onChange={props.handleChange}\r\n                        onBlur={props.handleBlur}\r\n                        variant=\"filled\"\r\n                        helperText={props.touched.correctAnswer && props.errors.correctAnswer}\r\n                        error={props.touched.correctAnswer && Boolean(props.errors.correctAnswer)}\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">ADD</button>\r\n            </form>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default Essay;\r\n","/**\r\n * params order is not mandatory\r\n * @param {Number} first \r\n * @param {Number} second \r\n * @returns a random number between two numbers\r\n */\r\nconst getRandomValue = (first, second) => {\r\n    let max = Math.max(first, second)\r\n    let min = Math.min(first, second)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst useRandomValue = () => {\r\n    return getRandomValue\r\n}\r\nexport default useRandomValue\r\n","import { TextField, Typography } from '@mui/material';\nimport { Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../../../constants/Colors';\nimport * as yup from 'yup';\nimport { QuestionServices } from '../../../../apis/Services/QuestionService';\nimport mexp from 'math-expression-evaluator'\nimport useRandomValue from '../../../../hooks/useRandomValue';\nimport HandleErrors from '../../../../hooks/handleErrors';\n\nconst VAR_REGEX = /\\[[a-z A-Z]+\\]/g\nconst BRACKETS_REGEX = /\\[|\\]/g\n\nconst Label = styled.label`\n    display: block;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000;\n`\nconst Formula = ({ initValues, getQuestionCreationRequest = () => { } }) => {\n    const EssaySchema = yup.object().shape({\n        questionText: yup.string().required('This is a required field'),\n        formula: yup.string().required('This is a required field'),\n        numberOfQuestions: yup.number().required().max(50).min(1),\n    });\n\n    const isEditMode = Boolean(initValues)\n\n    const getRandomValue = useRandomValue();\n    const [questionFormValue, setQuestionFormValue] = useState(null)\n    const submitQuestionHandler = (values) => {\n        setQuestionFormValue(values)\n\n        let numberOfGeneratedQuestion = values.numberOfQuestions\n        let finalQuestionValue = []\n\n        // setting Variables\n        while (numberOfGeneratedQuestion--) {\n            let variablesAttr = []\n            vars.forEach(element => {\n                let generatedAttempt = {}\n                generatedAttempt['var'] = element[0]\n                generatedAttempt['value'] = getRandomValue(Number(element[1]), Number(element[2]))\n                variablesAttr.push(generatedAttempt)\n            });\n            finalQuestionValue.push({ variables: variablesAttr })\n        }\n\n        // setting final value\n        finalQuestionValue = finalQuestionValue.map(item => {\n            let formula = values.formula + ''\n            let vars = item.variables\n            vars.forEach(element => {\n                formula = formula.replaceAll(element.var, element.value)\n            })\n            return { ...item, finalValue: mexp.eval(formula) }\n        })\n        setGeneratedQuestions(finalQuestionValue)\n    }\n\n    const [vars, setVars] = useState([])\n    const [uniqueTokensList, setUniqueTokensList] = useState([])\n    const [questionText, setQuestionText] = useState('')\n\n    /** Creating tokens */\n    const generateVars = () => {\n        let tokenList = [...questionText?.matchAll(VAR_REGEX)]\n        tokenList = tokenList?.map(item => item[0])\n        tokenList = tokenList?.map(item => {\n            let editedToken = item + ''\n            editedToken = editedToken.replace(BRACKETS_REGEX, '')\n            return editedToken\n        })\n        const uniqueTokens = Array.from(new Set(tokenList))\n        setUniqueTokensList(uniqueTokens)\n    }\n    useEffect(() => {\n        generateVars()\n    }, [questionText])\n\n    /** ONLY trigger unique tokens list changes  */\n    const [oldVarList, setOldVarList] = useState(null)\n\n    useEffect(() => {\n        let editedList = uniqueTokensList?.map(item => { return [item, '', ''] })\n        if (oldVarList) {\n            let varObject = {};\n            oldVarList.forEach(element => {\n                varObject[element[0]] = [element[1], element[2]]\n            });\n            editedList.forEach(element => {\n                if (varObject?.[element[0]]) {\n                    element[1] = varObject?.[element[0]][0]\n                    element[2] = varObject?.[element[0]][1]\n                }\n            })\n        }\n        setVars(editedList)\n        setOldVarList(editedList)\n        setGeneratedQuestions(null)\n    }, [uniqueTokensList])\n\n    /** Trigger when get an init value */\n    useEffect(() => {\n        if (!initValues) return\n        setQuestionText(initValues?.questionText)\n\n        let initVarList = initValues?.variables?.map(item => [item['variable'], item['startVal'], item['endVal']])\n        setOldVarList(initVarList)\n    }, [initValues])\n\n    const onChangeMin = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][1] = value\n            return newVars\n        })\n    }\n\n    const onChangeMax = (value, index) => {\n        setVars(prevState => {\n            let newVars = [...prevState];\n            newVars[index][2] = value\n            return newVars\n        })\n    }\n\n    const [generatedQuestions, setGeneratedQuestions] = useState(null)\n\n    const createQuestion = () => {\n        let generatedFormulas = generatedQuestions?.map(item => {\n            let questionText = questionFormValue?.questionText\n            let questionTextAfterGeneration = questionText\n            item?.variables?.forEach(element => {\n                questionTextAfterGeneration = questionTextAfterGeneration?.replaceAll(`[${element.var}]`, element.value)\n            });\n\n            return [questionTextAfterGeneration, item.finalValue]\n        })\n\n        if (!isEditMode) {\n            let creationRequest = QuestionServices.createFormulaQuestion({\n                questionText: questionFormValue?.questionText,\n                formula: questionFormValue?.formula,\n                variables: vars,\n                formulas: generatedFormulas\n            })\n            getQuestionCreationRequest(creationRequest)\n        }\n        //EDIT MODE\n        else {\n            let editRequest = QuestionServices.editFormulaQuestion(initValues?.id, {\n                questionText: questionFormValue?.questionText,\n                formula: questionFormValue?.formula,\n                variables: vars,\n                formulas: generatedFormulas\n            })\n            getQuestionCreationRequest(editRequest)\n        }\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    questionText: initValues?.questionText || '',\n                    correctAnswer: initValues?.correctAnswer || '',\n                    formula: initValues?.formula?.formula || '',\n                    numberOfQuestions: initValues?.formula_questions?.length || ''\n                }}\n                enableReinitialize={true}\n                validationSchema={EssaySchema}\n                onSubmit={submitQuestionHandler}\n            >\n                {props => (\n                    <form className='m-5' onSubmit={props.handleSubmit}>\n                        {/* Question Header */}\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='questionText' className='mb-2'>Question Text</Label>\n                            <TextField\n                                name=\"questionText\"\n                                id=\"questionText\"\n                                placeholder='Question on your mind....'\n                                multiline\n                                rows={4}\n                                fullWidth\n                                value={props.values.questionText}\n                                onChange={(e) => { props.handleChange(e); setQuestionText(e.target.value) }}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.questionText && props.errors.questionText}\n                                error={props.touched.questionText && Boolean(props.errors.questionText)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='formula' className='mb-2'>Formula</Label>\n                            <TextField\n                                name=\"formula\"\n                                id=\"formula\"\n                                placeholder='Final Answer Formula'\n                                fullWidth\n                                value={props.values.formula}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.formula && props.errors.formula}\n                                error={props.touched.formula && Boolean(props.errors.formula)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        {vars?.map((variable, index) => (\n                            <div key={index} className='d-flex justify-content-between align-items-center mt-5'>\n                                <Label style={{ color: Colors.primary }}>{`${variable[0]} :`}</Label>\n                                <TextField\n                                    name=\"min\"\n                                    label=\"Min Value\"\n                                    placeholder='Variable minimum value'\n                                    value={variable[1]}\n                                    onChange={(e) => onChangeMin(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                                <TextField\n                                    name=\"max\"\n                                    label=\"Max Value\"\n                                    placeholder='Variable maximum value'\n                                    value={variable[2]}\n                                    onChange={(e) => onChangeMax(e.target.value, index)}\n                                    variant=\"filled\"\n                                />\n                            </div>\n                        ))}\n\n                        <div className='mt-4 text-start'>\n                            <Label htmlFor='numberOfQuestions' className='mb-2'>Number of random questions</Label>\n                            <TextField\n                                name=\"numberOfQuestions\"\n                                id=\"numberOfQuestions\"\n                                type={'number'}\n                                placeholder='Max: 50'\n                                fullWidth\n                                value={props.values.numberOfQuestions}\n                                onChange={props.handleChange}\n                                onBlur={props.handleBlur}\n                                helperText={props.touched.numberOfQuestions && props.errors.numberOfQuestions}\n                                error={props.touched.numberOfQuestions && Boolean(props.errors.numberOfQuestions)}\n                                variant=\"filled\"\n                            />\n                        </div>\n\n                        <button className=\"btn btn-primary mx-auto mt-4\" type=\"submit\">Generate</button>\n\n                        {generatedQuestions ?\n                            <div className='mt-4'>\n                                <Typography\n                                    variant='h5'\n                                    color='primary'\n                                    style={{ textDecorationLine: 'underline' }}\n                                >\n                                    Generated Questions\n                                </Typography>\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                        <tr>\n                                            {uniqueTokensList?.map((item, index) => (\n                                                <th key={index + ''} scope=\"col\">{item}</th>\n                                            ))\n                                            }\n                                            <th scope=\"col\">{'Final Value'}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {generatedQuestions?.map((item, index) => (\n                                            <tr key={index + ''}>\n                                                {\n                                                    item?.variables?.map((item, index) => (\n                                                        <td key={index + ''}>{item.value}</td>\n                                                    ))\n                                                }\n\n                                                <th>{item?.finalValue}</th>\n                                            </tr>\n                                        ))\n                                        }\n                                    </tbody>\n                                </table >\n                            </div>\n                            :\n                            null\n                        }\n                    </form>\n                )}\n            </Formik>\n            <button disabled={!generatedQuestions} onClick={createQuestion} className=\"btn btn-primary mx-auto mt-4\" type=\"button\">\n                {!isEditMode ? 'ADD' : 'Edit'}\n            </button>\n        </>\n    )\n\n};\n\nexport default Formula;\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MCQ from './QuestionTypes/MCQ';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons/lib/icons';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveAQuestion } from '../../../redux/actions/ExamAction';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport Essay from './QuestionTypes/Essay';\r\nimport Formula from './QuestionTypes/Formula';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\n\r\n\r\nconst AddQuestionScreen = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n\r\n    /** Stuff for editing mode */\r\n    const isEditMode = Boolean(location.state?.question)\r\n    const oldQuestion = location.state?.question\r\n\r\n    /** get question details */\r\n    const [oldQuestionDetails, setOldQuestionDetails] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!oldQuestion?.id) return\r\n        QuestionServices.getQuestionDetails(oldQuestion?.id)\r\n            .then(res => {\r\n                setOldQuestionDetails(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [oldQuestion?.id])\r\n\r\n    const [questionTypes, setQuestionTypes] = useState(null);\r\n    const getQuestionTypes = () => {\r\n        let typesObject = QuestionTypes\r\n        let typeList = []\r\n        Object.keys(typesObject).forEach(key => {\r\n            if (QuestionTypes[key] === QuestionTypes.GROUP)\r\n                return;\r\n\r\n            typeList.push({ id: key, value: typesObject[key] })\r\n        })\r\n        setQuestionTypes(typeList)\r\n    }\r\n    useEffect(() => {\r\n        getQuestionTypes();\r\n    }, []);\r\n\r\n\r\n    const [questionType, setQuestionType] = useState(oldQuestion?.type || '');\r\n    const questionTypeSelectionMenuMarkup = (\r\n        <div className='w-50 mx-auto'>\r\n            <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                fullWidth\r\n                label=\"Question Type\"\r\n                value={questionType}\r\n                onChange={(event) => setQuestionType(event.target.value)}\r\n                disabled={isEditMode}\r\n            >\r\n                {questionTypes?.map((type) => (\r\n                    <MenuItem key={type.id} value={type.value}>\r\n                        {type.value}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n\r\n    const createQuestionHandler = (request) => {\r\n        let addedQuestion;\r\n        request\r\n            .then(res => {\r\n                addedQuestion = res\r\n\r\n                let isFromExamCreation = location?.state?.fromExamCreation\r\n                let isFromGroup = location?.state?.isFromGroup\r\n                let groupId = location?.state?.groupId\r\n\r\n                if (groupId) {\r\n                    QuestionServices.getQuestionDetails(groupId)\r\n                        .then(res => {\r\n                            let returnedQuestion = res?.question\r\n                            let groupReturnedQuestions = res?.question?.questions\r\n                            return QuestionServices.editGroupQuestion(groupId, {\r\n                                questionText: returnedQuestion?.questionText,\r\n                                questions: [...groupReturnedQuestions?.map(item => item.id), addedQuestion?.id]\r\n                            })\r\n                        })\r\n                        .then(res => {\r\n                            dispatch(saveAQuestion([addedQuestion], groupId))\r\n                            showSuccessMsg(\"Request done successfully\")\r\n                            history.goBack()\r\n                        })\r\n                        .catch(err => HandleErrors(err))\r\n                }\r\n                else {\r\n                    if(isFromExamCreation){\r\n                        dispatch(saveAQuestion([addedQuestion], groupId))\r\n                    }\r\n                    showSuccessMsg(\"Request done successfully\")\r\n                    history.goBack()\r\n                }\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return <div className=\"row justify-content-center text-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            <CardComponent title={!isEditMode ? 'Add Question' : 'Edit Question'}>\r\n                <div className='p-4'>\r\n                    {questionTypes && questionTypeSelectionMenuMarkup}\r\n\r\n                    {!questionType &&\r\n                        <div className='d-flex flex-row justify-content-center align-items-center mt-5'>\r\n                            <ExclamationCircleOutlined size={36} style={{ color: Colors.danger, marginInlineEnd: '.5rem' }} />\r\n                            <h6 className='text-danger m-0'>Please Choose Question Type</h6>\r\n                        </div>\r\n                    }\r\n\r\n                    {questionType === QuestionTypes.MCQ &&\r\n                        <div>\r\n                            <MCQ\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.MCQ ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === QuestionTypes.ESSAY &&\r\n                        <div>\r\n                            <Essay\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.ESSAY ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {questionType === QuestionTypes.FORMULA &&\r\n                        <div>\r\n                            <Formula\r\n                                initValues={oldQuestionDetails?.type === QuestionTypes.FORMULA ? oldQuestionDetails : null}\r\n                                getQuestionCreationRequest={createQuestionHandler}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </CardComponent>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default AddQuestionScreen;\r\n","import React from 'react'\r\nimport { Button, Card, CardContent, CardHeader, colors, FormControl, FormControlLabel, Grid, IconButton, Radio, RadioGroup, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\r\nimport { QuestionTypes } from '../../constants/QuestionTypes';\r\n\r\nconst McqAnswer = ({\r\n    questionText,\r\n    choices,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n    const correctAnswer = choices?.find(item => item.isCorrect)\r\n    const formatedAnswer = (answer) => {\r\n        return {\r\n            id: answer?.id,\r\n            displayText: (answer?.option?.value || answer?.value)\r\n        }\r\n    }\r\n\r\n    const isCorrectStudentAnswer = !((questionMark / 2) > studentMark)\r\n    return (\r\n        <BorderdQuestionController\r\n            hasNoDelete\r\n            questionType={QuestionTypes.MCQ}\r\n        >\r\n            <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n                {studentAnswer ?\r\n                    <CardHeader\r\n                        action={\r\n                            !isMarked ?\r\n                                <div>\r\n                                    <IconButton onClick={markAsWrong} size='large'>\r\n                                        <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={markAsRight} size='large'>\r\n                                        <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                    </IconButton>\r\n                                </div>\r\n                                :\r\n                                <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                    <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                        {studentMark.toFixed(2)}\r\n                                    </Typography>\r\n                                    <Typography variant='h5'>\r\n                                        {`/${questionMark.toFixed(2)}`}\r\n                                    </Typography>\r\n                                </div>\r\n                        }\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <CardContent>\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                        {questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent>\r\n                    <form >\r\n                        <FormControl>\r\n                            <RadioGroup\r\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                defaultValue={formatedAnswer(studentAnswer)?.id || formatedAnswer(correctAnswer)?.id}\r\n                                name=\"radio-buttons-group\"\r\n                            >\r\n                                {choices?.map(choice => (\r\n                                    formatedAnswer(choice).id === formatedAnswer(correctAnswer).id ?\r\n                                        <div key={choice.id} className='d-flex align-items-center py-3 text-success' >\r\n                                            <FormControlLabel\r\n                                                key={formatedAnswer(choice).id}\r\n                                                value={formatedAnswer(choice).id}\r\n                                                disabled\r\n                                                control={<Radio />}\r\n                                                label={formatedAnswer(choice).displayText}\r\n                                            />\r\n                                            <CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                                        </div>\r\n                                        :\r\n                                        <div key={choice.id} className='d-flex align-items-center py-3 text-danger' >\r\n                                            <FormControlLabel\r\n                                                key={formatedAnswer(choice).id}\r\n                                                disabled\r\n                                                value={formatedAnswer(choice).id}\r\n                                                control={<Radio />}\r\n                                                label={formatedAnswer(choice).displayText}\r\n                                            />\r\n                                            {(!studentAnswer || (formatedAnswer(studentAnswer).id === formatedAnswer(choice).id)) ?\r\n                                                <CancelOutlinedIcon fontSize='large' color='error' />\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                        </div>\r\n                                ))\r\n                                }\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </form>\r\n                </CardContent>\r\n                {isMarked ?\r\n                    <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '18%' }}>\r\n                        {(isCorrectStudentAnswer) ?\r\n                            <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                            :\r\n                            <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </BorderdQuestionController>\r\n    )\r\n}\r\n\r\nexport default McqAnswer","import React from 'react'\r\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\r\nimport { QuestionTypes } from '../../constants/QuestionTypes';\r\n\r\nconst EssayAnswer = ({\r\n    questionText,\r\n    correctAnswer,\r\n    studentAnswer,\r\n    markAsRight = () => { },\r\n    markAsWrong = () => { },\r\n    isMarked,\r\n    questionMark,\r\n    studentMark\r\n}) => {\r\n\r\n    const isCorrectStudentAnswer = !((questionMark / 2) > studentMark)\r\n    return (\r\n        <BorderdQuestionController\r\n            hasNoDelete\r\n            questionType={QuestionTypes.ESSAY}\r\n        >\r\n            <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n                {studentAnswer ?\r\n                    <CardHeader\r\n                        action={\r\n                            !isMarked ?\r\n                                <div>\r\n                                    <IconButton onClick={markAsWrong} size='large'>\r\n                                        <CancelOutlinedIcon fontSize='large' color=\"error\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={markAsRight} size='large'>\r\n                                        <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\r\n                                    </IconButton>\r\n                                </div>\r\n                                :\r\n                                <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\r\n                                    <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\r\n                                        {studentMark.toFixed(2)}\r\n                                    </Typography>\r\n                                    <Typography variant='h5'>\r\n                                        {`/${questionMark.toFixed(2)}`}\r\n                                    </Typography>\r\n                                </div>\r\n                        }\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <CardContent>\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                        {questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* Essay Content */}\r\n                <CardContent className=''>\r\n                    {studentAnswer ?\r\n                        <Typography sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Student Answer:</Typography>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Typography className={studentAnswer ? '' : 'm-4'} variant={studentAnswer ? '' : 'h5'}>\r\n                        {studentAnswer ? studentAnswer?.value : correctAnswer?.value}\r\n                        {!studentAnswer ?\r\n                            < CheckCircleOutlineIcon fontSize='large' color='success' />\r\n                            :\r\n                            null\r\n                        }\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* MODEL ANSWER */}\r\n                {studentAnswer ?\r\n                    <CardContent className=''>\r\n                        <Typography color='green' sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Model Answer:</Typography>\r\n                        <Typography color='green'>{correctAnswer?.value}</Typography>\r\n                    </CardContent>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {isMarked ?\r\n                    <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '25%' }}>\r\n                        {(isCorrectStudentAnswer) ?\r\n                            <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\r\n                            :\r\n                            <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\r\n                        }\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n\r\n            </Card>\r\n        </BorderdQuestionController>\r\n    )\r\n}\r\n\r\nexport default EssayAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\n\nconst ShortAnswer = ({\n    questionText,\n    correctAnswer,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark\n}) => {\n    const isCorrectStudentAnswer = questionMark === studentMark\n\n    return (\n        <Card className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\n            {studentAnswer ?\n                <CardHeader\n                    action={\n                        !isMarked ?\n                            <div>\n                                <IconButton onClick={markAsWrong} size='large'>\n                                    <CancelOutlinedIcon fontSize='large' color=\"error\" />\n                                </IconButton>\n                                <IconButton onClick={markAsRight} size='large'>\n                                    <CheckCircleOutlineIcon fontSize='large' color=\"success\" />\n                                </IconButton>\n                            </div>\n                            :\n                            <div className={`me-3 d-flex shadow-sm p-2 border ${isCorrectStudentAnswer ? 'border-success' : 'border-danger'}`}>\n                                <Typography variant='h5' color={isCorrectStudentAnswer ? 'primary' : 'error'}>\n                                    {studentMark.toFixed(2)}\n                                </Typography>\n                                <Typography variant='h5'>\n                                    {`/${questionMark.toFixed(2)}`}\n                                </Typography>\n                            </div>\n                    }\n                />\n                :\n                null\n            }\n\n            <CardContent>\n                {/* Question Text */}\n                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\n                    {questionText}\n                </Typography>\n            </CardContent>\n\n            {/* Essay Content */}\n            <CardContent className=''>\n                {studentAnswer ?\n                    <Typography sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Student Answer:</Typography>\n                    :\n                    null\n                }\n                <Typography className={studentAnswer ? '' : 'm-4'} variant={studentAnswer ? '' : 'h5'}>\n                    {studentAnswer ? studentAnswer?.value : correctAnswer}\n                    {!studentAnswer ?\n                        < CheckCircleOutlineIcon fontSize='large' color='success' />\n                        :\n                        null\n                    }\n                </Typography>\n            </CardContent>\n\n            {/* MODEL ANSWER */}\n            {studentAnswer ?\n                <CardContent className=''>\n                    <Typography color='green' sx={{ fontWeight: 'bold' }} style={{ textDecoration: 'underline' }}>Model Answer:</Typography>\n                    <Typography color='green'>{correctAnswer}</Typography>\n                </CardContent>\n                :\n                null\n            }\n\n            {isMarked ?\n                <div className='position-absolute opacity-25' style={{ right: '10%', bottom: '25%' }}>\n                    {(isCorrectStudentAnswer) ?\n                        <CheckCircleOutlineIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"success\" />\n                        :\n                        <CancelOutlinedIcon fontSize='large' style={{ transform: 'scale(6)' }} color=\"error\" />\n                    }\n                </div>\n                :\n                null\n            }\n\n        </Card>\n    )\n}\n\nexport default ShortAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport ShortAnswer from './ShortAnswer';\nimport BorderdQuestionController from '../QuestionComponents/BorderdQuestionController';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst FormulaAnswer = ({\n    formula_questions,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark,\n    teacherMode,\n    questionHeader\n}) => {\n\n    return (\n        <BorderdQuestionController\n            questionTitle={questionHeader}\n            questionType={QuestionTypes.FORMULA}\n            hasNoDelete\n        >\n            {formula_questions?.map(question => (\n                <ShortAnswer\n                    questionText={question?.formulaText}\n                    correctAnswer={question?.value}\n                    studentAnswer={studentAnswer}\n                    markAsRight={markAsRight}\n                    markAsWrong={markAsWrong}\n                    isMarked={isMarked}\n                    questionMark={questionMark}\n                    studentMark={studentMark}\n                />\n            ))\n            }\n        </BorderdQuestionController>\n    )\n}\n\nexport default FormulaAnswer","import React from 'react'\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@mui/material'\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport ShortAnswer from './ShortAnswer';\nimport BorderdGroupQuestion from '../QuestionComponents/BorderdGroupQuestion';\nimport FormulaAnswer from './FormulaAnswer';\nimport EssayAnswer from './EssayAnswer';\nimport McqAnswer from './McqAnswer';\nimport { QuestionTypes } from '../../constants/QuestionTypes';\n\nconst GroupAnswer = ({\n    questions,\n    studentAnswer,\n    markAsRight = () => { },\n    markAsWrong = () => { },\n    isMarked,\n    questionMark,\n    studentMark,\n    teacherMode,\n    questionHeader\n}) => {\n    const specificQuestionMark = (questionMark / (questions?.length))\n    return (\n        <div className=\"shadow\">\n            <BorderdGroupQuestion\n                hasNoDelete\n                questionTitle={questionHeader}\n                questionsMarkup={\n                    questions?.map(subQuestion => {\n                        if (subQuestion?.type === QuestionTypes.MCQ) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <McqAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        questionText={subQuestion?.questionText}\n                                        choices={subQuestion?.options}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                    />\n                                </div>)\n                        }\n                        else if (subQuestion?.type === QuestionTypes.ESSAY) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <EssayAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        questionText={subQuestion?.questionText}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                        correctAnswer={subQuestion?.options[0]}\n                                    />\n                                </div>)\n                        }\n                        else if (subQuestion?.type === QuestionTypes.FORMULA) {\n                            return (\n                                <div key={subQuestion?.id} className='m-4'>\n                                    <FormulaAnswer\n                                        markAsRight={() => markAsRight(subQuestion?.id, specificQuestionMark)}\n                                        markAsWrong={() => markAsWrong(subQuestion?.id)}\n                                        studentAnswer={subQuestion?.answers ? { id: subQuestion?.answers?.option_id, value: subQuestion?.answers?.studentAnswer } : null}\n                                        formula_questions={subQuestion?.questions}\n                                        teacherMode\n                                        questionHeader={subQuestion?.questionText}\n                                        studentMark={subQuestion?.answers?.questionMark}\n                                        questionMark={specificQuestionMark}\n                                        isMarked={subQuestion?.answers?.isMarked}\n                                        correctAnswer={subQuestion?.formula_questions?.value}\n                                    />\n                                </div>)\n                        }\n                    })\n                }\n            />\n        </div>\n    )\n}\n\nexport default GroupAnswer","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { QuestionServices } from '../../../apis/Services/QuestionService';\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer';\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport FormulaAnswer from '../../../Components/AnsweredQuestion/FormulaAnswer';\r\nimport GroupAnswer from '../../../Components/AnsweredQuestion/GroupAnswer';\r\n\r\nconst QuestionViewScreen = () => {\r\n    const { questionId } = useParams()\r\n\r\n    const [question, setQuestion] = useState(null)\r\n    useEffect(() => {\r\n        QuestionServices.getQuestionDetails(questionId)\r\n            .then(res => {\r\n                setQuestion(res?.question)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [questionId])\r\n\r\n    let QuestionMarkup = () => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n            return (\r\n                <EssayAnswer questionText={question?.questionText} correctAnswer={question?.options[0]} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            return (\r\n                <McqAnswer questionText={question?.questionText} choices={question?.options} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.FORMULA) {\r\n            return (\r\n                <FormulaAnswer formula_questions={question?.formula_questions} />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.GROUP) {\r\n            return (\r\n                <GroupAnswer questions={question?.questions} teacherMode questionHeader={question?.questionText} />\r\n            )\r\n        }\r\n\r\n    }\r\n    return <div className=\"row justify-content-center my-5\">\r\n        <div className=\"col-md-8 col-12\">\r\n            {QuestionMarkup()}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default QuestionViewScreen;\r\n","import _axios from \"../axios-instance\";\n\nexport class MarkExamServices {\n    static getAllStudentsAnswers(examId) {\n        return _axios.get(`exams/${examId}/all-answers`)\n    }\n\n    static getSpecificStudentAnswers(examId, studentId) {\n        return _axios.get(`exams/${examId}/all-answers/answer`, {\n            params: {\n                student_id: studentId\n            }\n        })\n    }\n\n    static manualMark({ studentId, examId, questionId, questionMark }) {\n        return _axios.post(`exams/manual`, { studentId, examId, questionId, questionMark })\n    }\n\n    static markAllAutomatic(examId) {\n        return _axios.post(`exams/mark/${examId}`)\n    }\n\n    static markSpecificStudentAutomatic(examId, studentId) {\n        return _axios.post(`exams/mark/${examId}/${studentId}`)\n    }\n\n    static getPlagiarismResults(examId) {\n        return _axios.post(`/plagiarism`, { examId })\n    }\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ExamServices } from '../../../../apis/Services/ExamService'\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../../Components/CardComponent/CardComponent'\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport DesktopAccessDisabledIcon from '@mui/icons-material/DesktopAccessDisabled';\r\nimport FactCheckIcon from '@mui/icons-material/FactCheck';\r\nimport SupervisedUserCircleIcon from '@mui/icons-material/SupervisedUserCircle';\r\nimport PhotoCameraFrontIcon from '@mui/icons-material/PhotoCameraFront';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\nimport FormulaAnswer from '../../../../Components/AnsweredQuestion/FormulaAnswer'\r\nimport GroupAnswer from '../../../../Components/AnsweredQuestion/GroupAnswer'\r\n\r\n\r\n\r\n\r\nconst AntiCheatingTimeline = ({ examConfig }) => {\r\n    const isRandom = examConfig?.questionsRandomOrder\r\n    const isDisableSwitch = examConfig?.disableSwitchBrowser\r\n    const isplagiarism = examConfig?.plagiarismCheck\r\n    const isFaceDetection = examConfig?.faceDetection\r\n    const isFaceVerify = examConfig?.faceRecognition\r\n    return (\r\n        <Timeline position=\"alternate\">\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                >\r\n                    Level1\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isRandom ? \"primary\" : \"error\"}>\r\n                        <ShuffleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isRandom ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Random Order\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                >\r\n                    Level2\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isDisableSwitch ? \"primary\" : \"error\"}>\r\n                        <DesktopAccessDisabledIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isDisableSwitch ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Disable Switch Browser\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level3\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isplagiarism ? \"primary\" : \"error\"}>\r\n                        <FactCheckIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isplagiarism ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Plagiarism Check\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level4\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color={isFaceDetection ? \"primary\" : \"error\"}>\r\n                        <SupervisedUserCircleIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceDetection ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Detection\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            <TimelineItem>\r\n                <TimelineOppositeContent\r\n                    style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                    sx={{ m: 'auto 0' }}\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                >\r\n                    Level5\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                    <TimelineDot color={isFaceVerify ? \"primary\" : \"error\"}>\r\n                        <PhotoCameraFrontIcon />\r\n                    </TimelineDot>\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography\r\n                        style={{ textDecoration: !isFaceVerify ? 'line-through red' : '' }}\r\n                        variant=\"h6\"\r\n                        component=\"span\"\r\n                    >\r\n                        Face Recognition\r\n                    </Typography>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const ExamOverview = ({ questions, examConfigs }) => {\r\n    const { examId } = useParams()\r\n    return (\r\n        <>\r\n            <CardComponent title={'Anti Cheating Levels'}>\r\n                <AntiCheatingTimeline examConfig={examConfigs} />\r\n            </CardComponent>\r\n            <br /><br />\r\n            <CardComponent title={'Questions'}>\r\n                <div className='p-5'>\r\n                    {questions?.map((item) => {\r\n                        if (item?.type === QuestionTypes.MCQ) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <McqAnswer questionText={item?.questionText} choices={item?.options} />\r\n                                </div>)\r\n                        }\r\n                        else if (item?.type === QuestionTypes.ESSAY) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <EssayAnswer questionText={item?.questionText} correctAnswer={item?.options[0]} />\r\n                                </div>)\r\n                        }\r\n                        else if (item?.type === QuestionTypes.FORMULA) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'>\r\n                                    <FormulaAnswer formula_questions={item?.questions} teacherMode questionHeader={item?.questionText} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (item?.type === QuestionTypes.GROUP) {\r\n                            return (\r\n                                <div key={item?.id} className='m-4 mt-5'> \r\n                                    <GroupAnswer questions={item?.questions} teacherMode questionHeader={item?.questionText} />\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return null\r\n                    }\r\n                    )}\r\n                </div>\r\n            </CardComponent>\r\n        </>\r\n    )\r\n}","const useImageResolver = () => {\r\n    return (imageName) => {\r\n        if (imageName?.includes(\"http\")) return imageName\r\n        return 'https://smart-exam.s3.eu-central-1.amazonaws.com/uploads/' + imageName\r\n    }\r\n}\r\n\r\nexport default useImageResolver\r\n","import React from 'react'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Avatar, Button, colors, IconButton, Paper } from '@mui/material';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Colors } from '../../../../constants/Colors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NoContentComponent from '../../../../Components/NoContentComponent/NoContentComponent';\r\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport { useParams } from 'react-router-dom';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst StudentsList = ({ examConfigs, examId }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const params = useParams()\r\n    const goToThisStudent = (id) => {\r\n        history.push(`${location.pathname}/${id}`, { examConfigs })\r\n    }\r\n\r\n    const [studentsAnswers, setStudentAnswers] = useState(null)\r\n    const getStudentExams = () => {\r\n        MarkExamServices.getAllStudentsAnswers(params.examId)\r\n        .then(res => {\r\n                setStudentAnswers(res.solvedExams)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n        }\r\n    useEffect(() => {\r\n        getStudentExams()\r\n    }, [])\r\n    \r\n    const markAllHandler = () => {\r\n        MarkExamServices.markAllAutomatic(params?.examId)\r\n            .then(res => {\r\n                showSuccessMsg(\"Mark All Student Successfully!\")\r\n                getStudentExams()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Button onClick={markAllHandler} color='success' variant=\"contained\">Mark All <CheckOutlinedIcon /></Button>\r\n            </div>\r\n            <Paper className='mt-3' elevation={3}>\r\n                <List>\r\n                    {studentsAnswers?.map(item => (\r\n                        <ListItem key={`${item.student_id}_${item.attempt}`} onClick={() => goToThisStudent(item.student_id)}>\r\n                            <ListItemButton>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt={item.name} src={imageResolver(item?.image)} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primaryTypographyProps={item?.isMarked ? { color: Colors.success, fontWeight: 'bolder' } : {}}\r\n                                    primary={`${item.name}`}\r\n                                    secondary={item?.isMarked && `Mark: ${item.mark}`}\r\n                                />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    ))\r\n                    }\r\n                    {!studentsAnswers?.length ?\r\n                        <NoContentComponent text={\"No submittion yet\"} />\r\n                        :\r\n                        null\r\n                    }\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsList","export const CheatTypes = {\r\n    FACE_DETECTION: \"FACE_DETECTION\",\r\n    FACE_RECOGNITION : \"FACE_RECOGNITION\",\r\n    SWITCH_BROWSER:\"SWITCH_BROWSER\"\r\n}\r\n\r\n\r\n","import { CheatTypes } from \"../../constants/CheatTypes\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class CheatServices {\r\n\r\n    static sentSwitchBrowserCheatAttempt(examId) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            type: CheatTypes.SWITCH_BROWSER\r\n        })\r\n    }\r\n    static sentFaceDetectionCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_DETECTION\r\n        })\r\n    }\r\n    static sentFaceRecognationCheatAttempt(examId, image) {\r\n        return _axios.post(`/cheater`, {\r\n            examId,\r\n            image,\r\n            type: CheatTypes.FACE_RECOGNITION\r\n        })\r\n    }\r\n\r\n\r\n\r\n    static getCheaters(examId) {\r\n        return _axios.get(`/exams/${examId}/cheaters`)\r\n    }\r\n\r\n    static performStudentDecrement(ActionData) {\r\n        return _axios.post(`/cheater/action`, ActionData)\r\n    }\r\n}","export const CheatActions = {\r\n    DISMISS: \"DISMISS\",\r\n    MINUS: \"MINUS\",\r\n    ZERO: \"ZERO\"\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/mofty.9e1fe332.jpg\";","export default __webpack_public_path__ + \"static/media/mofty2.809a9b07.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Card, Typography, TextField, Button } from '@mui/material'\r\n\r\nimport { CheatServices } from '../../../../apis/Services/CheatService';\r\n\r\nimport Mofty_Image from '../../../../assets/images/mofty.jpg';\r\nimport Mofty_Image_2 from '../../../../assets/images/mofty2.jpg';\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg';\r\nimport { CheatActions } from '../../../../constants/CheatActions';\r\nimport useImageResolver from '../../../../hooks/useImageResolver';\r\nimport { CheatTypes } from '../../../../constants/CheatTypes';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\n\r\n\r\nconst ExamReport = () => {\r\n    const [cheaters, setCheaters] = useState([]);\r\n    const [decrementDegree, setDecrementDegree] = useState(0);\r\n    const params = useParams()\r\n\r\n    const getCheaters = () => {\r\n        CheatServices.getCheaters(params?.examId)\r\n            .then((response) => {\r\n                let cheatersResults = response?.details\r\n                if(!cheatersResults?.length) return []\r\n\r\n                let cheatersObjects = {}\r\n                cheatersResults.forEach(item => {\r\n                    if (cheatersObjects[item.student_id]?.length) {\r\n                        cheatersObjects[item.student_id].push(item)\r\n                    }\r\n                    else {\r\n                        cheatersObjects[item.student_id] = [item]\r\n                    }\r\n                })\r\n                let editedCheaterList = []\r\n                for (const property in cheatersObjects) {\r\n                    editedCheaterList.push(cheatersObjects[property])\r\n                }\r\n\r\n                editedCheaterList = editedCheaterList.map(item=>{\r\n                    let specificStudentCheatMethods = item.filter(el=>el.type!==CheatTypes.SWITCH_BROWSER)\r\n                    let numberOfSwitchBrowserMethods = item.length - specificStudentCheatMethods.length\r\n                    if(numberOfSwitchBrowserMethods===0) return item\r\n\r\n                    let oneOfSwitchBrowserCases = item.find(el=>el.type===CheatTypes.SWITCH_BROWSER)\r\n                    return [...specificStudentCheatMethods, {...oneOfSwitchBrowserCases, typeCounter: numberOfSwitchBrowserMethods}]\r\n                })\r\n\r\n                let finalCheaterList = editedCheaterList.flat()\r\n\r\n                setCheaters(finalCheaterList)\r\n                \r\n            }).catch((error) => HandleErrors(error))\r\n    }\r\n    useEffect(() => {\r\n        getCheaters()\r\n    }, []);\r\n\r\n    const actionHandler = (cheaterDetails, action) => {\r\n\r\n        if (action === CheatActions.DISMISS || action === CheatActions.ZERO) {\r\n            setDecrementDegree(0);\r\n        }\r\n        const ActionData = {\r\n            \"cheatingDetailId\": cheaterDetails?.id,\r\n            \"action\": action,\r\n            \"minusMarks\": decrementDegree,\r\n            \"type\": cheaterDetails?.type\r\n        }\r\n\r\n        CheatServices.performStudentDecrement(ActionData)\r\n            .then((response) => {\r\n                showSuccessMsg(\"Action Performed Successfully\")\r\n                getCheaters()\r\n            }).catch((error) => HandleErrors(error))\r\n\r\n        return\r\n    }\r\n\r\n    let imageResolver = useImageResolver()\r\n\r\n    let CheatersMarkup = () => {\r\n\r\n        return (\r\n            cheaters?.map((cheater_details) => {\r\n                return (\r\n                    <Card key={cheater_details?.id} className='shadow p-3 mb-5 bg-white rounded position-relative' sx={{ minWidth: 275 }}>\r\n                        {/* <Stack spacing={2}/> */}\r\n                        <div className=\"d-flex col-8 justify-content-start\">\r\n                            <div>\r\n                                <img\r\n                                    style={{ width: 200 }}\r\n                                    src={`${imageResolver(cheater_details?.profileImage)}`}\r\n                                    alt={'User'}\r\n                                    loading=\"lazy\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Name: {cheater_details?.studentName}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    Type: {cheater_details?.type} {cheater_details?.type === CheatTypes.SWITCH_BROWSER ? '(' + cheater_details?.typeCounter + ' times)' : ''}\r\n                                </Typography>\r\n                                <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                    {cheater_details?.type !== CheatTypes.SWITCH_BROWSER ? 'Original Profile Photo ' : ''}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='m-4' />\r\n                        {cheater_details?.type !== CheatTypes.SWITCH_BROWSER &&\r\n                            <div className=\"d-flex col-8 align-items-center\">\r\n                                <div>\r\n                                    <img\r\n                                        style={{ width: 200 }}\r\n                                        src={`${imageResolver(cheater_details?.image)}`}\r\n                                        alt={'no_photo'}\r\n                                        loading=\"lazy\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                                        Suspect image (from his webcam)\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>}\r\n\r\n                        <hr />\r\n\r\n                        <Typography className=' text-danger font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                            Perform Action To This Student (Be Careful..!)\r\n                        </Typography>\r\n                        <Typography className=' text-danger font-weight-bold' variant='h6' >\r\n                            You can either dismiss this issue, decrease his mark, or Revoke the exam (Mark As Zero)\r\n                        </Typography>\r\n                        <div className='m-5' />\r\n\r\n                        <div className=\"d-flex m-3 justify-content-between\">\r\n                            <Button variant=\"contained\" color=\"success\" onClick={() => { actionHandler(cheater_details, CheatActions.DISMISS) }}>\r\n                                Dismiss This Issue\r\n                            </Button>\r\n\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <TextField\r\n                                    error\r\n                                    id=\"outlined-error\"\r\n                                    label=\"Decrement Value. eg: 6\"\r\n                                    onChange={(event) => setDecrementDegree(event.target.value)}\r\n                                />\r\n                                <div className='m-2' />\r\n\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.MINUS) }}>\r\n                                    Confirm Decrease\r\n                                </Button>\r\n\r\n                            </div>\r\n                            <Button variant=\"contained\" color=\"error\" onClick={() => { actionHandler(cheater_details, CheatActions.ZERO) }}>\r\n                                Revoke Exam (Put Zero)\r\n                            </Button>\r\n                        </div>\r\n                    </Card >\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography className='m-3 font-weight-bold' variant='h5' sx={{ fontWeight: 'bold' }}>\r\n                Suspicious Cheaters\r\n            </Typography>\r\n            <hr />\r\n            {\r\n                CheatersMarkup()\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExamReport;\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useState } from 'react'\nimport Loader from '../../../../Components/Loader/Loader'\n\nconst Statistics = ({ examId }) => {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const fullSizeStyle = { style: { height: '80vh' }, className: 'w-100' }\n    return (\n        <div>\n            {!isLoaded ?\n                <div {...fullSizeStyle}>\n                    <div className='d-flex justify-content-center'>\n                        <Loader />\n                    </div>\n                </div>\n                :\n                null\n            }\n            <iframe\n                onLoad={() => setIsLoaded(true)}\n                {...fullSizeStyle}\n                src={`https://api.smart-exam.ml/statistics/${examId}`}\n            />\n        </div>\n\n    )\n}\n\nexport default Statistics","import { Paper, styled, Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService'\nimport { Colors } from '../../../../constants/Colors';\nimport HandleErrors from '../../../../hooks/handleErrors'\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\nimport styles from './ExamView.module.css'\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: Colors.primary,\n    color: theme.palette.common.white,\n    fontWeight: 700\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n  },\n  [`&.${tableCellClasses.body}:first-of-type`]: {\n    fontWeight: 700\n  },\n  '&:hover': {\n    textDecoration: 'underline'\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nconst PlagiarismCheck = ({ examId }) => {\n  const getTheMostSimilar = (students) => {\n    if (!students?.length) return\n\n    let maxStudent = students[0]\n    students.forEach(element => {\n      if (element.similarity > maxStudent.similarity)\n        maxStudent = element\n    })\n\n    return { ...maxStudent }\n  }\n\n  const [plagResult, setPlagResult] = useState(null)\n  useEffect(() => {\n    MarkExamServices.getPlagiarismResults(examId)\n      .then(res => {\n        let result = res?.result?.map(item => {\n          return { ...item, similarStudents: getTheMostSimilar(item.similarStudents) }\n        })\n        setPlagResult(result)\n        console.log(result)\n      })\n      .catch(err => HandleErrors(err))\n  }, [])\n\n  const history = useHistory()\n  const location = useLocation()\n  const goToStudentExam = (studentId, cheatedQuestionId, newTapName) => {\n    if(newTapName){\n      window.open(`${location.pathname}/${studentId}?questionId=${cheatedQuestionId}`, newTapName);\n      return\n    }\n    history.push(`${location.pathname}/${studentId}?questionId=${cheatedQuestionId}`)\n  }\n\n  const openTaps = (firstStudentId, secondStuentId, questionId) => {\n    goToStudentExam(firstStudentId, questionId, 'tap1')\n    goToStudentExam(secondStuentId, questionId, 'tap2')\n  }\n\n  return (\n    <TableContainer className='mt-5' component={Paper}>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Student Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Most Similar Colleague</StyledTableCell>\n            <StyledTableCell align=\"right\">{'Percentage of similarity (%)'}</StyledTableCell>\n            <StyledTableCell align=\"right\"></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {plagResult?.map((row) => (\n            <StyledTableRow key={row.id}>\n              {/* NAME */}\n              <StyledTableCell onClick={() => goToStudentExam(row.id, row.similarStudents?.questionId)} className='text-dark pointer' component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              {/* Collage Name */}\n              <StyledTableCell onClick={() => goToStudentExam(row.similarStudents?.id, row.similarStudents?.questionId)} className='text-dark pointer' align=\"right\">\n                {row.similarStudents?.name}\n              </StyledTableCell>\n              {/* Plgrism Percentage */}\n              <StyledTableCell className={`text-danger ${styles.preventHoverEffect}`} align=\"right\">\n                {(row.similarStudents?.similarity * 100).toFixed(2)} %\n              </StyledTableCell>\n              {/* ViewQuestion */}\n              <StyledTableCell onClick={() => openTaps(row.id, row.similarStudents?.id, row.similarStudents?.questionId)} className='pointer' align=\"right\">\n                <RemoveRedEyeOutlinedIcon color='primary' />\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default PlagiarismCheck","import { Box, Tabs, Tab } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../../apis/Services/ExamService';\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService';\r\nimport HandleErrors from '../../../../hooks/handleErrors';\r\nimport { ExamOverview } from './ExamOverview';\r\nimport StudentsList from './StudentsList';\r\nimport ExamReport from './ExamReport'\r\nimport Statistics from './Statistics';\r\nimport PlagiarismCheck from './PlagiarismCheck';\r\nconst ExamView = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [selectedTab, setSelectedTab] = React.useState(null)\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n        history.push({\r\n            pathname: location.pathname,\r\n            search: `?selectedTab=${newValue}`\r\n        })\r\n    };\r\n\r\n    const params = useParams()\r\n    const [questions, setQuestions] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamQuestions(params.examId)\r\n            .then(res => {\r\n                setQuestions(res.questions)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /**\r\n     * Auto Select tab based on query params\r\n     */\r\n    useEffect(() => {\r\n        if (!examConfigs) return\r\n\r\n        let selectedTab = new URLSearchParams(location.search).get('selectedTab')\r\n        setSelectedTab(selectedTab || 'Overview')\r\n    }, [location.search?.selectedTab, examConfigs])\r\n\r\n    return (selectedTab &&\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mt-5\">\r\n                    <Box sx={{ width: '100%' }}>\r\n                        <Tabs\r\n                            value={selectedTab}\r\n                            onChange={handleChange}\r\n                            textColor=\"primary\"\r\n                            indicatorColor=\"primary\"\r\n                            aria-label=\"secondary tabs example\"\r\n                        >\r\n                            <Tab value=\"Overview\" label=\"Overview\" />\r\n                            <Tab value=\"StudentAnswers\" label=\"Student Answers\" />\r\n                            <Tab value=\"ExamReport\" label=\"Exam Report\" />\r\n                            <Tab value=\"Statistics\" label=\"Statistics\" />\r\n                            {examConfigs?.plagiarismCheck && <Tab value=\"Plagiarism\" label=\"Plagiarism Check\" />}\r\n                        </Tabs>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 mt-5\">\r\n                    {selectedTab === 'Overview' &&\r\n                        <ExamOverview questions={questions} examConfigs={examConfigs} />\r\n                    }\r\n                    {selectedTab === 'StudentAnswers' &&\r\n                        <StudentsList\r\n                            examId={examId}\r\n                            examConfigs={examConfigs}\r\n                        />\r\n                    }\r\n                    {selectedTab === 'ExamReport' &&\r\n                        <ExamReport />\r\n                    }\r\n                    {selectedTab === 'Statistics' &&\r\n                        <Statistics examId={examId} />\r\n                    }\r\n                    {selectedTab === 'Plagiarism' &&\r\n                        <PlagiarismCheck examId={examId} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamView","import { Button, Chip, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\r\nimport { MarkExamServices } from '../../../../apis/Services/MarkExamService'\r\nimport HandleErrors from '../../../../hooks/handleErrors'\r\nimport useImageResolver from '../../../../hooks/useImageResolver'\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport VerifiedIcon from '@mui/icons-material/Verified';\r\nimport McqAnswer from '../../../../Components/AnsweredQuestion/McqAnswer'\r\nimport showSuccessMsg from '../../../../hooks/showSuccessMsg'\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\nimport EssayAnswer from '../../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport FormulaAnswer from '../../../../Components/AnsweredQuestion/FormulaAnswer'\r\nimport GroupAnswer from '../../../../Components/AnsweredQuestion/GroupAnswer'\r\nimport styles from './ExamView.module.css';\r\n\r\nconst StudentCard = ({ name, isVerified, numberOfFaces, image, markAutoFun, examConfigs, isCheater }) => {\r\n    const imageResolver = useImageResolver()\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-6 col-12\">\r\n                <div className=\"d-flex\">\r\n                    <div className='position-relative'>\r\n                        <img\r\n                            className='shadow-sm'\r\n                            src={imageResolver(image)}\r\n                            style={{ height: 200, width: 200, objectFit: 'cover', borderRadius: 15 }}\r\n                            alt=\"student Photo\"\r\n                        />\r\n                        {isCheater ?\r\n                            <div className={styles.cheaterOverlay}><span>CHEATER!</span></div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    <div className='ms-3'>\r\n                        <Typography variant=\"h4\" fontWeight={'bold'} color={'primary'}>{name}</Typography>\r\n                        {examConfigs?.faceDetection ?\r\n                            <Chip icon={<PersonIcon />} color={(numberOfFaces === 1) ? 'success' : 'error'} label={`${numberOfFaces} face detected`} className=\"me-2\" />\r\n                            :\r\n                            null\r\n                        }\r\n                        {examConfigs?.faceRecognition ?\r\n                            <Chip icon={<VerifiedIcon />} color={isVerified ? 'success' : 'error'} label={isVerified ? \"Verified\" : \"Unverified\"} />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-md-6 col-12 mt-md-0 mt-5 text-md-end text-center'>\r\n                <Button onClick={markAutoFun} variant=\"contained\" color=\"success\">\r\n                    Mark Automatic\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StudentSolvedExam = () => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const examConfigs = location?.state?.examConfigs\r\n\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    const mostSimilarQuestionIdFromPlagarism = new URLSearchParams(location.search).get(\"questionId\")\r\n    useEffect(() => {\r\n        if(!studentExamResult) return\r\n        const questionCheatedRef = document.getElementById(mostSimilarQuestionIdFromPlagarism)\r\n        setTimeout(() => {\r\n            questionCheatedRef?.scrollIntoView({behavior:'smooth', block:'center'})\r\n        }, 200);\r\n    }, [studentExamResult])\r\n\r\n    const autoMarkThisStudentHandler = () => {\r\n        MarkExamServices.markSpecificStudentAutomatic(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                showSuccessMsg(`Mark ${studentExamResult.studentName}'s exam successfully!`)\r\n                history.goBack()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsRightHandler = (questionId, mark) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: mark\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const markAsWrongHandler = (questionId) => {\r\n        MarkExamServices.manualMark({\r\n            examId: params?.examId,\r\n            studentId: params?.studentId,\r\n            questionId: questionId,\r\n            questionMark: 0\r\n        })\r\n            .then(res => {\r\n                getStudentAnswers()\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const getStudentAnswers = () => {\r\n        MarkExamServices.getSpecificStudentAnswers(params?.examId, params?.studentId)\r\n            .then(res => {\r\n                setStudentExamResult(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n    useEffect(() => {\r\n        getStudentAnswers()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <StudentCard\r\n                name={studentExamResult?.studentName}\r\n                isVerified={studentExamResult?.isVerified}\r\n                numberOfFaces={studentExamResult?.numberOfFaces}\r\n                image={studentExamResult?.image}\r\n                markAutoFun={autoMarkThisStudentHandler}\r\n                examConfigs={examConfigs}\r\n                isCheater={studentExamResult?.isCheater}\r\n            />\r\n            <hr />\r\n            <div className=\"row mt-5 justify-content-center\">\r\n                <div className=\"col-12\">\r\n                    <>\r\n                        {studentExamResult?.solution?.map(item =>\r\n                            <div id={item.id} key={item.id} className={`my-5 rounded ${(item.id==mostSimilarQuestionIdFromPlagarism)? 'bg-danger':''}`}>\r\n                                {(item?.type === QuestionTypes.MCQ) ?\r\n                                    <McqAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        choices={item?.options}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.ESSAY) ?\r\n                                    <EssayAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        questionText={item?.questionText}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                        correctAnswer={item?.options[0]}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.FORMULA) ?\r\n                                    <FormulaAnswer\r\n                                        markAsRight={() => markAsRightHandler(item?.id, item?.pivot?.mark)}\r\n                                        markAsWrong={() => markAsWrongHandler(item?.id)}\r\n                                        studentAnswer={{ id: item?.answer?.option_id, value: item?.answer?.studentAnswer }}\r\n                                        formula_questions={[item?.formula_questions]}\r\n                                        studentMark={item?.answer?.questionMark}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                        isMarked={item?.answer?.isMarked}\r\n                                        correctAnswer={item?.formula_questions?.value}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {(item?.type === QuestionTypes.GROUP) ?\r\n                                    <GroupAnswer\r\n                                        questions={item?.questions}\r\n                                        markAsRight={markAsRightHandler}\r\n                                        markAsWrong={markAsWrongHandler}\r\n                                        questionMark={item?.pivot?.mark}\r\n                                    />\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n\r\n                        )}\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentSolvedExam","import AddExam from '../Views/Instructor/Exams/AddExam/AddExam'\nimport AddExamQuestions from '../Views/Instructor/Exams/AddExamQuestions/AddExamQuestions'\nimport Exams from '../Views/Instructor/Exams/Exams'\nimport Questions from '../Views/Instructor/Questions/Questions'\nimport SetExamOptions from '../Views/Instructor/Exams/SetExamOptions/SetExamOptions'\nimport AddQuestionScreen from '../Views/Instructor/Questions/AddQuestionScreen'\nimport QuestionViewScreen from '../Views/Instructor/Questions/QuestionViewScreen'\nimport ExamView from '../Views/Instructor/Exams/ExamView'\nimport StudentSolvedExam from '../Views/Instructor/Exams/ExamView/StudentSolvedExam'\n\nconst InstructorRoutes =\n    [\n        { path: '/exams', component: Exams, exact: true },\n        \n        { path: '/exams/add', component: AddExam, exact: true },\n        { path: '/exams/edit', component: AddExam, exact: true },\n        { path: '/exams/:examId/set-options', component: SetExamOptions, exact: true },\n        { path: '/exams/:examId/add-questions', component: AddExamQuestions, exact: true },\n        \n        { path: '/questions', component: Questions, exact: true },\n        { path: '/questions/add', component: AddQuestionScreen, exact: true },\n        { path: '/questions/edit', component: AddQuestionScreen, exact: true },\n        { path: '/questions/:questionId', component: QuestionViewScreen, exact: true },\n\n        { path: '/exams/:examId', component: ExamView, exact: true },\n        { path: '/exams/:examId/:studentId', component: StudentSolvedExam, exact: true },\n    ]\nexport default InstructorRoutes\n","export default __webpack_public_path__ + \"static/media/study.23e7d4be.jpg\";","import React from 'react'\nimport './Home.css'\nimport studyImage from '../../assets/images/study.jpg'\nimport { Typography } from '@mui/material'\nimport { Colors } from '../../constants/Colors';\nimport { createTheme } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\nconst styles = {\n    color: Colors.primary\n\n};\n\nconst theme = createTheme({\n    shape: {\n        borderRadius: 20,\n    },\n})\n\nconst ColorButton = styled(Button)(({ theme }) => ({\n    borderRadius: 20,\n\n    backgroundColor: Colors.primary,\n    '&:hover': {\n        backgroundColor: Colors.primaryHover,\n    },\n}));\n\nconst Home = () => {\n    const isAuth = useSelector(state => state.auth.userToken)\n    const userType = useSelector(state => state.auth.userType)\n    const history = useHistory()\n\n    const getStartedHandler = () => {\n        history.push('/login')\n        return\n    }\n    const yourProfileHandler = () => {\n        history.push('/profile/' + userType)\n        return\n    }\n\n    return (\n\n        <div className='main text-center' style={{ minHeight: \"80vh\" }}>\n            <div className='p-3'></div>\n\n            <Typography variant=\"h3\" component=\"div\" className='m-4 slide' style={styles} >\n                Welcome to Smart Exam\n            </Typography>\n            <Typography variant=\"h5\" component=\"div\" className='m-4 slide' style={styles} >\n                A free educational platform where you can create secure, reliable, cheating-free exams\n            </Typography>\n\n            {/* Background Image */}\n\n            <div className='image slide'>\n\n                <div className='p-5'></div>\n                <div className='p-5'></div>\n\n                {/* Shaded Area for text  */}\n                <div className='textbox'>\n\n                    <div className=' mb-3 p-3'>\n\n                        <Typography variant=\"h5\" component=\"div\" className='slide' style={{ color: Colors.white }} >\n\n                            {/* Make your exam in a more secure platform */}\n                            We offer an easy, smart system that provides\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"div\" className='slide' style={{ color: Colors.white }} >\n\n                            Anti-Cheating techniques to ensure online exam as secure as offline exam.\n                        </Typography>\n                    </div>\n\n                    <div className=' '>\n\n                        <Typography variant=\"h6\" component=\"div\" className='slide' style={{ color: Colors.white }} >\n                            You can monitor your student behaviours within a click.\n                        </Typography>\n                        <Typography variant=\"h6\" component=\"div\" className='slide ' style={{ color: Colors.white }} >\n                            Online Exams Made Easy, Start Now\n                        </Typography>\n\n\n                    </div>\n\n                    {!isAuth ?\n                        <ColorButton className='m-3' variant=\"contained\" onClick={getStartedHandler} size=\"large\" theme={theme} color=\"success\">\n                            Get Started\n                        </ColorButton> :\n                        <ColorButton className='m-3' variant=\"contained\" onClick={yourProfileHandler} size=\"large\" theme={theme} color=\"success\">\n                            Your Profile\n                        </ColorButton>\n\n                    }\n\n\n\n\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home\n","import Home from '../Views/Home/Home'\n\nconst MainRoutes =\n    [\n        { path: \"/\", component: Home, exact: true },\n    ]\n\nexport default MainRoutes\n","import Webcam from \"react-webcam\";\nimport { useRef, useCallback } from \"react\";\nimport Button from '@mui/material/Button';\n\n// const videoConstraints = {\n//     width: 1280,\n//     height: 720,\n//     facingMode: \"user\"\n// };\n\nconst TakePhoto = (props) => {\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n\n\n            const imageSrc = webcamRef.current.getScreenshot();\n            props.captured(imageSrc)\n            props.clicked()\n\n        },\n\n\n\n\n\n        [webcamRef,props]\n    );\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-center\">\n                <Webcam\n                    audio={false}\n                    // height={720}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                // width={1280}\n                // videoConstraints={videoConstraints}\n                />\n\n            </div>\n            {/* {imgSrc && (\n                <img src={imgSrc} alt=\"555\" />\n\n            )} */}\n            <div className=\"d-flex justify-content-center\">\n                <Button\n                    className='btn m-2 p-2 text-white'\n                    size=\"small\"\n                    variant=\"contained\"\n                    color='success'\n                    onClick={capture}\n                >\n                    Capture\n                </Button>\n\n            </div>\n        </div>\n    );\n};\nexport default TakePhoto;\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport TakePhoto from '../TakePhoto/TakePhoto';\r\nimport { useState } from 'react';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport moment from 'moment';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../../../Components/Loader/Loader';\r\n\r\n\r\nconst Examinstructions = (props) => {\r\n    const exam = props.location.state.exam\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState(false);\r\n    const [noOfFaces, setNoOfFaces] = useState(0);\r\n    const [photoVerified, setPhotoVerified] = useState(false);\r\n\r\n    const { examId } = useParams()\r\n    const [examConfigs, setExamConfigs] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(examId)\r\n            .then(res => {\r\n                setExamConfigs(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const [startDate, setstartDate] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getExamInfo(examId)\r\n            .then(res => {\r\n                setstartDate(res.exam.startAt)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToExamHandler = (event) => {\r\n        // this code pevents from going to another page\r\n        event.preventDefault()\r\n\r\n        let startExamData = {\r\n            \"startTime\": moment().format('yyyy-MM-DD HH:mm:ss'),\r\n            \"numberOfFaces\": noOfFaces,\r\n            \"isVerified\": photoVerified\r\n        }\r\n        ExamServices.startExam(exam.id, startExamData)\r\n            .then((response) => {\r\n                props.history.push({\r\n                    pathname: `/exams/${exam.id}/start`,\r\n                    state: { exam: exam }\r\n                })\r\n            }).catch((error) => {\r\n                if (error?.message?.includes(\"You must submit the previous attempt first before starting a new attempt\")) {\r\n                    props.history.push({\r\n                        pathname: `/exams/${exam.id}/start`,\r\n                        state: { exam: exam }\r\n                    })\r\n                    return\r\n                }\r\n                HandleErrors(error)\r\n            })\r\n    }\r\n\r\n    const photoTakenHandler = (img) => {\r\n        setIsLoading(true)\r\n        setIsPhotoTaken(true)\r\n        showSuccessMsg(\"Photo Taken Successfully\")\r\n\r\n        let faceDetectionData = {\r\n            \"image\": img,\r\n            \"examId\": exam.id\r\n        }\r\n        let faceVerificationData = {\r\n            \"image1\": img,\r\n            \"examId\": exam.id\r\n        }\r\n\r\n        ExamServices.applyFaceDetection(faceDetectionData)\r\n            .then((response) => {\r\n                setNoOfFaces(response.numberOfFaces)\r\n                if (response.numberOfFaces !== 1) {\r\n                    return { verified: false }\r\n                }\r\n                return ExamServices.applyFaceVerification(faceVerificationData)\r\n            })\r\n            .then((response) => {\r\n                setPhotoVerified(response.verified)\r\n            })\r\n            .finally(() => { setIsLoading(false) })\r\n        return\r\n    }\r\n\r\n    const mustVerifyFace = (examConfigs?.faceRecognition || examConfigs?.faceDetection)\r\n    const hasStarted = startDate && moment(startDate).isBefore(moment())\r\n    return ((examConfigs && startDate) ?\r\n        <div>\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={'Before The Exam'}>\r\n                        <div className=\"m-5 text-start \">\r\n                            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Instructions Title */}\r\n                                    <Typography className='text-danger font-weight-bold' variant=\"h4\" component=\"div\">\r\n                                        Important Instructions\r\n                                        <hr />\r\n                                    </Typography>\r\n                                    <ul>\r\n                                        {mustVerifyFace ?\r\n                                            <li className='text-danger font-weight-bold'>\r\n                                                Verify your identity with a photo before entering the exam.\r\n                                            </li>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        <li>\r\n                                            Don't use internet for getting information.\r\n                                        </li>\r\n                                        <li>\r\n                                            No one else can be in the room with you.\r\n                                        </li>\r\n                                        <li>\r\n                                            Time is limited, so organize your time well with questions.\r\n                                        </li>\r\n                                        <li>\r\n                                            The room must be well-lit and you must be clearly visible.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className='text-center'>\r\n\r\n                                    </div>\r\n                                    <div className='text-center text-success' >\r\n                                        Good Luck with your exam!\r\n                                    </div>\r\n\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-end'>\r\n                                    {!isLoading ?\r\n                                        <>\r\n                                            {mustVerifyFace ?\r\n                                                <Popup\r\n                                                    trigger={\r\n                                                        <Button\r\n                                                            className='btn m-2 p-2 text-white'\r\n                                                            size=\"large\"\r\n                                                            variant=\"contained\"\r\n                                                            color='warning'\r\n                                                        >\r\n                                                            Take Photo\r\n                                                        </Button>\r\n                                                    }\r\n                                                    modal\r\n                                                    lockScroll\r\n                                                    position=\"top center\"\r\n                                                >\r\n                                                    {close => (\r\n                                                        <CardComponent title={'Take a nice photo'}>\r\n                                                            <h4 className=\"d-flex justify-content-center\">\r\n                                                                Make sure the place is well lit!\r\n                                                            </h4>\r\n                                                            <TakePhoto\r\n                                                                captured={photoTakenHandler}\r\n                                                                clicked={close}\r\n                                                            ></TakePhoto>\r\n                                                        </CardComponent>\r\n\r\n                                                    )}\r\n                                                </Popup>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <Button\r\n                                                className='btn m-2 p-2 text-white'\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                color='success'\r\n                                                onClick={goToExamHandler}\r\n                                                disabled={(mustVerifyFace && !isPhotoTaken) || (!hasStarted)}\r\n                                            >\r\n                                                {`Start Exam Now ${!hasStarted ? '(Not Started)' : ''}`}\r\n                                            </Button>\r\n                                        </>\r\n                                        :\r\n                                        <div className='me-4 d-flex flex-column align-items-center'>\r\n                                            <Typography color=\"primary\">Verifing...!</Typography>\r\n                                            <Loader />\r\n                                        </div>\r\n                                    }\r\n                                </CardActions>\r\n                            </Card>\r\n                        </div>\r\n                    </CardComponent>\r\n                </div>\r\n            </div >\r\n        </div>\r\n        :\r\n        <div className='d-flex justify-content-center align-items-center' style={{ height: '70vh' }}>\r\n            <Loader />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Examinstructions);\r\n","import { Card, CardActions, CardContent, Chip, Typography, Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ExamServices } from '../../../apis/Services/ExamService'\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nconst MyResults = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams({ isMarked: true })\r\n            .then(res => {\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const goToResultDetails = (examId) => {\r\n        history.push(`${location.pathname}/${examId}`)\r\n    }\r\n\r\n    const isFailed = (studentMark, totalMark) => {\r\n        return studentMark < (totalMark / 2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Marked Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card onClick={() => goToResultDetails(exam.id)} key={exam.id} className='shadow p-3 mb-5 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    <Grid display={'flex'} justifyContent={'space-between'} direction={'row'}>\r\n                                        <Grid>\r\n                                            {/* Exam Title */}\r\n                                            <Typography variant=\"h4\" component=\"div\">\r\n                                                {exam.name}\r\n                                            </Typography>\r\n                                            {exam.isSubmitted &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Submitted'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                            {exam.isMarked &&\r\n                                                <Chip\r\n                                                    variant='filled'\r\n                                                    color='success'\r\n                                                    label={'Marked'}\r\n                                                    size={'small'}\r\n                                                    className='mx-1'\r\n                                                    icon={<CheckIcon />}\r\n                                                />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid className={isFailed(exam.mark?.totalMark, exam.totalMark) ? 'text-danger' : 'text-success'} display={'flex'} direction={'row'}>\r\n                                            <Typography variant='h5'>\r\n                                                {exam.mark?.totalMark}\r\n                                            </Typography>\r\n                                            <Typography variant='h5'>\r\n                                                {`/${exam.totalMark}`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'} color=\"secondary\">Duration:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {exam.duration}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </CardActions>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MyResults","import DomainUrl from \"../Domain\";\n\nexport const STUDENT_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/students/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/students/me`,\n        method:'GET'\n    }\n};\n\n","import { STUDENT_ENDPOINTS } from \"../Endpoints/StudentEndpoints\";\r\nimport { Network } from \"../Network\";\r\nimport _axios from \"../axios-instance\";\r\n\r\nexport class StudentServices {\r\n    // sign up\r\n    static register(values) {\r\n        return Network.fetch(STUDENT_ENDPOINTS.register.url, {\r\n            body: JSON.stringify(values),\r\n            method: STUDENT_ENDPOINTS.register.method,\r\n        });\r\n    }\r\n\r\n    // get my profile\r\n    static getMyProfile() {\r\n        return Network.fetch(STUDENT_ENDPOINTS.getMyProfile.url, {\r\n            method: STUDENT_ENDPOINTS.getMyProfile.method,\r\n        }, true);\r\n    }\r\n\r\n    static getSpecificExamResults(examId) {\r\n        return _axios.get(`/exams/${examId}/report`)\r\n    }\r\n}","import { Grid } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { StudentServices } from '../../../apis/Services/StudentService'\r\nimport EssayAnswer from '../../../Components/AnsweredQuestion/EssayAnswer'\r\nimport McqAnswer from '../../../Components/AnsweredQuestion/McqAnswer'\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes'\r\nimport HandleErrors from '../../../hooks/handleErrors'\r\n\r\nconst ResultDetails = () => {\r\n    const { examId } = useParams()\r\n    const [studentExamResult, setStudentExamResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        StudentServices.getSpecificExamResults(examId)\r\n            .then(res => {\r\n                setStudentExamResult(res.solution)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-12\">\r\n                    {studentExamResult?.map(item =>\r\n                        <div key={item.question_id} className='my-2'>\r\n                            {(item?.question?.type === QuestionTypes.MCQ) ?\r\n                                <McqAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    choices={item?.question?.answers}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                            {(item?.question?.type === QuestionTypes.ESSAY) ?\r\n                                <EssayAnswer\r\n                                    studentAnswer={{ id: item?.option_id, value: item?.studentAnswer }}\r\n                                    questionText={item?.question?.questionText}\r\n                                    studentMark={item?.questionMark}\r\n                                    questionMark={item?.totalQuestionMark}\r\n                                    isMarked={item?.isMarked}\r\n                                    correctAnswer={item?.question?.answers[0]}\r\n                                />\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultDetails","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Colors } from '../../../constants/Colors';\r\nimport { Chip, colors, Grid } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport NoContentComponent from '../../../Components/NoContentComponent/NoContentComponent';\r\n\r\n\r\n\r\n\r\nconst ShowExams = (props) => {\r\n    // const [exam, setExam] = useState(null)\r\n\r\n    const goToInstructionsHandler = (event, exam) => {\r\n        // this code pevents from going to another page\r\n        //event.preventDefault()\r\n\r\n        props.history.push({\r\n            pathname: `/exams/${exam.id}`,\r\n            state: { exam: exam }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get exams\r\n     */\r\n    const [exams, setExams] = useState(null)\r\n    useEffect(() => {\r\n        ExamServices.getAllPublishedExams()\r\n            .then(res => {\r\n                setExams(res)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    const getRemainingEndTime = (examEndDate) => {\r\n        let result = moment(examEndDate).diff(moment(), 'hours')\r\n        let remainingMins = moment(examEndDate).diff(moment().add(result, 'hours'), 'minutes')\r\n        if (result > 0 || remainingMins > 0)\r\n            return { hours: result, mins: remainingMins }\r\n        else\r\n            return null\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center text-center my-5\">\r\n            <div className=\"col-md-8 col-12\">\r\n                <CardComponent title={'Your Exams'}>\r\n                    <div className=\"m-5 text-start \">\r\n                        {exams?.map(exam => (\r\n                            <Card style={{ border: exam.isSubmitted ? `1px solid ${Colors.success}` : '' }} key={exam.id} className='shadow p-2 pb-0 mb-3 bg-white rounded' sx={{ minWidth: 275 }}>\r\n                                <CardContent>\r\n                                    {/* Exam Title */}\r\n                                    <Typography variant=\"h4\" component=\"div\">\r\n                                        {exam.name}\r\n                                    </Typography>\r\n                                    {exam.isSubmitted &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Submitted'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    {exam.isMarked &&\r\n                                        <Chip\r\n                                            variant='filled'\r\n                                            color='success'\r\n                                            label={'Marked'}\r\n                                            size={'small'}\r\n                                            className='mx-1'\r\n                                            icon={<CheckIcon />}\r\n                                        />\r\n                                    }\r\n                                    <hr />\r\n                                    <Typography variant=\"body3\">\r\n                                        {exam.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions className='d-flex m-2 justify-content-between'>\r\n                                    <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                        <Typography fontWeight={'bold'}>Due:</Typography>\r\n                                        <Typography className='mx-1'>\r\n                                            {moment(exam.endAt).format('yyyy/MM/DD hh:mm A')}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Typography variant=\"body3\">\r\n                                        <b>Duration:</b> {exam.duration}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        className='btn m-2 p-2 btn-primary text-white'\r\n                                        size=\"small\"\r\n                                        onClick={(e) => goToInstructionsHandler(e, exam)}\r\n                                    >\r\n                                        Go to this Exam\r\n                                    </Button>\r\n                                </CardActions>\r\n                                {getRemainingEndTime(exam.endAt) ?\r\n                                    <CardActions className='d-flex justify-content-center'>\r\n                                        <Grid display={'flex'} alignItems={'center'} direction={'row'}>\r\n                                            <Typography fontWeight={'bold'}>Close in:</Typography>\r\n                                            <Typography\r\n                                                className='mx-1'\r\n                                                fontStyle='italic'\r\n                                                color={getRemainingEndTime(exam.endAt).hours > 24 ? Colors.success : Colors.danger}>\r\n                                                {`[${getRemainingEndTime(exam.endAt).hours} h ${getRemainingEndTime(exam.endAt).mins} m]`}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </CardActions>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </Card>\r\n                        ))}\r\n\r\n                        {!exams?.length ?\r\n                            <NoContentComponent text={\"No Exams Right Now\"} />\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </CardComponent>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withRouter(ShowExams);\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n\r\n\r\n\r\nconst MCQ = (props) => {\r\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\r\n\r\n    const [chosenOptionID, setChosenOptionID] = useState(null);\r\n    const [chosenAnswer, setChosenAnswer] = useState(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setChosenOptionID(props.savedStudentAnswer?.chosenOptionID)\r\n        setChosenAnswer(props.savedStudentAnswer?.chosenAnswer)\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n\r\n    const onChangeHandler = (e) => {\r\n        setChosenOptionID(parseInt(e.target.id))\r\n        setChosenAnswer(e.target.value)\r\n    }\r\n\r\n    let isCheckedCondition = (ansIndex) => {\r\n        // return chosenOptionID && parseInt(chosenOptionID) === parseInt(props.savedStudentAnswer?.chosenOptionID)\r\n        return parseInt(chosenOptionID) === parseInt(props.answers[ansIndex]?.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isInGroupQuestion) return\r\n\r\n        props?.sentAnswerChanges(\r\n            { chosenOptionID: chosenOptionID, chosenAnswer: chosenAnswer, questionType: QuestionTypes.MCQ },\r\n            props?.questionIndex - 1,\r\n            props?.questionId\r\n        )\r\n    }, [chosenAnswer])\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.questionText}\r\n\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n\r\n\r\n                {/* MCQ Content */}\r\n                <CardContent className=''>\r\n                    <form>\r\n                        {props.answers?.map((item, index) => (\r\n                            <div className=\"form-check m-3\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    checked={isCheckedCondition(index)}\r\n                                    type=\"radio\"\r\n                                    value={item?.value}\r\n                                    id={item?.id}\r\n                                    onChange={onChangeHandler}\r\n                                    name=\"flexRadioDefault\" />\r\n\r\n                                <label className=\"form-check-label\" htmlFor={item?.id}>\r\n                                    {item?.value}\r\n                                </label>\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </form>\r\n                </CardContent>\r\n\r\n                {!isInGroupQuestion ?\r\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n                        <button\r\n                            className='btn m-2 p-auto btn-danger text-white'\r\n                            variant=\"contained\"\r\n                            onClick={props.clickedPrevious}\r\n                            disabled={props.previousButtonDisabled}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n\r\n                        <button\r\n                            className='btn m-2 p-auto btn-primary text-white'\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                props.clickedNext(chosenOptionID, chosenAnswer, QuestionTypes.MCQ)\r\n                                props.studentAnswerFunction(props.questionIndex, chosenOptionID, chosenAnswer)\r\n                                setChosenOptionID(null)\r\n                            }}\r\n                        >\r\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                        </button>\r\n\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default MCQ;\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { useState } from 'react';\r\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\r\n\r\n// import { connect } from 'react-redux';\r\n// import { saveAnswer } from '../../../../redux/actions/QuestionActions'\r\n\r\nconst Essay = (props) => {\r\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\r\n\r\n\r\n    const [essayAnswer, setEssayAnswer] = useState('');\r\n    const essayChangedHandler = (event) => {\r\n        setEssayAnswer(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setEssayAnswer(props.question?.studentAnswer?.chosenAnswer || '')\r\n    }, []);\r\n\r\n    const retrieveOldAnswer = () => {\r\n        return essayAnswer\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isInGroupQuestion) return\r\n\r\n        props?.sentAnswerChanges(\r\n            { chosenOptionID: null, chosenAnswer: essayAnswer, questionType: QuestionTypes.ESSAY },\r\n            props?.questionIndex - 1,\r\n            props?.questionId\r\n        )\r\n    }, [essayAnswer])\r\n    return (\r\n        <div className=\"m-5 text-start \">\r\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\r\n                <CardContent>\r\n                    {/* Question Label */}\r\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\r\n                        {/* TODO, FETCH QUESTION NUMBER */}\r\n                        Question {props.questionIndex}\r\n                        <hr />\r\n                    </Typography>\r\n\r\n                    {/* Question Text */}\r\n                    <Typography className='m-3' variant='h5'>\r\n                        {props.question?.questionText}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                {/* Essay Text Field */}\r\n                <CardContent className=''>\r\n                    <TextField\r\n                        id=\"outlined-multiline\"\r\n                        label=\"Your Answer\"\r\n                        multiline\r\n                        rows={8}\r\n                        fullWidth\r\n                        value={essayAnswer}\r\n                        onChange={essayChangedHandler}\r\n                    />\r\n                </CardContent>\r\n\r\n                {!isInGroupQuestion ?\r\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\r\n                        <button\r\n                            className='btn m-2 p-auto btn-danger text-white'\r\n                            variant=\"contained\"\r\n                            disabled={props.previousButtonDisabled}\r\n                            onClick={() => {\r\n                                props.clickedPrevious()\r\n                                retrieveOldAnswer()\r\n                            }}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n\r\n                        <button\r\n                            className='btn m-2 p-auto btn-primary text-white'\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                const answer = essayAnswer\r\n                                props.clickedNext(null, answer, QuestionTypes.ESSAY)\r\n                                const nextAnswer = props.question?.studentAnswer?.chosenAnswer || ''\r\n                                setTimeout(() => {\r\n                                    setEssayAnswer(nextAnswer)\r\n\r\n                                }, 1000);\r\n                            }}\r\n                        >\r\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\r\n                        </button>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n                }\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Essay;\r\n","/**\n * random the order of a list\n * @param {Array} list \n * @returns shuffled list\n */\nconst shuffler = (list) => {\n    return list.sort(() => Math.random() - 0.5)\n}\n\nconst useListShuffler = () => {\n    return shuffler\n}\n\nexport default useListShuffler\n","import { useEffect, useState } from \"react\"\n\nconst useSwitchBrowserDetector = () => {\n    const [isBrowserHidden, setIsBrowserHidden] = useState(null)\n    useEffect(() => {\n        window.addEventListener('blur', () => {\n            setIsBrowserHidden(true)\n        })\n        window.addEventListener('focus', () => {\n            setIsBrowserHidden(false)\n        })\n        return () => {\n            window.removeEventListener('blur', () => { })\n            window.removeEventListener('focus', () => { })\n        }\n    }, [])\n\n    return isBrowserHidden\n}\n\nexport default useSwitchBrowserDetector\n","export default __webpack_public_path__ + \"static/media/cheat-inspector.4efbf1c5.png\";","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport InspectorCheaterImage from '../../assets/images/cheat-inspector.png'\n\nconst CheaterPopup = ({ isVisible, setVisibility, cheatReasons, cheaterImage }) => {\n\n    const handleClose = () => {\n        setVisibility(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isVisible}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle color='error' id=\"alert-dialog-title\">\n                    {\"CHEAT ATTEMPT !!\"}\n                </DialogTitle>\n                <DialogContent>\n                    <div className='d-flex'>\n                        {cheaterImage ?\n                            <img className='w-50' alt='cheater' src={cheaterImage} />\n                            :\n                            null\n                        }\n                        <img className={cheaterImage ? 'w-50' : 'w-100'} alt='detector' src={InspectorCheaterImage} />\n                    </div>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        You're trying to cheat by <b className='text-uppercase'>{cheatReasons?.join(' & ')}</b> and we have reported that attempt to your instructor.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button color='error' onClick={handleClose} autoFocus>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default CheaterPopup\n","import React, { useEffect, useState } from 'react'\nimport styles from './ExamCounter.module.css'\n\nconst _withLeadingZero = (number) => {\n    return number < 10 ? `0${number}` : number\n}\nconst ExamCounter = ({ numberOfSecs = 1, onFinish = () => { } }) => {\n    const [remainingSeconds, setremainingSeconds] = useState(numberOfSecs)\n    const hours = Math.floor(remainingSeconds / (60 * 60))\n    const mins = Math.floor(remainingSeconds / (60))\n\n    useEffect(() => {\n        if(!numberOfSecs) return\n        let numberOfSeconds = remainingSeconds\n        let timer = setInterval(() => {\n            if (numberOfSeconds <= 0) {\n                clearInterval(timer)\n                onFinish()\n                return\n            }\n            setremainingSeconds(prevState => prevState - 1)\n            numberOfSeconds--\n        }, 1000);\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [numberOfSecs])\n\n    return (\n        <div>\n            <h1 className={styles.primaryText}>{`${_withLeadingZero(hours)}:${_withLeadingZero(mins%60)}:${_withLeadingZero(remainingSeconds % 60)}`}</h1>\n        </div>\n    )\n}\n\nexport default ExamCounter","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\n\nconst Formula = (props) => {\n    const isInGroupQuestion = Boolean(props?.sentAnswerChanges)\n\n    const [formulaAnswer, setFormulaAnswer] = useState('');\n    const formulaChangedHandler = (event) => {\n        setFormulaAnswer(event.target.value);\n    };\n\n    useEffect(() => {\n        setFormulaAnswer(props.question?.studentAnswer?.chosenAnswer || '')\n    }, []);\n\n    const retrieveOldAnswer = () => {\n        return formulaAnswer\n    }\n\n    useEffect(() => {\n        if (!isInGroupQuestion) return\n\n        props?.sentAnswerChanges(\n            { chosenOptionID: null, chosenAnswer: formulaAnswer, questionType: QuestionTypes.FORMULA },\n            props?.questionIndex - 1,\n            props?.questionId\n        )\n    }, [formulaAnswer])\n\n    return (\n        <div className=\"m-5 text-start \">\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                <CardContent>\n                    {/* Question Label */}\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\n                        {/* TODO, FETCH QUESTION NUMBER */}\n                        Question {props.questionIndex}\n                        <hr />\n                    </Typography>\n\n                    {/* Question Text */}\n                    <Typography className='m-3' variant='h5'>\n                        {props.question?.questionText}\n                    </Typography>\n                </CardContent>\n\n                {/* Formula Text Field */}\n                <CardContent className=''>\n                    <TextField\n                        id=\"outlined-multiline\"\n                        label=\"Your Answer\"\n                        fullWidth\n                        value={formulaAnswer}\n                        onChange={formulaChangedHandler}\n                    />\n                </CardContent>\n                \n                {!isInGroupQuestion ?\n                    <CardActions className='d-flex m-2 p-2 justify-content-between'>\n                        <button\n                            className='btn m-2 p-auto btn-danger text-white'\n                            variant=\"contained\"\n                            disabled={props.previousButtonDisabled}\n                            onClick={() => {\n                                props.clickedPrevious()\n                                retrieveOldAnswer()\n                            }}\n                        >\n                            Previous\n                        </button>\n\n                        <button\n                            className='btn m-2 p-auto btn-primary text-white'\n                            variant=\"contained\"\n                            onClick={() => {\n                                const answer = formulaAnswer\n                                props.clickedNext(null, answer, QuestionTypes.FORMULA)\n                                const nextAnswer = props.question?.studentAnswer?.chosenAnswer || ''\n                                setTimeout(() => {\n                                    setFormulaAnswer(nextAnswer)\n\n                                }, 1000);\n                            }}\n                        >\n                            {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\n                        </button>\n                    </CardActions>\n                    :\n                    null\n                }\n            </Card>\n        </div>\n\n    );\n}\n\nexport default Formula\n","import React, { useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { QuestionTypes } from '../../../../constants/QuestionTypes'\nimport Essay from '../Essay/Essay';\nimport MCQ from '../MCQ/MCQ';\nimport Formula from '../Formula/Formula';\n\nconst Group = (props) => {\n    const [groupAnswers, setGroupAnswers] = useState(null);\n    const groupAnswersChangesHandler = (answer, index, questionId) => {\n        if (!groupAnswers) return\n        setGroupAnswers(prevState => {\n            let newGroup = [...prevState]\n            newGroup[index] = { answer, questionId }\n            return newGroup\n        }\n        );\n    };\n\n    useEffect(() => {\n        //setGroupAnswers(props.question?.studentAnswer?.chosenAnswer || '')\n        setGroupAnswers(props?.question?.questions?.map(item => ''))\n    }, []);\n\n    const retrieveOldAnswer = () => {\n        return groupAnswers\n    }\n\n    return (\n        <div className=\"m-5 text-start \">\n\n            <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                <CardContent>\n                    {/* Question Label */}\n                    <Typography className='font-weight-bold' variant=\"h4\" component=\"div\">\n                        Question {props.questionIndex}\n                        <hr />\n                    </Typography>\n\n                    {/* Question Text */}\n                    <Typography className='m-3' variant='h5'>\n                        {props.question?.questionText}\n                    </Typography>\n                </CardContent>\n\n                {props?.question?.questions?.map((subQuestion, index) => {\n                    if (subQuestion?.type === QuestionTypes.ESSAY)\n                        return (\n                            <Essay\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                question={subQuestion}\n                                key={subQuestion?.id}\n                                questionId={subQuestion?.id}\n                            />\n                        )\n                    else if (subQuestion?.type === QuestionTypes.MCQ)\n                        return (\n                            <MCQ\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                key={subQuestion?.id}\n                                questionText={subQuestion.questionText}\n                                answers={subQuestion.options}\n                                questionId={subQuestion?.id}\n                                savedStudentAnswer={subQuestion?.studentAnswer}\n                            />\n                        )\n\n                    else if (subQuestion?.type === QuestionTypes.FORMULA)\n                        return (\n                            <Formula\n                                sentAnswerChanges={groupAnswersChangesHandler}\n                                questionIndex={index + 1}\n                                question={subQuestion}\n                                key={subQuestion?.id}\n                                questionId={subQuestion?.id}\n                            />\n                        )\n                })\n                }\n\n                <CardActions className='d-flex m-2 p-2 justify-content-between'>\n                    <button\n                        className='btn m-2 p-auto btn-danger text-white'\n                        variant=\"contained\"\n                        disabled={props.previousButtonDisabled}\n                        onClick={() => {\n                            props.clickedPrevious()\n                            retrieveOldAnswer()\n                        }}\n                    >\n                        Previous\n                    </button>\n\n                    <button\n                        className='btn m-2 p-auto btn-primary text-white'\n                        variant=\"contained\"\n                        onClick={() => {\n                            props.clickedNext(null, groupAnswers, QuestionTypes.GROUP)\n                        }}\n                    >\n                        {props.changeNextNameIntoFinish ? \"Finish Exam\" : \"Next\"}\n                    </button>\n                </CardActions>\n            </Card>\n\n        </div >\n    );\n}\n\n\nexport default Group;\n","import React, { useEffect, useRef } from 'react';\r\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport MCQ from '../Questions/MCQ/MCQ';\r\nimport { ExamServices } from '../../../apis/Services/ExamService';\r\nimport { useState } from 'react';\r\nimport HandleErrors from '../../../hooks/handleErrors';\r\nimport showSuccessMsg from '../../../hooks/showSuccessMsg';\r\nimport { useParams } from 'react-router-dom';\r\nimport Essay from '../Questions/Essay/Essay';\r\n\r\nimport { QuestionTypes } from '../../../constants/QuestionTypes';\r\nimport useListShuffler from '../../../hooks/useListShuffler';\r\nimport useSwitchBrowserDetector from '../../../hooks/useSwitchBrowserDetector';\r\nimport CheaterPopup from '../../../Components/CheaterPopup/CheaterPopup';\r\nimport Webcam from 'react-webcam';\r\nimport ExamCounter from '../../../Components/ExamCounter/ExamCounter';\r\nimport { CheatServices } from '../../../apis/Services/CheatService';\r\nimport moment from 'moment';\r\nimport Formula from '../Questions/Formula/Formula';\r\nimport Group from '../Questions/Group/Group';\r\n\r\nconst MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK = 10\r\nconst _getMinsFromDuration = (duration) => {\r\n    if (!duration) return null\r\n    let durationList = duration?.split(':')\r\n    let mins = Number(durationList[0]) * 60 + Number(durationList[1])\r\n    return mins\r\n}\r\nconst _getRandomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nconst TakeExam = (props) => {\r\n    const params = useParams()\r\n    const exam = props.location.state?.exam || { id: params.examId, name: 'Continoue The Exam' }\r\n    const [questions, setQuestions] = useState(null);\r\n    const [currentQuestionNumber, setCurrentQuestionNumber] = useState(0);\r\n\r\n    const shuffler = useListShuffler()\r\n    const randomChoices = (choices) => {\r\n        return shuffler(choices)\r\n    }\r\n    const randomQuestions = (questions) => {\r\n        return shuffler(questions)\r\n    }\r\n\r\n    const [examInfo, setExamInfo] = useState(null)\r\n    const [examOptions, setExamOptions] = useState(null)\r\n    const [endExamTime, setEndExamTime] = useState(null)\r\n\r\n    /** getting exam config */\r\n    useEffect(() => {\r\n        ExamServices.getExamConfig(exam.id)\r\n            .then(res => {\r\n                setExamOptions(res.configuration)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting exam info*/\r\n    useEffect(() => {\r\n        ExamServices.getExamInfo(exam.id)\r\n            .then(res => {\r\n                setExamInfo(res.exam)\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }, [])\r\n\r\n    /** getting questions */\r\n    useEffect(() => {\r\n        if (!examOptions) return\r\n\r\n        let responseQuestions;\r\n        ExamServices.getExamQuestions(exam.id)\r\n            .then((response) => {\r\n                responseQuestions = response.questions\r\n                return ExamServices.getStudentExamAnswers(exam.id)\r\n            })\r\n            .then(res => {\r\n                setEndExamTime(res?.endTime)\r\n\r\n                // Formatting answer array stage\r\n                let formatedAnswers = {}\r\n                res?.answers.forEach((answer) => {\r\n                    formatedAnswers[answer.question_id] = { chosenOptionID: answer.option_id, chosenAnswer: answer.studentAnswer }\r\n                })\r\n                //formated question stage\r\n                let formatedQuestions = responseQuestions.map((question) => {\r\n                    if (question?.type === QuestionTypes.GROUP) {\r\n                        let newQuestionsForThisGroupQuestion = [];\r\n                        question?.questions?.forEach(element => {\r\n                            let thisQuestionAnswer = formatedAnswers?.[element.id]\r\n                            let formatedQuestion;\r\n\r\n                            if (!thisQuestionAnswer)\r\n                                formatedQuestion = element\r\n                            else\r\n                                formatedQuestion = { ...element, studentAnswer: thisQuestionAnswer }\r\n\r\n                            newQuestionsForThisGroupQuestion.push(formatedQuestion)\r\n                        });\r\n\r\n                        return { ...question, questions: newQuestionsForThisGroupQuestion }\r\n                    }\r\n\r\n                    let thisQuestionAnswer = formatedAnswers?.[question.id]\r\n                    if (!thisQuestionAnswer) return question\r\n\r\n                    let formatedQuestion = { ...question, studentAnswer: thisQuestionAnswer }\r\n                    return formatedQuestion\r\n                })\r\n                /** Randomize choices */\r\n                formatedQuestions = formatedQuestions?.map(item => {\r\n                    if (item?.type === QuestionTypes.MCQ)\r\n                        return { ...item, answers: randomChoices(item?.options) }\r\n                    else\r\n                        return item\r\n                })\r\n\r\n                /** Randomize Question */\r\n                if (examOptions?.questionsRandomOrder)\r\n                    formatedQuestions = randomQuestions(formatedQuestions)\r\n\r\n                setQuestions([...formatedQuestions])\r\n            })\r\n            .catch((error) => {\r\n                HandleErrors(error)\r\n            })\r\n    }, [exam.id, examOptions]);\r\n\r\n    /** Timer to sent cheat reports */\r\n    let timer;\r\n    let examDurationInSecs = Number(moment(endExamTime).diff(moment(), 'seconds'))\r\n    let examDurationInMins = Math.ceil(examDurationInSecs / 60);\r\n    const [totalCountedMins, setTotalCountedMins] = useState(0)\r\n    const [lastRandomMin, setLastRandomMin] = useState(1)\r\n    const activateJobWithRandomTriggerTimer = (RandomMins, callback = () => { }) => {\r\n        timer = setTimeout(() => {\r\n            setTotalCountedMins(prevState => prevState + RandomMins)\r\n            setLastRandomMin(RandomMins)\r\n            callback()\r\n        }, RandomMins * 60 * 1000);\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"hiii\", totalCountedMins, examDurationInMins)\r\n        if (!examDurationInMins) return\r\n        if (totalCountedMins >= examDurationInMins) return\r\n        let randomMins = 1 /*_getRandomNumber(1, Math.min(MIN_INTERVAL_TIME_TO_DO_CHEAT_CHECK, (examDurationInMins - lastRandomMin + 1)))*/\r\n        console.log(\"RANDOM MIN AFTER FACE CHECKING\", randomMins)\r\n\r\n        activateJobWithRandomTriggerTimer(randomMins, () => {\r\n            examOptions?.faceDetection && reportFaceDetectionCheater()\r\n            examOptions?.faceRecognition && reportFaceRecognationCheater()\r\n        })\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [totalCountedMins, examDurationInMins])\r\n\r\n\r\n    const [cheatReasons, setCheatReasons] = useState([])\r\n    const [cheaterImage, setCheaterImage] = useState(null)\r\n    const [isCheaterPopVisible, setIsCheaterPopVisible] = useState(null)\r\n\r\n    /** Switch Browser detector */\r\n    const isBrowserSwitched = useSwitchBrowserDetector()\r\n    const reportSwitchBrowserCheater = () => {\r\n        CheatServices.sentSwitchBrowserCheatAttempt(exam.id)\r\n            .then(res => {\r\n                setIsCheaterPopVisible(true)\r\n                setCheatReasons(prevState => Array.from(new Set([...prevState, 'Switching the browser'])))\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        if (!isBrowserSwitched) return\r\n        examOptions?.disableSwitchBrowser && reportSwitchBrowserCheater()\r\n    }, [isBrowserSwitched])\r\n\r\n    /** Face detection detector */\r\n    const reportFaceDetectionCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceDetectionData = {\r\n            \"image\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceDetection(faceDetectionData)\r\n            if (Number(response.numberOfFaces) === 1) return\r\n            let faceDetectionResult = await CheatServices.sentFaceDetectionCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, faceDetectionResult?.numberOfFaces? 'Multi face detection':'Cannot detect any face'])))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /** Face recognation detector */\r\n    const reportFaceRecognationCheater = async () => {\r\n        let capturePhotoFromWebcam = webcamRef?.current?.getScreenshot()\r\n        let faceVerificationData = {\r\n            \"image1\": capturePhotoFromWebcam,\r\n            \"examId\": exam.id\r\n        }\r\n        try {\r\n            let response = await ExamServices.applyFaceVerification(faceVerificationData)\r\n            if (response.verified) return\r\n            await CheatServices.sentFaceRecognationCheatAttempt(exam.id, response?.image)\r\n            setCheaterImage(capturePhotoFromWebcam)\r\n            setIsCheaterPopVisible(true)\r\n            setCheatReasons(prevState => Array.from(new Set([...prevState, 'Face unvalidity'])))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    /** Sending Answers and go to next question */\r\n    const _successSentAnswerResonse = () => {\r\n        // Go to next question by increasing currentQuestionNumber (if it's not in the last question) \r\n        const newQuestionNumber = currentQuestionNumber + 1\r\n        // If we are in the last question, then we should refer to the Done Page\r\n        if (newQuestionNumber === questions.length) {\r\n            ExamServices.submitExam(exam.id)\r\n                .then(res => {\r\n                    showSuccessMsg(\"Exam has been submitted successfully\")\r\n                    props.history.push({\r\n                        pathname: '/done',\r\n                        state: { examName: exam.name }\r\n                    })\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n            return\r\n        }\r\n        showSuccessMsg(\"Answer Saved Successfully\")\r\n\r\n        // advance to the next question\r\n        setCurrentQuestionNumber(newQuestionNumber)\r\n    }\r\n    const _saveAnswer = (chosenOptionID, chosenAnswer) => {\r\n        let newQuestions = [...questions]\r\n        let currentQuestion = newQuestions[currentQuestionNumber]\r\n        // Normal Question\r\n        if (!Array.isArray(chosenAnswer)) {\r\n            currentQuestion = { ...currentQuestion, studentAnswer: { chosenOptionID, chosenAnswer } }\r\n            newQuestions[currentQuestionNumber] = { ...currentQuestion }\r\n        }\r\n        // Group Question\r\n        else {\r\n            let newQuestionsForThisGroupQuestion = [];\r\n            currentQuestion?.questions.forEach(element => {\r\n                let thisQuestionAnswer = chosenAnswer.find(item => item.questionId === element.id)\r\n                let formatedQuestion;\r\n\r\n                if (!thisQuestionAnswer)\r\n                    formatedQuestion = element\r\n                else\r\n                    formatedQuestion = { ...element, studentAnswer: thisQuestionAnswer.answer }\r\n\r\n                newQuestionsForThisGroupQuestion.push(formatedQuestion)\r\n            });\r\n            newQuestions[currentQuestionNumber]['questions'] = newQuestionsForThisGroupQuestion\r\n        }\r\n        setQuestions(newQuestions)\r\n    }\r\n    const clickedNextHandler = (chosenOptionID, chosenAnswer, questionType) => {\r\n        if (!chosenAnswer) {\r\n            _successSentAnswerResonse()\r\n            return\r\n        } //has no answer\r\n\r\n        let answerData = {}\r\n        if (questionType === QuestionTypes.MCQ) {\r\n            answerData = {\r\n                \"option_id\": chosenOptionID,\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n            }\r\n        }\r\n        else if (questionType === QuestionTypes.ESSAY) {\r\n            answerData = {\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n\r\n            }\r\n        }\r\n        else if (questionType === QuestionTypes.FORMULA) {\r\n            answerData = {\r\n                \"studentAnswer\": chosenAnswer,\r\n                \"question_id\": questions[currentQuestionNumber].id,\r\n                \"exam_id\": exam.id\r\n            }\r\n        }\r\n        else if (questionType == QuestionTypes.GROUP) {\r\n            let questionPromises = chosenAnswer?.map(item => {\r\n                if (!item?.answer?.chosenAnswer) return // has no answer\r\n\r\n                let answerData = {\r\n                    \"studentAnswer\": item?.answer?.chosenAnswer,\r\n                    \"question_id\": item?.questionId,\r\n                    \"exam_id\": exam.id\r\n                }\r\n                if (item?.answer?.chosenOptionID)\r\n                    answerData[\"option_id\"] = item?.answer?.chosenOptionID\r\n\r\n                return ExamServices.addAnswer(answerData)\r\n            })\r\n\r\n            questionPromises = questionPromises.filter(item => Boolean(item))\r\n            Promise.all(questionPromises)\r\n                .then(res => {\r\n                    _saveAnswer(null, chosenAnswer)\r\n                    _successSentAnswerResonse()\r\n                })\r\n                .catch(err => HandleErrors(err))\r\n\r\n            return\r\n        }\r\n        ExamServices.addAnswer(answerData)\r\n            .then(() => {\r\n                _saveAnswer(chosenOptionID, chosenAnswer)\r\n                _successSentAnswerResonse()\r\n            }).catch((err) => HandleErrors(err))\r\n    }\r\n\r\n    const clickedPreviousHandler = () => {\r\n        // Go to previous question by decreasing currentQuestionNumber \r\n        setCurrentQuestionNumber(currentQuestionNumber - 1)\r\n    }\r\n\r\n    const getAnswer = (questionIndex, chosenOptionID, chosenAnswer) => {\r\n        setQuestions((prevState) => {\r\n            let newQuestions = [...prevState]\r\n            newQuestions[questionIndex - 1] = {\r\n                ...newQuestions[questionIndex - 1],\r\n                studentAnswer: {\r\n                    chosenOptionID,\r\n                    chosenAnswer\r\n                }\r\n            }\r\n            return newQuestions\r\n        })\r\n    }\r\n\r\n    const onTimerFinishHanlder = () => {\r\n        ExamServices.submitExam(exam.id)\r\n            .then(res => {\r\n                showSuccessMsg(\"Exam has been submitted successfully\")\r\n                props.history.push({\r\n                    pathname: '/done',\r\n                    state: { examName: exam.name }\r\n                })\r\n            })\r\n            .catch(err => HandleErrors(err))\r\n    }\r\n\r\n    const My_Questions_Markup = questions?.map((question, index) => {\r\n        if (question?.type === QuestionTypes.ESSAY) {\r\n            return (\r\n                <Essay\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={props.questionIndex}\r\n                />\r\n            );\r\n        }\r\n        else if (question?.type === QuestionTypes.MCQ) {\r\n            return (\r\n                <MCQ\r\n                    questionIndex={index + 1}\r\n\r\n                    currentQuestionNumber={currentQuestionNumber}\r\n                    key={question?.id}\r\n\r\n                    questionText={question.questionText}\r\n                    answers={question.answers}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    studentAnswerFunction={getAnswer}\r\n\r\n                    savedStudentAnswer={question?.studentAnswer}\r\n                />\r\n            )\r\n        }\r\n        else if (question?.type === QuestionTypes.FORMULA) {\r\n            return (\r\n                <Formula\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={question?.id}\r\n                />\r\n            )\r\n        }\r\n\r\n        else if (question?.type === QuestionTypes.GROUP) {\r\n            return (\r\n                <Group\r\n                    questionIndex={index + 1}\r\n                    question={question}\r\n\r\n                    clickedNext={clickedNextHandler}\r\n                    clickedPrevious={clickedPreviousHandler}\r\n                    previousButtonDisabled={currentQuestionNumber === 0}\r\n                    changeNextNameIntoFinish={index === questions.length - 1}\r\n\r\n                    key={question?.id}\r\n                />\r\n            )\r\n        }\r\n        return null\r\n    })\r\n\r\n    const videoRecorderIsShown = examOptions?.faceDetection || examOptions?.faceRecognition\r\n    const webcamRef = useRef(null)\r\n    return (\r\n        <div>\r\n            {examDurationInSecs ?\r\n                <div className='bg-light p-2 rounded shadow' style={{ position: 'fixed', top: 0, left: '50%', zIndex: 10, transform: 'translateX(-50%)' }}>\r\n                    <ExamCounter onFinish={onTimerFinishHanlder} numberOfSecs={examDurationInSecs} />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n            <div className=\"d-flex justify-content-center\">\r\n                {videoRecorderIsShown ?\r\n                    <Webcam\r\n                        audio={false}\r\n                        height={360}\r\n                        ref={webcamRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n            <div className=\"row justify-content-center text-center my-5\">\r\n                <div className=\"col-md-8 col-12\">\r\n                    <CardComponent title={exam.name}>\r\n                        {My_Questions_Markup?.[currentQuestionNumber]}\r\n                    </CardComponent>\r\n                </div>\r\n            </div>\r\n\r\n            <CheaterPopup\r\n                isVisible={isCheaterPopVisible}\r\n                setVisibility={(value) => {\r\n                    setIsCheaterPopVisible(value)\r\n                    setCheatReasons([])\r\n                    setCheaterImage(null)\r\n                }}\r\n                cheatReasons={cheatReasons}\r\n                cheaterImage={cheaterImage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(TakeExam);\r\n","import ExamInstructions from \"../Views/Student/ExamInstructions/ExamInstructions\"\r\nimport MyResults from \"../Views/Student/MyResults\"\r\nimport ResultDetails from \"../Views/Student/ResultDetails\"\r\nimport ShowExams from \"../Views/Student/ShowExams/ShowExams\"\r\nimport TakeExam from \"../Views/Student/TakeExam/TakeExam\"\r\nimport WellDone from \"../Views/Student/WellDone/WellDone\"\r\n\r\nconst StudentRoutes =\r\n    [\r\n        { path: '/exams', component: ShowExams, exact: true },\r\n        { path: \"/exams/:examId\", component: ExamInstructions, exact: true },\r\n        { path: \"/exams/:examId/start\", component: TakeExam, exact: true },\r\n        { path: \"/done\", component: WellDone, exact: true },\r\n        { path: \"/my-results\", component: MyResults, exact: true },\r\n        { path: \"/my-results/:examId\", component: ResultDetails, exact: true }\r\n    ]\r\nexport default StudentRoutes\r\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardComponent from '../../../Components/CardComponent/CardComponent';\nimport Typography from '@mui/material/Typography';\nconst WellDone = (props) => {\n    const examName = props.location.state.examName\n\n    return (\n        <div className=\"row justify-content-center text-center my-5\">\n            <div className='col-md-8 col-12'>\n\n                <CardComponent title={examName}>\n                    <div className=\"m-5 text-start text-center\">\n\n\n                        <Card className='shadow p-3 mb-5 bg-white rounded ' sx={{ minWidth: 275 }}>\n                            <CardContent>\n\n                                {/* Well Done Label */}\n                                <Typography className='font-weight-bold ' variant=\"h3\" component=\"div\">\n\n                                    Well Done\n                                </Typography>\n\n\n                                {/* Hope Text */}\n                                <Typography className='m-3 text-success' variant='h4'>\n                                    We hope you done well in this exam and best wishes for next....!\n                                </Typography>\n\n                            </CardContent>\n\n\n                            <button\n                                className='btn m-2 p-auto btn-primary text-white'\n                                onClick={() => {props.history.push('/')}}\n                            >\n                                Homepage\n\n\n                            </button>\n\n\n\n                        </Card>\n                    </div>\n                </CardComponent>\n            </div>\n        </div >\n    )\n}\nexport default WellDone;\n","import DomainUrl from \"../Domain\";\n\nexport const INSTRUCTOR_ENDPOINTS = {\n    register: {\n        url: `${DomainUrl}/instructors/register`,\n        method: 'POST',\n    },\n    getMyProfile:{\n        url: `${DomainUrl}/instructors/me`,\n        method:'GET'\n    }\n};\n\n","import { INSTRUCTOR_ENDPOINTS } from \"../Endpoints/InstructorEndpoints\";\nimport { Network } from \"../Network\";\n\nexport class InstructorServices {\n    // sign up\n    static register(values) {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.register.url, {\n            body: JSON.stringify(values),\n            method: INSTRUCTOR_ENDPOINTS.register.method,\n        });\n    }\n\n    // get my profile\n    static getMyProfile() {\n        return Network.fetch(INSTRUCTOR_ENDPOINTS.getMyProfile.url, {\n            method: INSTRUCTOR_ENDPOINTS.getMyProfile.method,\n        }, true);\n    }\n}","import React, { useEffect, useState } from 'react'\nimport './InstructorProfile.css'\nimport { InstructorServices } from '../../../apis/Services/InstructorService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst InstructorProfile = () => {\n\n    const [instructorData, setInstructorData] = useState(null)\n    useEffect(() => {\n        InstructorServices.getMyProfile()\n            .then(res => {\n                setInstructorData(res.instructor)\n            })\n            .catch(err => HandleErrors(err))\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (instructorData &&\n        <div className=\"Profile_I mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img style={{objectFit:'contain'}} src={imageResolver(instructorData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row align-items-center mt-2\">\n                        <h2>{`${instructorData?.user?.firstName} ${instructorData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary\">{instructorData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.phone}</h4>\n                        </div>\n\n                        {/* DEGREE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Degree: </span>\n                            <h4 className=\"infoText m-0 px-2\">{instructorData?.degree}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{instructorData?.user?.gender}</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InstructorProfile\n","import Home from \"../Views/Home/Home\"\r\nimport InstructorProfile from \"../Views/Profiles/Instructor-Profile/InstructorProfile\"\r\nimport StudentProfile from \"../Views/Profiles/Student-Profile/StudentProfile\"\r\nconst UserRoutes =\r\n    [\r\n        { path: '/home', component: Home, exact: true },\r\n        { path: \"/profile/student\", component: StudentProfile, exact: true },\r\n        { path: \"/profile/instructor\", component: InstructorProfile, exact: true }\r\n    ]\r\nexport default UserRoutes\r\n","import React, { useEffect, useState } from 'react'\nimport './StudentProfile.css'\nimport { StudentServices } from '../../../apis/Services/StudentService'\nimport useImageResolver from '../../../hooks/useImageResolver'\nimport HandleErrors from '../../../hooks/handleErrors'\n\nconst StudentProfile = () => {\n\n    const [studentData, setStudentData] = useState(null)\n    useEffect(() => {\n        StudentServices.getMyProfile()\n            .then(res => {\n                setStudentData(res.student)\n            })\n            .catch(err => HandleErrors(err))\n\n    }, [])\n\n    const imageResolver = useImageResolver()\n    return (studentData &&\n        <div className=\"Profile_S mt-5\" style={{ minHeight: '100vh' }}>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"d-flex flex-column align-items-center ProfileCard w-100 p-3\">\n                    {/* IMAGE AND NAME */}\n                    <img style={{objectFit:'contain'}} src={imageResolver(studentData?.user?.image)} alt=\"User\" />\n                    <div className=\"d-flex flex-column flex-md-row mt-2\">\n                        <h2>{`${studentData?.user?.firstName} ${studentData?.user?.lastName}`}</h2>\n                        <div className=\"mx-2\">\n                            <span className=\"badge badge-secondary text-capitalize\">{studentData?.user?.type}</span>\n                        </div>\n                    </div>\n\n                    {/* INFO PART */}\n                    <div style={{ marginTop: 95, width: '100%' }} className=\"px-lg-5\">\n                        {/* EMAIL */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Email: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.user?.email}</h4>\n                        </div>\n\n                        {/* phone */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Phone: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.phone}</h4>\n                        </div>\n\n                        {/* CODE */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Code: </span>\n                            <h4 className=\"infoText m-0 px-2\">{studentData?.studentCode}</h4>\n                        </div>\n\n                        {/* Gender */}\n                        <div className=\"d-flex flex-lg-row justify-content-lg-start align-items-center flex-column align-items-center w-100 my-3\">\n                            <span className=\"pr-2\">Gender: </span>\n                            <h4 className=\"infoText m-0 px-2 text-capitalize\">{studentData?.user?.gender}</h4>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentProfile\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport AuthRoutes from './AuthRoutes'\r\nimport InstructorRoutes from './InstructorRoutes'\r\nimport MainRoutes from './MainRoutes'\r\nimport StudentRoutes from './StudentRoutes'\r\nimport UserRoutes from './UserRoutes'\r\n\r\nconst Routes = () => {\r\n    const userType = useSelector(state=>state.auth.userType) || localStorage.getItem('userType')\r\n    return (\r\n        <Switch>\r\n            {MainRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {AuthRoutes.map((props, index) => <Route key={index}{...props} />)}\r\n\r\n            {/* FOR ANY USER */}\r\n            {userType && UserRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR INSTRUCTOR */}\r\n            {userType === 'instructor' && InstructorRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            {/* ONLY FOR STUDENT */}\r\n            {userType === 'student' && StudentRoutes.map((props, index) => <Route key={index} {...props} />)}\r\n\r\n            <Redirect to={'/login'} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { hideAlert } from '../../redux/actions/AppActions';\nimport { Button } from '@mui/material';\n\nconst Alert = () => {\n    const alertObject = useSelector(state => state.app.alertObject)\n    const dispatch = useDispatch()\n    const closeHandler = () => {\n        dispatch(hideAlert())\n    }\n    const confirmHandler = () => {\n        alertObject?.alertFunction()\n    }\n\n    return (\n        <Dialog\n            open={Boolean(alertObject?.header)}\n            onClose={closeHandler}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {alertObject?.header}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {alertObject?.details}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} autoFocus>Cancel</Button>\n                <Button color='error' onClick={confirmHandler}>\n                    Yes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Alert","import { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Header from './Components/Header/Header';\r\nimport { setUserType, signin } from \"./redux/actions/AuthActions\";\r\nimport Toast from './Components/Toast'\r\nimport Routes from \"./routes\";\r\nimport Alert from \"./Components/Dialogs/Alert\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const _bootstrapFunction = useCallback(() => {\r\n    let isAuth = localStorage.getItem('token');\r\n    let userType = localStorage.getItem('userType');\r\n\r\n    if (!isAuth) return\r\n    if (!userType) return\r\n    \r\n    // TODO: Check token with an endpoint\r\n    dispatch(signin(isAuth))\r\n    dispatch(setUserType(userType))\r\n  }, [dispatch])\r\n\r\n  // Bootstrap function\r\n  useEffect(() => {\r\n    _bootstrapFunction();\r\n  }, [_bootstrapFunction])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Routes />\r\n      </div>\r\n\r\n      <Toast />\r\n      <Alert />\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: '#2F4F4F',\n        },\n        secondary: {\n            main: '#50303A',\n        },\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './Theme/MaterialUiTheme';\n\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <App />\n      </LocalizationProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryText\":\"ExamCounter_primaryText__1cTjU\"};"],"sourceRoot":""}